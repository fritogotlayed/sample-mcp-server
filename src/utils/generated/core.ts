export interface paths {
    "/community/listings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    offset?: number;
                    limit?: number;
                    center?: string;
                    facets?: string;
                    radius?: number;
                    search?: string;
                    sort?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: components["schemas"]["def-1"][];
                            facets?: components["schemas"]["def-2"];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/listings/expired": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/listings/inactive-owner": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/listings/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-1"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/community/listings/{interactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Community listing deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ai/interactions/{interactionId}/prompts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        name: string;
                        params?: {
                            [key: string]: unknown;
                        };
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            result: string;
                            /** Format: date-time */
                            createdAt: string;
                            fromCache: boolean;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/client-groups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    offset?: number;
                    limit?: number;
                    search?: string;
                    facets?: string;
                    sort?: string;
                    isGlobal?: boolean;
                    ids?: string;
                    needsAttention?: boolean;
                    includeFacetCountResults?: boolean;
                    includeContacts?: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: components["schemas"]["def-7"][];
                            facets?: {
                                [key: string]: {
                                    [key: string]: string;
                                };
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-4"];
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-7"];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/client-groups/{clientGroupId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    clientGroupId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-7"];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    clientGroupId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-5"];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-7"];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/client-groups/{clientGroupId}/agreement": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    clientGroupId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-8"];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/client-groups/{interactionId}/attachments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    type?: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/client-groups/{interactionId}/attachments/{attachmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    attachmentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    attachmentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Document deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    attachmentId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                        externalId?: null | string;
                        file: {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        /** Format: date-time */
                        updatedAt?: string;
                        rtdbEventTimestamp?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/client-groups/{interactionId}/attachments/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Upload attachments */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        names: string[];
                        type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            attachment: {
                                id: string;
                                type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                                file: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                interactionId: string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            };
                            uploadUrl: string;
                        }[];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lead-sources": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    name?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            requiresSpecify: boolean;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/lead-sources/{leadSourceId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    leadSourceId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            requiresSpecify: boolean;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    offset?: number;
                    limit?: number;
                    search?: string;
                    facets?: string;
                    sort?: string;
                    isGlobal?: boolean;
                    ids?: string;
                    needsAttention?: boolean;
                    includeFacetCountResults?: boolean;
                    includeContacts?: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: components["schemas"]["def-25"][];
                            facets?: {
                                [key: string]: {
                                    [key: string]: string;
                                };
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-21"];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-24"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{listingId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    listingId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-24"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    listingId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-39"];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-24"];
                    };
                };
            };
        };
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    listingId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Listing deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    listingId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-22"];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-24"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/listings/{listingId}/default-contacts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    listingId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            escrowOfficer?: null | ({
                                externalId?: null | string;
                                firstName?: null | string;
                                lastName?: null | string;
                                homePhone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                avatar?: null | string;
                                googleContactId?: null | string;
                                followUpBossContactId?: null | string;
                                userId?: null | string;
                                teamId?: null | string;
                                order?: number;
                                contactSource?: null | string;
                            } & {
                                companyName?: null | string;
                                escrowNumber?: null | string;
                                role?: null | string;
                            });
                            titleOfficer?: null | ({
                                externalId?: null | string;
                                firstName?: null | string;
                                lastName?: null | string;
                                homePhone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                avatar?: null | string;
                                googleContactId?: null | string;
                                followUpBossContactId?: null | string;
                                userId?: null | string;
                                teamId?: null | string;
                                order?: number;
                                contactSource?: null | string;
                            } & {
                                companyName?: null | string;
                                role?: null | string;
                                titleNumber?: null | string;
                            });
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{listingId}/offers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    status?: "acceptancePending" | "accepted" | "accepting" | "active" | "activeCont" | "backUp" | "buyerCountered" | "cancellationPending" | "cancelled" | "closed" | "counterOfferSent" | "countering" | "handshake" | "noStatus" | "pending" | "ratified" | "rejected" | "sellerCountered" | "underReview";
                    sort?: string;
                };
                header?: never;
                path: {
                    listingId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-36"][];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    listingId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-31"];
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-34"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{listingId}/offers/document-stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    listingId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-35"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{listingId}/offers/upload-contract": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    listingId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        name: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            offerId: string;
                            document: {
                                id: string;
                                name: string;
                                status: "active" | "inactive" | "draft" | "sent";
                                preOrder: number;
                                envelopeOrder: number;
                                interactionId: string;
                                propertyOptionGroupName: null | string;
                                isRequired: boolean;
                                isCustom?: boolean;
                                isTagged?: boolean;
                                answerCount: number;
                                isExternal?: null | boolean;
                                signedFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                documentTemplateId: null | string;
                                documentSourceTemplateId?: null | string;
                                documentVersionId: null | string;
                                documentSourceVersionId: null | string;
                                interactionEnvelopeId: null | string;
                                interactionEnvelope: null | {
                                    id: string;
                                    name: null | string;
                                    docusignEnvelopeId: null | string;
                                    status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                    isContractEnvelope: boolean;
                                    sentAt: null | string;
                                    completedAt: null | string;
                                    voidedAt: null | string;
                                    deliveredAt: null | string;
                                    declinedAt: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                    recipients: {
                                        id: string;
                                        docusignRecipientId: null | string;
                                        email: null | string;
                                        name: null | string;
                                        status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                        type: null | string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                        updatedBy: string;
                                    }[];
                                    unsignedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    signedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    voidedReason: null | string;
                                    declinedReason: null | string;
                                    voidedBy: null | string;
                                    declinedBy: null | string;
                                };
                                missingRequiredFields: number;
                                documentVersionFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    name?: null | string;
                                    fullPath?: string;
                                    img?: {
                                        url?: string;
                                    };
                                    inputs: ({
                                        id: string;
                                        isInjected: boolean;
                                    } & (components["schemas"]["def-47"] & {
                                        applyCommaSeparator?: null | boolean;
                                        color?: null | string;
                                        disabled?: null | boolean;
                                        dropdownOptions?: null | {
                                            value?: null | string;
                                            label?: null | string;
                                        }[];
                                        fontSize?: null | number;
                                        formula?: null | string;
                                        group?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        }[];
                                        height?: null | number;
                                        image?: null | ("Image Main" | "Image Alt");
                                        initialsGroup?: null | {
                                            top: number;
                                            left: number;
                                            recipientId: string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                        }[];
                                        isSyncEnabled?: boolean;
                                        left?: number | null;
                                        lineHeight?: null | number;
                                        maxLength?: null | string;
                                        multiline?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        };
                                        multilineValue?: null | string;
                                        name?: null | string;
                                        optional?: null | boolean;
                                        optionalSide?: null | string;
                                        options?: null | {
                                            left?: null | number;
                                            reportingName?: null | string;
                                            top?: null | number;
                                            value?: null | string;
                                            width?: null | number;
                                            tabIndex?: null | number;
                                        }[];
                                        pageId?: null | string;
                                        recipientId?: null | string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                        reportingName?: null | string;
                                        required?: null | boolean;
                                        suffix?: null | string;
                                        tabIndex?: null | number;
                                        targetFieldNames?: null | {
                                            [key: string]: string;
                                        };
                                        textAlign?: null | string;
                                        textIndent?: null | number;
                                        lastLineWidth?: null | number;
                                        top?: number | null;
                                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                        typeFace?: null | string;
                                        value?: null | string;
                                        width?: number | null;
                                    }))[];
                                }[];
                                image?: string;
                                /** Format: date-time */
                                createdAt: string;
                            };
                            uploadUrl: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{listingId}/offers/{offerId}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    listingId: string;
                    offerId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-32"];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-34"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{listingId}/offers/{offerId}/next-status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    listingId: string;
                    offerId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ("acceptancePending" | "accepted" | "accepting" | "active" | "activeCont" | "backUp" | "buyerCountered" | "cancellationPending" | "cancelled" | "closed" | "counterOfferSent" | "countering" | "handshake" | "noStatus" | "pending" | "ratified" | "rejected" | "sellerCountered" | "underReview")[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/attachments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    type?: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/attachments/{attachmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    attachmentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    attachmentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Document deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    attachmentId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                        externalId?: null | string;
                        file: {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        /** Format: date-time */
                        updatedAt?: string;
                        rtdbEventTimestamp?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/listings/{interactionId}/attachments/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Upload attachments */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        names: string[];
                        type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            attachment: {
                                id: string;
                                type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                                file: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                interactionId: string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            };
                            uploadUrl: string;
                        }[];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/files": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    type?: string;
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        externalId?: null | string;
                        file: {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        /** Format: date-time */
                        updatedAt?: string;
                        rtdbEventTimestamp?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/files/{fileId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Document deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        externalId?: null | string;
                        file: {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        /** Format: date-time */
                        updatedAt?: string;
                        rtdbEventTimestamp?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/listings/{interactionId}/files/images": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get interaction images */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/files/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Upload interaction images */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        names: string[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            image: {
                                id: string;
                                file: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                interactionId: string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            };
                            uploadUrl: string;
                        }[];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/contacts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    contactType?: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    completeInteractionModel?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ((({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }))[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        licenseNumber?: null | string;
                        licenseState?: null | string;
                        mlsId?: null | string;
                        officeNumber?: null | string;
                        jurisdiction?: null | string;
                        primaryMls?: null | string;
                        commission?: null | string;
                        sellingCommission?: null | string;
                        listingPeriod?: null | string;
                        teamId?: null | string;
                        teamName?: null | string;
                        teamAlias?: null | string;
                        teamBusinessLicenseEntityNumber?: null | string;
                        broker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        brokerage?: {
                            companyName?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            phone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            officeEmail?: null | string;
                            licenseNumber?: null | string;
                            jurisdiction?: null | string;
                            mlsCode?: null | string;
                            mlsId?: null | string;
                            taxId?: null | string;
                        };
                        officeManager?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        supervisingBroker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        title?: null | string;
                        entityType?: null | string;
                        isSuccessor?: null | string;
                        isSelfRepresented?: "true" | "false";
                        ownershipStatus?: null | string;
                        entity?: {
                            title?: null | string;
                            titleOther?: null | string;
                            entityName?: null | string;
                        };
                        powerOfAttorney?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            email?: null | string;
                        };
                        probate?: {
                            title?: null | string;
                            titleOther?: null | string;
                            estateName?: null | string;
                        };
                        trust?: {
                            title?: null | string;
                            titleOther?: null | string;
                            trustName?: null | string;
                        };
                        referralClientTypes?: {
                            referralBuyer: "true" | "false";
                            referralSeller: "true" | "false";
                            referralLandlord: "true" | "false";
                            referralTenant: "true" | "false";
                        };
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        escrowNumber?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        confirmationNumber?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                        titleNumber?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    });
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        });
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/contacts/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        });
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        licenseNumber?: null | string;
                        licenseState?: null | string;
                        mlsId?: null | string;
                        officeNumber?: null | string;
                        jurisdiction?: null | string;
                        primaryMls?: null | string;
                        commission?: null | string;
                        sellingCommission?: null | string;
                        listingPeriod?: null | string;
                        teamId?: null | string;
                        teamName?: null | string;
                        teamAlias?: null | string;
                        teamBusinessLicenseEntityNumber?: null | string;
                        broker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        brokerage?: {
                            companyName?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            phone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            officeEmail?: null | string;
                            licenseNumber?: null | string;
                            jurisdiction?: null | string;
                            mlsCode?: null | string;
                            mlsId?: null | string;
                            taxId?: null | string;
                        };
                        officeManager?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        supervisingBroker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        title?: null | string;
                        entityType?: null | string;
                        isSuccessor?: null | string;
                        isSelfRepresented?: "true" | "false";
                        ownershipStatus?: null | string;
                        entity?: {
                            title?: null | string;
                            titleOther?: null | string;
                            entityName?: null | string;
                        };
                        powerOfAttorney?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            email?: null | string;
                        };
                        probate?: {
                            title?: null | string;
                            titleOther?: null | string;
                            estateName?: null | string;
                        };
                        trust?: {
                            title?: null | string;
                            titleOther?: null | string;
                            trustName?: null | string;
                        };
                        referralClientTypes?: {
                            referralBuyer: "true" | "false";
                            referralSeller: "true" | "false";
                            referralLandlord: "true" | "false";
                            referralTenant: "true" | "false";
                        };
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        escrowNumber?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        confirmationNumber?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                        titleNumber?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    });
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        });
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Contact deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        licenseNumber?: null | string;
                        licenseState?: null | string;
                        mlsId?: null | string;
                        officeNumber?: null | string;
                        jurisdiction?: null | string;
                        primaryMls?: null | string;
                        commission?: null | string;
                        sellingCommission?: null | string;
                        listingPeriod?: null | string;
                        teamId?: null | string;
                        teamName?: null | string;
                        teamAlias?: null | string;
                        teamBusinessLicenseEntityNumber?: null | string;
                        broker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        brokerage?: {
                            companyName?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            phone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            officeEmail?: null | string;
                            licenseNumber?: null | string;
                            jurisdiction?: null | string;
                            mlsCode?: null | string;
                            mlsId?: null | string;
                            taxId?: null | string;
                        };
                        officeManager?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        supervisingBroker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        title?: null | string;
                        entityType?: null | string;
                        isSuccessor?: null | string;
                        isSelfRepresented?: "true" | "false";
                        ownershipStatus?: null | string;
                        entity?: {
                            title?: null | string;
                            titleOther?: null | string;
                            entityName?: null | string;
                        };
                        powerOfAttorney?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            email?: null | string;
                        };
                        probate?: {
                            title?: null | string;
                            titleOther?: null | string;
                            estateName?: null | string;
                        };
                        trust?: {
                            title?: null | string;
                            titleOther?: null | string;
                            trustName?: null | string;
                        };
                        referralClientTypes?: {
                            referralBuyer: "true" | "false";
                            referralSeller: "true" | "false";
                            referralLandlord: "true" | "false";
                            referralTenant: "true" | "false";
                        };
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | {
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        escrowNumber?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        confirmationNumber?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                        titleNumber?: null | string;
                    });
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        });
                    };
                };
            };
        };
        trace?: never;
    };
    "/listings/{interactionId}/documents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all interaction documents for an interaction */
        get: {
            parameters: {
                query?: {
                    offset?: number;
                    limit?: number;
                    facets?: string;
                    sort?: string;
                    status?: "active" | "inactive" | "draft" | "sent";
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: {
                                id: string;
                                name: string;
                                status: "active" | "inactive" | "draft" | "sent";
                                preOrder: number;
                                envelopeOrder: number;
                                interactionId: string;
                                propertyOptionGroupName: null | string;
                                isRequired: boolean;
                                isCustom?: boolean;
                                isTagged?: boolean;
                                answerCount: number;
                                isExternal?: null | boolean;
                                signedFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                documentTemplateId: null | string;
                                documentSourceTemplateId?: null | string;
                                documentVersionId: null | string;
                                documentSourceVersionId: null | string;
                                interactionEnvelopeId: null | string;
                                interactionEnvelope: null | {
                                    id: string;
                                    name: null | string;
                                    docusignEnvelopeId: null | string;
                                    status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                    isContractEnvelope: boolean;
                                    sentAt: null | string;
                                    completedAt: null | string;
                                    voidedAt: null | string;
                                    deliveredAt: null | string;
                                    declinedAt: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                    recipients: {
                                        id: string;
                                        docusignRecipientId: null | string;
                                        email: null | string;
                                        name: null | string;
                                        status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                        type: null | string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                        updatedBy: string;
                                    }[];
                                    unsignedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    signedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    voidedReason: null | string;
                                    declinedReason: null | string;
                                    voidedBy: null | string;
                                    declinedBy: null | string;
                                };
                                missingRequiredFields: number;
                                documentVersionFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                image?: string;
                                /** Format: date-time */
                                createdAt: string;
                            }[];
                            facets?: {
                                [key: string]: {
                                    [key: string]: string;
                                };
                            };
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        /** Create interaction documents by list of document template or pog ids */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        documents?: string[];
                        propertyOptionGroups?: string[];
                        userTemplates?: string[];
                        uploadedDocuments?: string[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                            uploadUrl?: string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/documents/{documentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get an interaction document by id */
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                };
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** Soft delete an interaction document by id */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Document deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Update an interaction document by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        externalId?: null | string;
                        name?: string;
                        status?: "active" | "inactive" | "draft" | "sent";
                        preOrder?: number;
                        envelopeOrder?: number;
                        propertyOptionGroupName?: null | string;
                        isRequired?: boolean;
                        documentVersionId?: string;
                        interactionEnvelopeId?: null | string;
                        interactionEnvelope?: null | ({
                            name?: null | string;
                            docusignEnvelopeId?: null | string;
                            status?: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                            isContractEnvelope?: boolean;
                            sentAt?: null | string;
                            completedAt?: null | string;
                            voidedAt?: null | string;
                            deliveredAt?: null | string;
                            declinedAt?: null | string;
                            rtdbEventTimestamp?: string;
                        } & {
                            recipients?: {
                                externalId?: null | string;
                                docusignRecipientId?: null | string;
                                email?: null | string;
                                name?: null | string;
                                status?: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type?: null | string;
                            }[];
                            unsignedFile?: null | {
                                name?: string;
                                bucket?: string;
                                filePath?: string;
                                fileType?: string;
                                uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason?: null | string;
                                contentType?: null | string;
                                customMetadata?: null | unknown;
                            };
                            signedFile?: null | {
                                name?: string;
                                bucket?: string;
                                filePath?: string;
                                fileType?: string;
                                uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason?: null | string;
                                contentType?: null | string;
                                customMetadata?: null | unknown;
                            };
                            voidedReason?: null | string;
                            declinedReason?: null | string;
                            voidedBy?: null | string;
                            declinedBy?: null | string;
                        });
                        rtdbEventTimestamp?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/listings/{interactionId}/documents/preview/{documentVersionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get an interaction document preview by documentVersionId */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentVersionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/documents/{documentId}/answers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of answers by interaction document id */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            externalId: null | string;
                            inputId: string;
                            value: unknown;
                            documentTemplatePageId: null | string;
                            interactionDocumentId: string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Add an answer to an interaction document input */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        pageId: string;
                        inputId: string;
                        value: string;
                    }[];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/listings/{interactionId}/documents/status/{status}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Soft delete documents by status */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    status: "active" | "inactive" | "draft" | "sent";
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Documents deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Update documents by status */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    status: "active" | "inactive" | "draft" | "sent";
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        status: "active" | "inactive" | "draft" | "sent";
                    };
                };
            };
            responses: {
                /** @description Documents status updated successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/listings/{interactionId}/documents/envelope-order": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Update document envelope orders by id
         * @description The envelopeOrder will be updated to the index of the document id in the documentIds array.
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        documentIds: string[];
                    };
                };
            };
            responses: {
                /** @description Document envelope orders updated successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/listings/{interactionId}/documents/{documentId}/pages/{pageId}/inputs/{inputId}/answer": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Add an answer to an interaction document input */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                    pageId: string;
                    inputId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        value: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            externalId: null | string;
                            inputId: string;
                            value: unknown;
                            documentTemplatePageId: null | string;
                            interactionDocumentId: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/listings/{interactionId}/documents/{documentId}/pages/{pageId}/inputs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add an interaction document input */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                    pageId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-47"] & {
                        applyCommaSeparator?: null | boolean;
                        color?: null | string;
                        disabled?: null | boolean;
                        dropdownOptions?: null | {
                            value?: null | string;
                            label?: null | string;
                        }[];
                        fontSize?: null | number;
                        formula?: null | string;
                        group?: null | {
                            inputIdx: string;
                            pageIdx: number;
                        }[];
                        height?: null | number;
                        image?: null | ("Image Main" | "Image Alt");
                        initialsGroup?: null | {
                            top: number;
                            left: number;
                            recipientId: string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                        }[];
                        isSyncEnabled?: boolean;
                        left?: number | null;
                        lineHeight?: null | number;
                        maxLength?: null | string;
                        multiline?: null | {
                            inputIdx: string;
                            pageIdx: number;
                        };
                        multilineValue?: null | string;
                        name?: null | string;
                        optional?: null | boolean;
                        optionalSide?: null | string;
                        options?: null | {
                            left?: null | number;
                            reportingName?: null | string;
                            top?: null | number;
                            value?: null | string;
                            width?: null | number;
                            tabIndex?: null | number;
                        }[];
                        pageId?: null | string;
                        recipientId?: null | string;
                        recipientName?: null | string;
                        recipientRole?: null | string;
                        reportingName?: null | string;
                        required?: null | boolean;
                        suffix?: null | string;
                        tabIndex?: null | number;
                        targetFieldNames?: null | {
                            [key: string]: string;
                        };
                        textAlign?: null | string;
                        textIndent?: null | number;
                        lastLineWidth?: null | number;
                        top?: number | null;
                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                        typeFace?: null | string;
                        value?: null | string;
                        width?: number | null;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            isInjected: boolean;
                        } & (components["schemas"]["def-47"] & {
                            applyCommaSeparator?: null | boolean;
                            color?: null | string;
                            disabled?: null | boolean;
                            dropdownOptions?: null | {
                                value?: null | string;
                                label?: null | string;
                            }[];
                            fontSize?: null | number;
                            formula?: null | string;
                            group?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            }[];
                            height?: null | number;
                            image?: null | ("Image Main" | "Image Alt");
                            initialsGroup?: null | {
                                top: number;
                                left: number;
                                recipientId: string;
                                recipientName?: null | string;
                                recipientRole?: null | string;
                            }[];
                            isSyncEnabled?: boolean;
                            left?: number | null;
                            lineHeight?: null | number;
                            maxLength?: null | string;
                            multiline?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            };
                            multilineValue?: null | string;
                            name?: null | string;
                            optional?: null | boolean;
                            optionalSide?: null | string;
                            options?: null | {
                                left?: null | number;
                                reportingName?: null | string;
                                top?: null | number;
                                value?: null | string;
                                width?: null | number;
                                tabIndex?: null | number;
                            }[];
                            pageId?: null | string;
                            recipientId?: null | string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                            reportingName?: null | string;
                            required?: null | boolean;
                            suffix?: null | string;
                            tabIndex?: null | number;
                            targetFieldNames?: null | {
                                [key: string]: string;
                            };
                            textAlign?: null | string;
                            textIndent?: null | number;
                            lastLineWidth?: null | number;
                            top?: number | null;
                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                            typeFace?: null | string;
                            value?: null | string;
                            width?: number | null;
                        });
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/documents/{documentId}/pages/{pageId}/inputs/{inputId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update an interaction document input */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                    pageId: string;
                    inputId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-47"] & {
                        applyCommaSeparator?: null | boolean;
                        color?: null | string;
                        disabled?: null | boolean;
                        dropdownOptions?: null | {
                            value?: null | string;
                            label?: null | string;
                        }[];
                        fontSize?: null | number;
                        formula?: null | string;
                        group?: null | {
                            inputIdx: string;
                            pageIdx: number;
                        }[];
                        height?: null | number;
                        image?: null | ("Image Main" | "Image Alt");
                        initialsGroup?: null | {
                            top: number;
                            left: number;
                            recipientId: string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                        }[];
                        isSyncEnabled?: boolean;
                        left?: number | null;
                        lineHeight?: null | number;
                        maxLength?: null | string;
                        multiline?: null | {
                            inputIdx: string;
                            pageIdx: number;
                        };
                        multilineValue?: null | string;
                        name?: null | string;
                        optional?: null | boolean;
                        optionalSide?: null | string;
                        options?: null | {
                            left?: null | number;
                            reportingName?: null | string;
                            top?: null | number;
                            value?: null | string;
                            width?: null | number;
                            tabIndex?: null | number;
                        }[];
                        pageId?: null | string;
                        recipientId?: null | string;
                        recipientName?: null | string;
                        recipientRole?: null | string;
                        reportingName?: null | string;
                        required?: null | boolean;
                        suffix?: null | string;
                        tabIndex?: null | number;
                        targetFieldNames?: null | {
                            [key: string]: string;
                        };
                        textAlign?: null | string;
                        textIndent?: null | number;
                        lastLineWidth?: null | number;
                        top?: number | null;
                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                        typeFace?: null | string;
                        value?: null | string;
                        width?: number | null;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            isInjected: boolean;
                        } & (components["schemas"]["def-47"] & {
                            applyCommaSeparator?: null | boolean;
                            color?: null | string;
                            disabled?: null | boolean;
                            dropdownOptions?: null | {
                                value?: null | string;
                                label?: null | string;
                            }[];
                            fontSize?: null | number;
                            formula?: null | string;
                            group?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            }[];
                            height?: null | number;
                            image?: null | ("Image Main" | "Image Alt");
                            initialsGroup?: null | {
                                top: number;
                                left: number;
                                recipientId: string;
                                recipientName?: null | string;
                                recipientRole?: null | string;
                            }[];
                            isSyncEnabled?: boolean;
                            left?: number | null;
                            lineHeight?: null | number;
                            maxLength?: null | string;
                            multiline?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            };
                            multilineValue?: null | string;
                            name?: null | string;
                            optional?: null | boolean;
                            optionalSide?: null | string;
                            options?: null | {
                                left?: null | number;
                                reportingName?: null | string;
                                top?: null | number;
                                value?: null | string;
                                width?: null | number;
                                tabIndex?: null | number;
                            }[];
                            pageId?: null | string;
                            recipientId?: null | string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                            reportingName?: null | string;
                            required?: null | boolean;
                            suffix?: null | string;
                            tabIndex?: null | number;
                            targetFieldNames?: null | {
                                [key: string]: string;
                            };
                            textAlign?: null | string;
                            textIndent?: null | number;
                            lastLineWidth?: null | number;
                            top?: number | null;
                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                            typeFace?: null | string;
                            value?: null | string;
                            width?: number | null;
                        });
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        post?: never;
        /** Delete an interaction document input */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                    pageId: string;
                    inputId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Input deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/documents/{documentId}/clone": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Clone a document by id */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/documents/duplicate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Duplicate documents by filtering criteria */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        documentIds?: string[];
                        /** Format: uuid */
                        envelopeId?: string;
                        /** @enum {string} */
                        status?: "inactive";
                        /** Format: uuid */
                        targetInteractionId?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/documents/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Upload interaction documents */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        names: string[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            document: {
                                id: string;
                                name: string;
                                status: "active" | "inactive" | "draft" | "sent";
                                preOrder: number;
                                envelopeOrder: number;
                                interactionId: string;
                                propertyOptionGroupName: null | string;
                                isRequired: boolean;
                                isCustom?: boolean;
                                isTagged?: boolean;
                                answerCount: number;
                                isExternal?: null | boolean;
                                signedFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                documentTemplateId: null | string;
                                documentSourceTemplateId?: null | string;
                                documentVersionId: null | string;
                                documentSourceVersionId: null | string;
                                interactionEnvelopeId: null | string;
                                interactionEnvelope: null | {
                                    id: string;
                                    name: null | string;
                                    docusignEnvelopeId: null | string;
                                    status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                    isContractEnvelope: boolean;
                                    sentAt: null | string;
                                    completedAt: null | string;
                                    voidedAt: null | string;
                                    deliveredAt: null | string;
                                    declinedAt: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                    recipients: {
                                        id: string;
                                        docusignRecipientId: null | string;
                                        email: null | string;
                                        name: null | string;
                                        status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                        type: null | string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                        updatedBy: string;
                                    }[];
                                    unsignedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    signedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    voidedReason: null | string;
                                    declinedReason: null | string;
                                    voidedBy: null | string;
                                    declinedBy: null | string;
                                };
                                missingRequiredFields: number;
                                documentVersionFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    name?: null | string;
                                    fullPath?: string;
                                    img?: {
                                        url?: string;
                                    };
                                    inputs: ({
                                        id: string;
                                        isInjected: boolean;
                                    } & (components["schemas"]["def-47"] & {
                                        applyCommaSeparator?: null | boolean;
                                        color?: null | string;
                                        disabled?: null | boolean;
                                        dropdownOptions?: null | {
                                            value?: null | string;
                                            label?: null | string;
                                        }[];
                                        fontSize?: null | number;
                                        formula?: null | string;
                                        group?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        }[];
                                        height?: null | number;
                                        image?: null | ("Image Main" | "Image Alt");
                                        initialsGroup?: null | {
                                            top: number;
                                            left: number;
                                            recipientId: string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                        }[];
                                        isSyncEnabled?: boolean;
                                        left?: number | null;
                                        lineHeight?: null | number;
                                        maxLength?: null | string;
                                        multiline?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        };
                                        multilineValue?: null | string;
                                        name?: null | string;
                                        optional?: null | boolean;
                                        optionalSide?: null | string;
                                        options?: null | {
                                            left?: null | number;
                                            reportingName?: null | string;
                                            top?: null | number;
                                            value?: null | string;
                                            width?: null | number;
                                            tabIndex?: null | number;
                                        }[];
                                        pageId?: null | string;
                                        recipientId?: null | string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                        reportingName?: null | string;
                                        required?: null | boolean;
                                        suffix?: null | string;
                                        tabIndex?: null | number;
                                        targetFieldNames?: null | {
                                            [key: string]: string;
                                        };
                                        textAlign?: null | string;
                                        textIndent?: null | number;
                                        lastLineWidth?: null | number;
                                        top?: number | null;
                                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                        typeFace?: null | string;
                                        value?: null | string;
                                        width?: number | null;
                                    }))[];
                                }[];
                                image?: string;
                                /** Format: date-time */
                                createdAt: string;
                            };
                            uploadUrl: string;
                        }[];
                    };
                };
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            document: {
                                id: string;
                                name: string;
                                status: "active" | "inactive" | "draft" | "sent";
                                preOrder: number;
                                envelopeOrder: number;
                                interactionId: string;
                                propertyOptionGroupName: null | string;
                                isRequired: boolean;
                                isCustom?: boolean;
                                isTagged?: boolean;
                                answerCount: number;
                                isExternal?: null | boolean;
                                signedFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                documentTemplateId: null | string;
                                documentSourceTemplateId?: null | string;
                                documentVersionId: null | string;
                                documentSourceVersionId: null | string;
                                interactionEnvelopeId: null | string;
                                interactionEnvelope: null | {
                                    id: string;
                                    name: null | string;
                                    docusignEnvelopeId: null | string;
                                    status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                    isContractEnvelope: boolean;
                                    sentAt: null | string;
                                    completedAt: null | string;
                                    voidedAt: null | string;
                                    deliveredAt: null | string;
                                    declinedAt: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                    recipients: {
                                        id: string;
                                        docusignRecipientId: null | string;
                                        email: null | string;
                                        name: null | string;
                                        status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                        type: null | string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                        updatedBy: string;
                                    }[];
                                    unsignedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    signedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    voidedReason: null | string;
                                    declinedReason: null | string;
                                    voidedBy: null | string;
                                    declinedBy: null | string;
                                };
                                missingRequiredFields: number;
                                documentVersionFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    name?: null | string;
                                    fullPath?: string;
                                    img?: {
                                        url?: string;
                                    };
                                    inputs: ({
                                        id: string;
                                        isInjected: boolean;
                                    } & (components["schemas"]["def-47"] & {
                                        applyCommaSeparator?: null | boolean;
                                        color?: null | string;
                                        disabled?: null | boolean;
                                        dropdownOptions?: null | {
                                            value?: null | string;
                                            label?: null | string;
                                        }[];
                                        fontSize?: null | number;
                                        formula?: null | string;
                                        group?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        }[];
                                        height?: null | number;
                                        image?: null | ("Image Main" | "Image Alt");
                                        initialsGroup?: null | {
                                            top: number;
                                            left: number;
                                            recipientId: string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                        }[];
                                        isSyncEnabled?: boolean;
                                        left?: number | null;
                                        lineHeight?: null | number;
                                        maxLength?: null | string;
                                        multiline?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        };
                                        multilineValue?: null | string;
                                        name?: null | string;
                                        optional?: null | boolean;
                                        optionalSide?: null | string;
                                        options?: null | {
                                            left?: null | number;
                                            reportingName?: null | string;
                                            top?: null | number;
                                            value?: null | string;
                                            width?: null | number;
                                            tabIndex?: null | number;
                                        }[];
                                        pageId?: null | string;
                                        recipientId?: null | string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                        reportingName?: null | string;
                                        required?: null | boolean;
                                        suffix?: null | string;
                                        tabIndex?: null | number;
                                        targetFieldNames?: null | {
                                            [key: string]: string;
                                        };
                                        textAlign?: null | string;
                                        textIndent?: null | number;
                                        lastLineWidth?: null | number;
                                        top?: number | null;
                                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                        typeFace?: null | string;
                                        value?: null | string;
                                        width?: number | null;
                                    }))[];
                                }[];
                                image?: string;
                                /** Format: date-time */
                                createdAt: string;
                            };
                            uploadUrl: string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/envelopes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    status?: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                    needsAttention?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: null | string;
                        docusignEnvelopeId?: null | string;
                        status?: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                        isContractEnvelope?: boolean;
                        sentAt?: null | string;
                        completedAt?: null | string;
                        voidedAt?: null | string;
                        deliveredAt?: null | string;
                        declinedAt?: null | string;
                        rtdbEventTimestamp?: string;
                    } & {
                        externalId?: null | string;
                        /** Format: date-time */
                        createdAt?: string;
                        recipients?: {
                            externalId?: null | string;
                            docusignRecipientId?: null | string;
                            email?: null | string;
                            name?: null | string;
                            status?: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                            type?: null | string;
                        }[];
                        unsignedFile?: null | {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        signedFile?: null | {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/envelopes/preview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @deprecated */
                            signers: ({
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            } & {
                                fullName: string;
                                signerName: string;
                                deliveryOrder: number;
                                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator" | "broker" | "officeManager" | "supervisingBroker" | "counterpartySupervisingBroker";
                                order: number;
                            })[];
                            recipients: ({
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            } & {
                                fullName: string;
                                signerName: string;
                                deliveryOrder: number;
                                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator" | "broker" | "officeManager" | "supervisingBroker" | "counterpartySupervisingBroker";
                                order: number;
                            })[];
                            cc: string[];
                            subject: string;
                            message: string;
                            name: string;
                            /** Format: date-time */
                            shortUrlExpirationDate: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/envelopes/{envelopeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: null | string;
                        docusignEnvelopeId?: null | string;
                        status?: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                        isContractEnvelope?: boolean;
                        sentAt?: null | string;
                        completedAt?: null | string;
                        voidedAt?: null | string;
                        deliveredAt?: null | string;
                        declinedAt?: null | string;
                        rtdbEventTimestamp?: string;
                    } & {
                        recipients?: {
                            externalId?: null | string;
                            docusignRecipientId?: null | string;
                            email?: null | string;
                            name?: null | string;
                            status?: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                            type?: null | string;
                        }[];
                        unsignedFile?: null | {
                            name?: string;
                            bucket?: string;
                            filePath?: string;
                            fileType?: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        signedFile?: null | {
                            name?: string;
                            bucket?: string;
                            filePath?: string;
                            fileType?: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        voidedReason?: null | string;
                        declinedReason?: null | string;
                        voidedBy?: null | string;
                        declinedBy?: null | string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/listings/{interactionId}/envelopes/{envelopeId}/revert": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Envelope was successfully reverted */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/envelopes/{envelopeId}/status/{status}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                    status: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/listings/{interactionId}/envelopes/{envelopeId}/create-sender-url": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: uri */
                        returnUrl: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            docusignEnvelopeId: string;
                            url: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/envelopes/{envelopeId}/void": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        voidReason: string;
                    };
                };
            };
            responses: {
                /** @description Envelope voided successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/envelopes/{envelopeId}/send-reminder": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        emailSubject: string;
                        emailBody?: string;
                    };
                };
            };
            responses: {
                /** @description Reminder was sent successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/envelopes/{envelopeId}/archive-file": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            downloadUrl?: null | string;
                            bucket: string;
                            filePath: string;
                            fileType: string;
                            contentType: null | string;
                            customMetadata: null | unknown;
                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason: null | string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/envelopes/{envelopeId}/combined-file": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            downloadUrl?: null | string;
                            bucket: string;
                            filePath: string;
                            fileType: string;
                            contentType: null | string;
                            customMetadata: null | unknown;
                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason: null | string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/envelopes/{envelopeId}/documents/{documentId}/file": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    contentDisposition?: "inline" | "attachment";
                };
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            downloadUrl?: null | string;
                            bucket: string;
                            filePath: string;
                            fileType: string;
                            contentType: null | string;
                            customMetadata: null | unknown;
                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason: null | string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{listingId}/price-history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    listingId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            price: null | number;
                            deletedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            createdBy: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    listingId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        price?: null | number;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            price: null | number;
                            deletedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            createdBy: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{listingId}/price-history/{id}/toggle": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    listingId: string;
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            price: null | number;
                            deletedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            createdBy: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/listings/{interactionId}/timelines": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        date: string;
                        description?: null | string;
                        title: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/timelines/{dateId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    dateId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    dateId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        date?: null | (string);
                        description?: null | string;
                        title?: null | string;
                        status?: null | ("unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted");
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/listings/{interactionId}/timelines/{dateId}/restore": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    dateId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/timelines/send": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        subject: string;
                        message: string;
                        inviteAndShareRecipients: string[];
                        shareOnlyRecipients: string[];
                        /** Format: email */
                        sendAs: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            dates: {
                                id: string;
                                interactionId: string;
                                /** Format: date */
                                date: string;
                                description?: null | string;
                                title: string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                googleEventId?: null | string;
                                googleEventStatus?: null | ("success" | "fail");
                                googleEventUpdatedAt?: null | string;
                                status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                                externalId?: null | string;
                            }[];
                            recipients: {
                                id: string;
                                interactionId: string;
                                /** Format: email */
                                email: string;
                                status: "success" | "fail" | "sending";
                                type: "inviteAndShare" | "shareOnly";
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/timelines/recipients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: email */
                            email: string;
                            status: "success" | "fail" | "sending";
                            type: "inviteAndShare" | "shareOnly";
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/timelines/recent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: null | string;
                            interactionId: string;
                            status?: null | ("success" | "fail" | "sending");
                            recipients: {
                                id: string;
                                interactionId: string;
                                /** Format: email */
                                email: string;
                                status: "success" | "fail" | "sending";
                                type: "inviteAndShare" | "shareOnly";
                            }[];
                            dates: {
                                id: string;
                                interactionId: string;
                                /** Format: date */
                                date: string;
                                description?: null | string;
                                title: string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                googleEventId?: null | string;
                                googleEventStatus?: null | ("success" | "fail");
                                googleEventUpdatedAt?: null | string;
                                status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                                externalId?: null | string;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/timelines/preview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            defaultShareOnlyRecipients: string[];
                            defaultInviteAndShareRecipients: string[];
                            subject: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/transaction-coordinators": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            email?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/document-input-presets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all cover sheet input presets for document tagging */
        get: {
            parameters: {
                query?: {
                    /** @description A list of input recipient IDs to generate presets for. This is only respected for user template interactions. */
                    dynamicRecipientIds?: string[];
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            name: string;
                            value: string;
                            label: string;
                            group: string;
                            isSyncEnabled: boolean;
                        }[];
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number & 400;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/{interactionId}/injected-fields/{injectedFieldId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return coversheet update ready name/value pairs */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    injectedFieldId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            entity: string;
                            entityId?: string;
                            entityType?: null | string;
                            type: "text" | "textarea" | "money" | "date" | "radio" | "checkbox" | "number" | "phone";
                            name: string;
                            value: unknown;
                            subPath?: null | string;
                            order?: null | number;
                            interactionId?: string;
                            interactionType?: "listing" | "offer" | "lease" | "clientGroup" | "referral";
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mls-services": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    name?: string;
                    vendor?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            vendor: string;
                            displayName: string;
                            hintText: null | string;
                            locales: string[];
                        }[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        displayName: string;
                        name: string;
                        vendor: string;
                        hintText?: string;
                        locales: string[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            vendor: string;
                            displayName: string;
                            hintText: null | string;
                            locales: string[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mls-services/{mlsServiceId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    mlsServiceId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            vendor: string;
                            displayName: string;
                            hintText: null | string;
                            locales: string[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    mlsServiceId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description MLS service deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    mlsServiceId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        displayName?: string;
                    } & {
                        name?: string;
                    } & {
                        vendor?: string;
                    } & {
                        hintText?: string;
                    } & {
                        locales?: string[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            vendor: string;
                            displayName: string;
                            hintText: null | string;
                            locales: string[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/mls-services/{mlsVendor}/{mlsNumber}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    compareState?: string;
                };
                header?: never;
                path: {
                    mlsNumber: string;
                    mlsVendor: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            property?: {
                                location?: {
                                    street1?: string;
                                    street2?: string;
                                    state?: string;
                                    city?: string;
                                    county?: string;
                                    zip?: string;
                                };
                                propertyType?: string;
                                transactionType?: string;
                                beds?: number;
                                baths?: {
                                    full?: number;
                                    half?: number;
                                    total?: number;
                                };
                                squareFeet?: number;
                                lotSquareFeet?: {
                                    sqft?: number;
                                    acres?: number;
                                };
                                assessorParcelNumber?: string;
                                legalDescription?: string;
                                coordinates?: {
                                    latitude?: number;
                                    longitude?: number;
                                };
                            };
                            listingAgent?: {
                                firstname?: string;
                                lastname?: string;
                                email?: string;
                                cell_phone?: string;
                                licenseNumber?: string;
                                brokerage?: {
                                    name?: string;
                                    phone?: string;
                                    street1?: string;
                                    street2?: string;
                                    state?: string;
                                    city?: string;
                                    zip?: string;
                                    licenseNumber?: string;
                                };
                            };
                            coListingAgent?: {
                                firstname?: string;
                                lastname?: string;
                                email?: string;
                                cell_phone?: string;
                                licenseNumber?: string;
                                brokerage?: {
                                    name?: string;
                                    phone?: string;
                                    street1?: string;
                                    street2?: string;
                                    state?: string;
                                    city?: string;
                                    zip?: string;
                                    licenseNumber?: string;
                                };
                            };
                            placeIds?: unknown;
                            photos?: {
                                [key: string]: string;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    offset?: number;
                    limit?: number;
                    search?: string;
                    facets?: string;
                    sort?: string;
                    isGlobal?: boolean;
                    ids?: string;
                    needsAttention?: boolean;
                    includeFacetCountResults?: boolean;
                    includeContacts?: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: components["schemas"]["def-36"][];
                            facets?: {
                                [key: string]: {
                                    [key: string]: string;
                                };
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-29"];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-34"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{offerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    offerId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-34"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    offerId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-39"];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-34"];
                    };
                };
            };
        };
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    offerId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Offer deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    offerId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-30"];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-34"];
                    };
                };
            };
        };
        trace?: never;
    };
    "/offers/{offerId}/default-contacts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    offerId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            escrowOfficer?: null | ({
                                externalId?: null | string;
                                firstName?: null | string;
                                lastName?: null | string;
                                homePhone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                avatar?: null | string;
                                googleContactId?: null | string;
                                followUpBossContactId?: null | string;
                                userId?: null | string;
                                teamId?: null | string;
                                order?: number;
                                contactSource?: null | string;
                            } & {
                                companyName?: null | string;
                                escrowNumber?: null | string;
                                role?: null | string;
                            });
                            titleOfficer?: null | ({
                                externalId?: null | string;
                                firstName?: null | string;
                                lastName?: null | string;
                                homePhone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                avatar?: null | string;
                                googleContactId?: null | string;
                                followUpBossContactId?: null | string;
                                userId?: null | string;
                                teamId?: null | string;
                                order?: number;
                                contactSource?: null | string;
                            } & {
                                companyName?: null | string;
                                role?: null | string;
                                titleNumber?: null | string;
                            });
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/attachments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    type?: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/attachments/{attachmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    attachmentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    attachmentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Document deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    attachmentId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                        externalId?: null | string;
                        file: {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        /** Format: date-time */
                        updatedAt?: string;
                        rtdbEventTimestamp?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/offers/{interactionId}/attachments/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Upload attachments */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        names: string[];
                        type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            attachment: {
                                id: string;
                                type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                                file: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                interactionId: string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            };
                            uploadUrl: string;
                        }[];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/files": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    type?: string;
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        externalId?: null | string;
                        file: {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        /** Format: date-time */
                        updatedAt?: string;
                        rtdbEventTimestamp?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/files/{fileId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Document deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        externalId?: null | string;
                        file: {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        /** Format: date-time */
                        updatedAt?: string;
                        rtdbEventTimestamp?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/offers/{interactionId}/files/images": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get interaction images */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/files/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Upload interaction images */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        names: string[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            image: {
                                id: string;
                                file: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                interactionId: string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            };
                            uploadUrl: string;
                        }[];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/contacts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    contactType?: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    completeInteractionModel?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ((({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }))[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        licenseNumber?: null | string;
                        licenseState?: null | string;
                        mlsId?: null | string;
                        officeNumber?: null | string;
                        jurisdiction?: null | string;
                        primaryMls?: null | string;
                        commission?: null | string;
                        sellingCommission?: null | string;
                        listingPeriod?: null | string;
                        teamId?: null | string;
                        teamName?: null | string;
                        teamAlias?: null | string;
                        teamBusinessLicenseEntityNumber?: null | string;
                        broker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        brokerage?: {
                            companyName?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            phone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            officeEmail?: null | string;
                            licenseNumber?: null | string;
                            jurisdiction?: null | string;
                            mlsCode?: null | string;
                            mlsId?: null | string;
                            taxId?: null | string;
                        };
                        officeManager?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        supervisingBroker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        title?: null | string;
                        entityType?: null | string;
                        isSuccessor?: null | string;
                        isSelfRepresented?: "true" | "false";
                        ownershipStatus?: null | string;
                        entity?: {
                            title?: null | string;
                            titleOther?: null | string;
                            entityName?: null | string;
                        };
                        powerOfAttorney?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            email?: null | string;
                        };
                        probate?: {
                            title?: null | string;
                            titleOther?: null | string;
                            estateName?: null | string;
                        };
                        trust?: {
                            title?: null | string;
                            titleOther?: null | string;
                            trustName?: null | string;
                        };
                        referralClientTypes?: {
                            referralBuyer: "true" | "false";
                            referralSeller: "true" | "false";
                            referralLandlord: "true" | "false";
                            referralTenant: "true" | "false";
                        };
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        escrowNumber?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        confirmationNumber?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                        titleNumber?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    });
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        });
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/contacts/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        });
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        licenseNumber?: null | string;
                        licenseState?: null | string;
                        mlsId?: null | string;
                        officeNumber?: null | string;
                        jurisdiction?: null | string;
                        primaryMls?: null | string;
                        commission?: null | string;
                        sellingCommission?: null | string;
                        listingPeriod?: null | string;
                        teamId?: null | string;
                        teamName?: null | string;
                        teamAlias?: null | string;
                        teamBusinessLicenseEntityNumber?: null | string;
                        broker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        brokerage?: {
                            companyName?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            phone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            officeEmail?: null | string;
                            licenseNumber?: null | string;
                            jurisdiction?: null | string;
                            mlsCode?: null | string;
                            mlsId?: null | string;
                            taxId?: null | string;
                        };
                        officeManager?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        supervisingBroker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        title?: null | string;
                        entityType?: null | string;
                        isSuccessor?: null | string;
                        isSelfRepresented?: "true" | "false";
                        ownershipStatus?: null | string;
                        entity?: {
                            title?: null | string;
                            titleOther?: null | string;
                            entityName?: null | string;
                        };
                        powerOfAttorney?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            email?: null | string;
                        };
                        probate?: {
                            title?: null | string;
                            titleOther?: null | string;
                            estateName?: null | string;
                        };
                        trust?: {
                            title?: null | string;
                            titleOther?: null | string;
                            trustName?: null | string;
                        };
                        referralClientTypes?: {
                            referralBuyer: "true" | "false";
                            referralSeller: "true" | "false";
                            referralLandlord: "true" | "false";
                            referralTenant: "true" | "false";
                        };
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        escrowNumber?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        confirmationNumber?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                        titleNumber?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    });
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        });
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Contact deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        licenseNumber?: null | string;
                        licenseState?: null | string;
                        mlsId?: null | string;
                        officeNumber?: null | string;
                        jurisdiction?: null | string;
                        primaryMls?: null | string;
                        commission?: null | string;
                        sellingCommission?: null | string;
                        listingPeriod?: null | string;
                        teamId?: null | string;
                        teamName?: null | string;
                        teamAlias?: null | string;
                        teamBusinessLicenseEntityNumber?: null | string;
                        broker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        brokerage?: {
                            companyName?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            phone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            officeEmail?: null | string;
                            licenseNumber?: null | string;
                            jurisdiction?: null | string;
                            mlsCode?: null | string;
                            mlsId?: null | string;
                            taxId?: null | string;
                        };
                        officeManager?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        supervisingBroker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        title?: null | string;
                        entityType?: null | string;
                        isSuccessor?: null | string;
                        isSelfRepresented?: "true" | "false";
                        ownershipStatus?: null | string;
                        entity?: {
                            title?: null | string;
                            titleOther?: null | string;
                            entityName?: null | string;
                        };
                        powerOfAttorney?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            email?: null | string;
                        };
                        probate?: {
                            title?: null | string;
                            titleOther?: null | string;
                            estateName?: null | string;
                        };
                        trust?: {
                            title?: null | string;
                            titleOther?: null | string;
                            trustName?: null | string;
                        };
                        referralClientTypes?: {
                            referralBuyer: "true" | "false";
                            referralSeller: "true" | "false";
                            referralLandlord: "true" | "false";
                            referralTenant: "true" | "false";
                        };
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | {
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        escrowNumber?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        confirmationNumber?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                        titleNumber?: null | string;
                    });
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        });
                    };
                };
            };
        };
        trace?: never;
    };
    "/offers/{interactionId}/documents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all interaction documents for an interaction */
        get: {
            parameters: {
                query?: {
                    offset?: number;
                    limit?: number;
                    facets?: string;
                    sort?: string;
                    status?: "active" | "inactive" | "draft" | "sent";
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: {
                                id: string;
                                name: string;
                                status: "active" | "inactive" | "draft" | "sent";
                                preOrder: number;
                                envelopeOrder: number;
                                interactionId: string;
                                propertyOptionGroupName: null | string;
                                isRequired: boolean;
                                isCustom?: boolean;
                                isTagged?: boolean;
                                answerCount: number;
                                isExternal?: null | boolean;
                                signedFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                documentTemplateId: null | string;
                                documentSourceTemplateId?: null | string;
                                documentVersionId: null | string;
                                documentSourceVersionId: null | string;
                                interactionEnvelopeId: null | string;
                                interactionEnvelope: null | {
                                    id: string;
                                    name: null | string;
                                    docusignEnvelopeId: null | string;
                                    status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                    isContractEnvelope: boolean;
                                    sentAt: null | string;
                                    completedAt: null | string;
                                    voidedAt: null | string;
                                    deliveredAt: null | string;
                                    declinedAt: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                    recipients: {
                                        id: string;
                                        docusignRecipientId: null | string;
                                        email: null | string;
                                        name: null | string;
                                        status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                        type: null | string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                        updatedBy: string;
                                    }[];
                                    unsignedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    signedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    voidedReason: null | string;
                                    declinedReason: null | string;
                                    voidedBy: null | string;
                                    declinedBy: null | string;
                                };
                                missingRequiredFields: number;
                                documentVersionFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                image?: string;
                                /** Format: date-time */
                                createdAt: string;
                            }[];
                            facets?: {
                                [key: string]: {
                                    [key: string]: string;
                                };
                            };
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        /** Create interaction documents by list of document template or pog ids */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        documents?: string[];
                        propertyOptionGroups?: string[];
                        userTemplates?: string[];
                        uploadedDocuments?: string[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                            uploadUrl?: string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/documents/{documentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get an interaction document by id */
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                };
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** Soft delete an interaction document by id */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Document deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Update an interaction document by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        externalId?: null | string;
                        name?: string;
                        status?: "active" | "inactive" | "draft" | "sent";
                        preOrder?: number;
                        envelopeOrder?: number;
                        propertyOptionGroupName?: null | string;
                        isRequired?: boolean;
                        documentVersionId?: string;
                        interactionEnvelopeId?: null | string;
                        interactionEnvelope?: null | ({
                            name?: null | string;
                            docusignEnvelopeId?: null | string;
                            status?: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                            isContractEnvelope?: boolean;
                            sentAt?: null | string;
                            completedAt?: null | string;
                            voidedAt?: null | string;
                            deliveredAt?: null | string;
                            declinedAt?: null | string;
                            rtdbEventTimestamp?: string;
                        } & {
                            recipients?: {
                                externalId?: null | string;
                                docusignRecipientId?: null | string;
                                email?: null | string;
                                name?: null | string;
                                status?: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type?: null | string;
                            }[];
                            unsignedFile?: null | {
                                name?: string;
                                bucket?: string;
                                filePath?: string;
                                fileType?: string;
                                uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason?: null | string;
                                contentType?: null | string;
                                customMetadata?: null | unknown;
                            };
                            signedFile?: null | {
                                name?: string;
                                bucket?: string;
                                filePath?: string;
                                fileType?: string;
                                uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason?: null | string;
                                contentType?: null | string;
                                customMetadata?: null | unknown;
                            };
                            voidedReason?: null | string;
                            declinedReason?: null | string;
                            voidedBy?: null | string;
                            declinedBy?: null | string;
                        });
                        rtdbEventTimestamp?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/offers/{interactionId}/documents/preview/{documentVersionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get an interaction document preview by documentVersionId */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentVersionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/documents/{documentId}/answers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of answers by interaction document id */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            externalId: null | string;
                            inputId: string;
                            value: unknown;
                            documentTemplatePageId: null | string;
                            interactionDocumentId: string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Add an answer to an interaction document input */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        pageId: string;
                        inputId: string;
                        value: string;
                    }[];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/offers/{interactionId}/documents/status/{status}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Soft delete documents by status */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    status: "active" | "inactive" | "draft" | "sent";
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Documents deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Update documents by status */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    status: "active" | "inactive" | "draft" | "sent";
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        status: "active" | "inactive" | "draft" | "sent";
                    };
                };
            };
            responses: {
                /** @description Documents status updated successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/offers/{interactionId}/documents/envelope-order": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Update document envelope orders by id
         * @description The envelopeOrder will be updated to the index of the document id in the documentIds array.
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        documentIds: string[];
                    };
                };
            };
            responses: {
                /** @description Document envelope orders updated successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/offers/{interactionId}/documents/{documentId}/pages/{pageId}/inputs/{inputId}/answer": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Add an answer to an interaction document input */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                    pageId: string;
                    inputId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        value: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            externalId: null | string;
                            inputId: string;
                            value: unknown;
                            documentTemplatePageId: null | string;
                            interactionDocumentId: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/offers/{interactionId}/documents/{documentId}/pages/{pageId}/inputs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add an interaction document input */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                    pageId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-47"] & {
                        applyCommaSeparator?: null | boolean;
                        color?: null | string;
                        disabled?: null | boolean;
                        dropdownOptions?: null | {
                            value?: null | string;
                            label?: null | string;
                        }[];
                        fontSize?: null | number;
                        formula?: null | string;
                        group?: null | {
                            inputIdx: string;
                            pageIdx: number;
                        }[];
                        height?: null | number;
                        image?: null | ("Image Main" | "Image Alt");
                        initialsGroup?: null | {
                            top: number;
                            left: number;
                            recipientId: string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                        }[];
                        isSyncEnabled?: boolean;
                        left?: number | null;
                        lineHeight?: null | number;
                        maxLength?: null | string;
                        multiline?: null | {
                            inputIdx: string;
                            pageIdx: number;
                        };
                        multilineValue?: null | string;
                        name?: null | string;
                        optional?: null | boolean;
                        optionalSide?: null | string;
                        options?: null | {
                            left?: null | number;
                            reportingName?: null | string;
                            top?: null | number;
                            value?: null | string;
                            width?: null | number;
                            tabIndex?: null | number;
                        }[];
                        pageId?: null | string;
                        recipientId?: null | string;
                        recipientName?: null | string;
                        recipientRole?: null | string;
                        reportingName?: null | string;
                        required?: null | boolean;
                        suffix?: null | string;
                        tabIndex?: null | number;
                        targetFieldNames?: null | {
                            [key: string]: string;
                        };
                        textAlign?: null | string;
                        textIndent?: null | number;
                        lastLineWidth?: null | number;
                        top?: number | null;
                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                        typeFace?: null | string;
                        value?: null | string;
                        width?: number | null;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            isInjected: boolean;
                        } & (components["schemas"]["def-47"] & {
                            applyCommaSeparator?: null | boolean;
                            color?: null | string;
                            disabled?: null | boolean;
                            dropdownOptions?: null | {
                                value?: null | string;
                                label?: null | string;
                            }[];
                            fontSize?: null | number;
                            formula?: null | string;
                            group?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            }[];
                            height?: null | number;
                            image?: null | ("Image Main" | "Image Alt");
                            initialsGroup?: null | {
                                top: number;
                                left: number;
                                recipientId: string;
                                recipientName?: null | string;
                                recipientRole?: null | string;
                            }[];
                            isSyncEnabled?: boolean;
                            left?: number | null;
                            lineHeight?: null | number;
                            maxLength?: null | string;
                            multiline?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            };
                            multilineValue?: null | string;
                            name?: null | string;
                            optional?: null | boolean;
                            optionalSide?: null | string;
                            options?: null | {
                                left?: null | number;
                                reportingName?: null | string;
                                top?: null | number;
                                value?: null | string;
                                width?: null | number;
                                tabIndex?: null | number;
                            }[];
                            pageId?: null | string;
                            recipientId?: null | string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                            reportingName?: null | string;
                            required?: null | boolean;
                            suffix?: null | string;
                            tabIndex?: null | number;
                            targetFieldNames?: null | {
                                [key: string]: string;
                            };
                            textAlign?: null | string;
                            textIndent?: null | number;
                            lastLineWidth?: null | number;
                            top?: number | null;
                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                            typeFace?: null | string;
                            value?: null | string;
                            width?: number | null;
                        });
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/documents/{documentId}/pages/{pageId}/inputs/{inputId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update an interaction document input */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                    pageId: string;
                    inputId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-47"] & {
                        applyCommaSeparator?: null | boolean;
                        color?: null | string;
                        disabled?: null | boolean;
                        dropdownOptions?: null | {
                            value?: null | string;
                            label?: null | string;
                        }[];
                        fontSize?: null | number;
                        formula?: null | string;
                        group?: null | {
                            inputIdx: string;
                            pageIdx: number;
                        }[];
                        height?: null | number;
                        image?: null | ("Image Main" | "Image Alt");
                        initialsGroup?: null | {
                            top: number;
                            left: number;
                            recipientId: string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                        }[];
                        isSyncEnabled?: boolean;
                        left?: number | null;
                        lineHeight?: null | number;
                        maxLength?: null | string;
                        multiline?: null | {
                            inputIdx: string;
                            pageIdx: number;
                        };
                        multilineValue?: null | string;
                        name?: null | string;
                        optional?: null | boolean;
                        optionalSide?: null | string;
                        options?: null | {
                            left?: null | number;
                            reportingName?: null | string;
                            top?: null | number;
                            value?: null | string;
                            width?: null | number;
                            tabIndex?: null | number;
                        }[];
                        pageId?: null | string;
                        recipientId?: null | string;
                        recipientName?: null | string;
                        recipientRole?: null | string;
                        reportingName?: null | string;
                        required?: null | boolean;
                        suffix?: null | string;
                        tabIndex?: null | number;
                        targetFieldNames?: null | {
                            [key: string]: string;
                        };
                        textAlign?: null | string;
                        textIndent?: null | number;
                        lastLineWidth?: null | number;
                        top?: number | null;
                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                        typeFace?: null | string;
                        value?: null | string;
                        width?: number | null;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            isInjected: boolean;
                        } & (components["schemas"]["def-47"] & {
                            applyCommaSeparator?: null | boolean;
                            color?: null | string;
                            disabled?: null | boolean;
                            dropdownOptions?: null | {
                                value?: null | string;
                                label?: null | string;
                            }[];
                            fontSize?: null | number;
                            formula?: null | string;
                            group?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            }[];
                            height?: null | number;
                            image?: null | ("Image Main" | "Image Alt");
                            initialsGroup?: null | {
                                top: number;
                                left: number;
                                recipientId: string;
                                recipientName?: null | string;
                                recipientRole?: null | string;
                            }[];
                            isSyncEnabled?: boolean;
                            left?: number | null;
                            lineHeight?: null | number;
                            maxLength?: null | string;
                            multiline?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            };
                            multilineValue?: null | string;
                            name?: null | string;
                            optional?: null | boolean;
                            optionalSide?: null | string;
                            options?: null | {
                                left?: null | number;
                                reportingName?: null | string;
                                top?: null | number;
                                value?: null | string;
                                width?: null | number;
                                tabIndex?: null | number;
                            }[];
                            pageId?: null | string;
                            recipientId?: null | string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                            reportingName?: null | string;
                            required?: null | boolean;
                            suffix?: null | string;
                            tabIndex?: null | number;
                            targetFieldNames?: null | {
                                [key: string]: string;
                            };
                            textAlign?: null | string;
                            textIndent?: null | number;
                            lastLineWidth?: null | number;
                            top?: number | null;
                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                            typeFace?: null | string;
                            value?: null | string;
                            width?: number | null;
                        });
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        post?: never;
        /** Delete an interaction document input */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                    pageId: string;
                    inputId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Input deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/documents/{documentId}/clone": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Clone a document by id */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/documents/duplicate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Duplicate documents by filtering criteria */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        documentIds?: string[];
                        /** Format: uuid */
                        envelopeId?: string;
                        /** @enum {string} */
                        status?: "inactive";
                        /** Format: uuid */
                        targetInteractionId?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/documents/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Upload interaction documents */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        names: string[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            document: {
                                id: string;
                                name: string;
                                status: "active" | "inactive" | "draft" | "sent";
                                preOrder: number;
                                envelopeOrder: number;
                                interactionId: string;
                                propertyOptionGroupName: null | string;
                                isRequired: boolean;
                                isCustom?: boolean;
                                isTagged?: boolean;
                                answerCount: number;
                                isExternal?: null | boolean;
                                signedFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                documentTemplateId: null | string;
                                documentSourceTemplateId?: null | string;
                                documentVersionId: null | string;
                                documentSourceVersionId: null | string;
                                interactionEnvelopeId: null | string;
                                interactionEnvelope: null | {
                                    id: string;
                                    name: null | string;
                                    docusignEnvelopeId: null | string;
                                    status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                    isContractEnvelope: boolean;
                                    sentAt: null | string;
                                    completedAt: null | string;
                                    voidedAt: null | string;
                                    deliveredAt: null | string;
                                    declinedAt: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                    recipients: {
                                        id: string;
                                        docusignRecipientId: null | string;
                                        email: null | string;
                                        name: null | string;
                                        status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                        type: null | string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                        updatedBy: string;
                                    }[];
                                    unsignedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    signedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    voidedReason: null | string;
                                    declinedReason: null | string;
                                    voidedBy: null | string;
                                    declinedBy: null | string;
                                };
                                missingRequiredFields: number;
                                documentVersionFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    name?: null | string;
                                    fullPath?: string;
                                    img?: {
                                        url?: string;
                                    };
                                    inputs: ({
                                        id: string;
                                        isInjected: boolean;
                                    } & (components["schemas"]["def-47"] & {
                                        applyCommaSeparator?: null | boolean;
                                        color?: null | string;
                                        disabled?: null | boolean;
                                        dropdownOptions?: null | {
                                            value?: null | string;
                                            label?: null | string;
                                        }[];
                                        fontSize?: null | number;
                                        formula?: null | string;
                                        group?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        }[];
                                        height?: null | number;
                                        image?: null | ("Image Main" | "Image Alt");
                                        initialsGroup?: null | {
                                            top: number;
                                            left: number;
                                            recipientId: string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                        }[];
                                        isSyncEnabled?: boolean;
                                        left?: number | null;
                                        lineHeight?: null | number;
                                        maxLength?: null | string;
                                        multiline?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        };
                                        multilineValue?: null | string;
                                        name?: null | string;
                                        optional?: null | boolean;
                                        optionalSide?: null | string;
                                        options?: null | {
                                            left?: null | number;
                                            reportingName?: null | string;
                                            top?: null | number;
                                            value?: null | string;
                                            width?: null | number;
                                            tabIndex?: null | number;
                                        }[];
                                        pageId?: null | string;
                                        recipientId?: null | string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                        reportingName?: null | string;
                                        required?: null | boolean;
                                        suffix?: null | string;
                                        tabIndex?: null | number;
                                        targetFieldNames?: null | {
                                            [key: string]: string;
                                        };
                                        textAlign?: null | string;
                                        textIndent?: null | number;
                                        lastLineWidth?: null | number;
                                        top?: number | null;
                                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                        typeFace?: null | string;
                                        value?: null | string;
                                        width?: number | null;
                                    }))[];
                                }[];
                                image?: string;
                                /** Format: date-time */
                                createdAt: string;
                            };
                            uploadUrl: string;
                        }[];
                    };
                };
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            document: {
                                id: string;
                                name: string;
                                status: "active" | "inactive" | "draft" | "sent";
                                preOrder: number;
                                envelopeOrder: number;
                                interactionId: string;
                                propertyOptionGroupName: null | string;
                                isRequired: boolean;
                                isCustom?: boolean;
                                isTagged?: boolean;
                                answerCount: number;
                                isExternal?: null | boolean;
                                signedFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                documentTemplateId: null | string;
                                documentSourceTemplateId?: null | string;
                                documentVersionId: null | string;
                                documentSourceVersionId: null | string;
                                interactionEnvelopeId: null | string;
                                interactionEnvelope: null | {
                                    id: string;
                                    name: null | string;
                                    docusignEnvelopeId: null | string;
                                    status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                    isContractEnvelope: boolean;
                                    sentAt: null | string;
                                    completedAt: null | string;
                                    voidedAt: null | string;
                                    deliveredAt: null | string;
                                    declinedAt: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                    recipients: {
                                        id: string;
                                        docusignRecipientId: null | string;
                                        email: null | string;
                                        name: null | string;
                                        status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                        type: null | string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                        updatedBy: string;
                                    }[];
                                    unsignedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    signedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    voidedReason: null | string;
                                    declinedReason: null | string;
                                    voidedBy: null | string;
                                    declinedBy: null | string;
                                };
                                missingRequiredFields: number;
                                documentVersionFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    name?: null | string;
                                    fullPath?: string;
                                    img?: {
                                        url?: string;
                                    };
                                    inputs: ({
                                        id: string;
                                        isInjected: boolean;
                                    } & (components["schemas"]["def-47"] & {
                                        applyCommaSeparator?: null | boolean;
                                        color?: null | string;
                                        disabled?: null | boolean;
                                        dropdownOptions?: null | {
                                            value?: null | string;
                                            label?: null | string;
                                        }[];
                                        fontSize?: null | number;
                                        formula?: null | string;
                                        group?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        }[];
                                        height?: null | number;
                                        image?: null | ("Image Main" | "Image Alt");
                                        initialsGroup?: null | {
                                            top: number;
                                            left: number;
                                            recipientId: string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                        }[];
                                        isSyncEnabled?: boolean;
                                        left?: number | null;
                                        lineHeight?: null | number;
                                        maxLength?: null | string;
                                        multiline?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        };
                                        multilineValue?: null | string;
                                        name?: null | string;
                                        optional?: null | boolean;
                                        optionalSide?: null | string;
                                        options?: null | {
                                            left?: null | number;
                                            reportingName?: null | string;
                                            top?: null | number;
                                            value?: null | string;
                                            width?: null | number;
                                            tabIndex?: null | number;
                                        }[];
                                        pageId?: null | string;
                                        recipientId?: null | string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                        reportingName?: null | string;
                                        required?: null | boolean;
                                        suffix?: null | string;
                                        tabIndex?: null | number;
                                        targetFieldNames?: null | {
                                            [key: string]: string;
                                        };
                                        textAlign?: null | string;
                                        textIndent?: null | number;
                                        lastLineWidth?: null | number;
                                        top?: number | null;
                                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                        typeFace?: null | string;
                                        value?: null | string;
                                        width?: number | null;
                                    }))[];
                                }[];
                                image?: string;
                                /** Format: date-time */
                                createdAt: string;
                            };
                            uploadUrl: string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/envelopes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    status?: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                    needsAttention?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: null | string;
                        docusignEnvelopeId?: null | string;
                        status?: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                        isContractEnvelope?: boolean;
                        sentAt?: null | string;
                        completedAt?: null | string;
                        voidedAt?: null | string;
                        deliveredAt?: null | string;
                        declinedAt?: null | string;
                        rtdbEventTimestamp?: string;
                    } & {
                        externalId?: null | string;
                        /** Format: date-time */
                        createdAt?: string;
                        recipients?: {
                            externalId?: null | string;
                            docusignRecipientId?: null | string;
                            email?: null | string;
                            name?: null | string;
                            status?: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                            type?: null | string;
                        }[];
                        unsignedFile?: null | {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        signedFile?: null | {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/envelopes/preview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @deprecated */
                            signers: ({
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            } & {
                                fullName: string;
                                signerName: string;
                                deliveryOrder: number;
                                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator" | "broker" | "officeManager" | "supervisingBroker" | "counterpartySupervisingBroker";
                                order: number;
                            })[];
                            recipients: ({
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            } & {
                                fullName: string;
                                signerName: string;
                                deliveryOrder: number;
                                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator" | "broker" | "officeManager" | "supervisingBroker" | "counterpartySupervisingBroker";
                                order: number;
                            })[];
                            cc: string[];
                            subject: string;
                            message: string;
                            name: string;
                            /** Format: date-time */
                            shortUrlExpirationDate: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/envelopes/{envelopeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: null | string;
                        docusignEnvelopeId?: null | string;
                        status?: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                        isContractEnvelope?: boolean;
                        sentAt?: null | string;
                        completedAt?: null | string;
                        voidedAt?: null | string;
                        deliveredAt?: null | string;
                        declinedAt?: null | string;
                        rtdbEventTimestamp?: string;
                    } & {
                        recipients?: {
                            externalId?: null | string;
                            docusignRecipientId?: null | string;
                            email?: null | string;
                            name?: null | string;
                            status?: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                            type?: null | string;
                        }[];
                        unsignedFile?: null | {
                            name?: string;
                            bucket?: string;
                            filePath?: string;
                            fileType?: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        signedFile?: null | {
                            name?: string;
                            bucket?: string;
                            filePath?: string;
                            fileType?: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        voidedReason?: null | string;
                        declinedReason?: null | string;
                        voidedBy?: null | string;
                        declinedBy?: null | string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/offers/{interactionId}/envelopes/{envelopeId}/revert": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Envelope was successfully reverted */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/envelopes/{envelopeId}/status/{status}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                    status: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/offers/{interactionId}/envelopes/{envelopeId}/create-sender-url": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: uri */
                        returnUrl: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            docusignEnvelopeId: string;
                            url: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/envelopes/{envelopeId}/void": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        voidReason: string;
                    };
                };
            };
            responses: {
                /** @description Envelope voided successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/envelopes/{envelopeId}/send-reminder": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        emailSubject: string;
                        emailBody?: string;
                    };
                };
            };
            responses: {
                /** @description Reminder was sent successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/envelopes/{envelopeId}/archive-file": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            downloadUrl?: null | string;
                            bucket: string;
                            filePath: string;
                            fileType: string;
                            contentType: null | string;
                            customMetadata: null | unknown;
                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason: null | string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/envelopes/{envelopeId}/combined-file": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            downloadUrl?: null | string;
                            bucket: string;
                            filePath: string;
                            fileType: string;
                            contentType: null | string;
                            customMetadata: null | unknown;
                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason: null | string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/envelopes/{envelopeId}/documents/{documentId}/file": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    contentDisposition?: "inline" | "attachment";
                };
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            downloadUrl?: null | string;
                            bucket: string;
                            filePath: string;
                            fileType: string;
                            contentType: null | string;
                            customMetadata: null | unknown;
                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason: null | string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/packages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    limit: number;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            hasUnsignedDocuments: boolean;
                            offerId: null | string;
                            interactionId: null | string;
                            runnerId?: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            /** @deprecated */
                            combined: string;
                            /** @deprecated */
                            offerDocs: string;
                            coverLetter?: null | string;
                            preQual?: null | string;
                            proofOfFunds?: null | string;
                            disclosures?: null | string;
                            combinedShortUrl: {
                                id: string;
                                url: string;
                            };
                            offerDocsShortUrl: {
                                id: string;
                                url: string;
                            };
                            coverLetterShortUrl?: null | {
                                id: string;
                                url: string;
                            };
                            preQualShortUrl?: null | {
                                id: string;
                                url: string;
                            };
                            proofOfFundsShortUrl?: null | {
                                id: string;
                                url: string;
                            };
                            disclosuresShortUrl?: null | {
                                id: string;
                                url: string;
                            };
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/timelines": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        date: string;
                        description?: null | string;
                        title: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/timelines/{dateId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    dateId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    dateId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        date?: null | (string);
                        description?: null | string;
                        title?: null | string;
                        status?: null | ("unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted");
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/offers/{interactionId}/timelines/{dateId}/restore": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    dateId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/timelines/send": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        subject: string;
                        message: string;
                        inviteAndShareRecipients: string[];
                        shareOnlyRecipients: string[];
                        /** Format: email */
                        sendAs: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            dates: {
                                id: string;
                                interactionId: string;
                                /** Format: date */
                                date: string;
                                description?: null | string;
                                title: string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                googleEventId?: null | string;
                                googleEventStatus?: null | ("success" | "fail");
                                googleEventUpdatedAt?: null | string;
                                status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                                externalId?: null | string;
                            }[];
                            recipients: {
                                id: string;
                                interactionId: string;
                                /** Format: email */
                                email: string;
                                status: "success" | "fail" | "sending";
                                type: "inviteAndShare" | "shareOnly";
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/timelines/recipients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: email */
                            email: string;
                            status: "success" | "fail" | "sending";
                            type: "inviteAndShare" | "shareOnly";
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/timelines/recent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: null | string;
                            interactionId: string;
                            status?: null | ("success" | "fail" | "sending");
                            recipients: {
                                id: string;
                                interactionId: string;
                                /** Format: email */
                                email: string;
                                status: "success" | "fail" | "sending";
                                type: "inviteAndShare" | "shareOnly";
                            }[];
                            dates: {
                                id: string;
                                interactionId: string;
                                /** Format: date */
                                date: string;
                                description?: null | string;
                                title: string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                googleEventId?: null | string;
                                googleEventStatus?: null | ("success" | "fail");
                                googleEventUpdatedAt?: null | string;
                                status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                                externalId?: null | string;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/timelines/preview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            defaultShareOnlyRecipients: string[];
                            defaultInviteAndShareRecipients: string[];
                            subject: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/transaction-coordinators": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            email?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/document-input-presets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all cover sheet input presets for document tagging */
        get: {
            parameters: {
                query?: {
                    /** @description A list of input recipient IDs to generate presets for. This is only respected for user template interactions. */
                    dynamicRecipientIds?: string[];
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            name: string;
                            value: string;
                            label: string;
                            group: string;
                            isSyncEnabled: boolean;
                        }[];
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number & 400;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/offers/{interactionId}/injected-fields/{injectedFieldId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return coversheet update ready name/value pairs */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    injectedFieldId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            entity: string;
                            entityId?: string;
                            entityType?: null | string;
                            type: "text" | "textarea" | "money" | "date" | "radio" | "checkbox" | "number" | "phone";
                            name: string;
                            value: unknown;
                            subPath?: null | string;
                            order?: null | number;
                            interactionId?: string;
                            interactionType?: "listing" | "offer" | "lease" | "clientGroup" | "referral";
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/runners": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all runners by interaction and or runner type */
        get: {
            parameters: {
                query: {
                    interactionId: string;
                    type?: "CREATE_DOCUSIGN_ENVELOPE" | "CREATE_OFFER_FROM_UPLOADED_DOCUMENT" | "DOWNLOAD_ALL_DOCUMENTS_BY_STATUS" | "DOWNLOAD_DOCUMENT" | "DOWNLOAD_DOCUSIGN_DOCUMENT" | "DOWNLOAD_DOCUSIGN_ENVELOPE" | "DOWNLOAD_DOCUSIGN_ENVELOPE_DOCUMENTS" | "DOWNLOAD_PREVIEW_DOCUMENT" | "FORWARD_ALL_DOCUMENTS_BY_STATUS" | "FORWARD_DOCUMENT" | "FORWARD_DOCUMENTS" | "FORWARD_DOCUSIGN_DOCUMENT" | "FORWARD_ENVELOPE" | "GENERATE_OFFER" | "LAZY_LOAD_DOCUSIGN_DOCUMENT";
                    status?: "created" | "succeeded" | "failed" | "retrying";
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: {
                                id: string;
                                interactionId: string;
                                type: "CREATE_DOCUSIGN_ENVELOPE" | "CREATE_OFFER_FROM_UPLOADED_DOCUMENT" | "DOWNLOAD_ALL_DOCUMENTS_BY_STATUS" | "DOWNLOAD_DOCUMENT" | "DOWNLOAD_DOCUSIGN_DOCUMENT" | "DOWNLOAD_DOCUSIGN_ENVELOPE" | "DOWNLOAD_DOCUSIGN_ENVELOPE_DOCUMENTS" | "DOWNLOAD_PREVIEW_DOCUMENT" | "FORWARD_ALL_DOCUMENTS_BY_STATUS" | "FORWARD_DOCUMENT" | "FORWARD_DOCUMENTS" | "FORWARD_DOCUSIGN_DOCUMENT" | "FORWARD_ENVELOPE" | "GENERATE_OFFER" | "LAZY_LOAD_DOCUSIGN_DOCUMENT";
                                status: "created" | "succeeded" | "failed" | "retrying";
                                /** Format: date-time */
                                createdAt: string;
                                progress: number;
                                requestData: unknown;
                                responseData: unknown;
                            }[];
                            facets?: {
                                [key: string]: {
                                    [key: string]: string;
                                };
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        /** Create a runner */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        type: "CREATE_DOCUSIGN_ENVELOPE" | "CREATE_OFFER_FROM_UPLOADED_DOCUMENT" | "DOWNLOAD_ALL_DOCUMENTS_BY_STATUS" | "DOWNLOAD_DOCUMENT" | "DOWNLOAD_DOCUSIGN_DOCUMENT" | "DOWNLOAD_DOCUSIGN_ENVELOPE" | "DOWNLOAD_DOCUSIGN_ENVELOPE_DOCUMENTS" | "DOWNLOAD_PREVIEW_DOCUMENT" | "FORWARD_ALL_DOCUMENTS_BY_STATUS" | "FORWARD_DOCUMENT" | "FORWARD_DOCUMENTS" | "FORWARD_DOCUSIGN_DOCUMENT" | "FORWARD_ENVELOPE" | "GENERATE_OFFER" | "LAZY_LOAD_DOCUSIGN_DOCUMENT";
                        interactionId: string;
                        requestData: Record<string, never>;
                    } & (unknown & unknown & unknown & unknown & unknown & unknown & unknown & unknown & unknown & unknown & unknown & unknown & unknown);
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            type: "CREATE_DOCUSIGN_ENVELOPE" | "CREATE_OFFER_FROM_UPLOADED_DOCUMENT" | "DOWNLOAD_ALL_DOCUMENTS_BY_STATUS" | "DOWNLOAD_DOCUMENT" | "DOWNLOAD_DOCUSIGN_DOCUMENT" | "DOWNLOAD_DOCUSIGN_ENVELOPE" | "DOWNLOAD_DOCUSIGN_ENVELOPE_DOCUMENTS" | "DOWNLOAD_PREVIEW_DOCUMENT" | "FORWARD_ALL_DOCUMENTS_BY_STATUS" | "FORWARD_DOCUMENT" | "FORWARD_DOCUMENTS" | "FORWARD_DOCUSIGN_DOCUMENT" | "FORWARD_ENVELOPE" | "GENERATE_OFFER" | "LAZY_LOAD_DOCUSIGN_DOCUMENT";
                            progress: number;
                            /** Format: date-time */
                            createdAt: string;
                            status: "created" | "succeeded" | "failed" | "retrying";
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            statusCode: number;
                            message: string;
                            error: string;
                            code?: string;
                            errors?: string[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/runners/{runnerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a runner by runner id */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    runnerId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            type: "CREATE_DOCUSIGN_ENVELOPE" | "CREATE_OFFER_FROM_UPLOADED_DOCUMENT" | "DOWNLOAD_ALL_DOCUMENTS_BY_STATUS" | "DOWNLOAD_DOCUMENT" | "DOWNLOAD_DOCUSIGN_DOCUMENT" | "DOWNLOAD_DOCUSIGN_ENVELOPE" | "DOWNLOAD_DOCUSIGN_ENVELOPE_DOCUMENTS" | "DOWNLOAD_PREVIEW_DOCUMENT" | "FORWARD_ALL_DOCUMENTS_BY_STATUS" | "FORWARD_DOCUMENT" | "FORWARD_DOCUMENTS" | "FORWARD_DOCUSIGN_DOCUMENT" | "FORWARD_ENVELOPE" | "GENERATE_OFFER" | "LAZY_LOAD_DOCUSIGN_DOCUMENT";
                            status: "created" | "succeeded" | "failed" | "retrying";
                            /** Format: date-time */
                            createdAt: string;
                            progress: number;
                            requestData: unknown;
                            responseData: unknown;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update a runner */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    runnerId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        type: "CREATE_DOCUSIGN_ENVELOPE" | "CREATE_OFFER_FROM_UPLOADED_DOCUMENT" | "DOWNLOAD_ALL_DOCUMENTS_BY_STATUS" | "DOWNLOAD_DOCUMENT" | "DOWNLOAD_DOCUSIGN_DOCUMENT" | "DOWNLOAD_DOCUSIGN_ENVELOPE" | "DOWNLOAD_DOCUSIGN_ENVELOPE_DOCUMENTS" | "DOWNLOAD_PREVIEW_DOCUMENT" | "FORWARD_ALL_DOCUMENTS_BY_STATUS" | "FORWARD_DOCUMENT" | "FORWARD_DOCUMENTS" | "FORWARD_DOCUSIGN_DOCUMENT" | "FORWARD_ENVELOPE" | "GENERATE_OFFER" | "LAZY_LOAD_DOCUSIGN_DOCUMENT";
                        status?: "created" | "succeeded" | "failed" | "retrying";
                        progress?: number;
                        responseData?: unknown;
                    } & (unknown & unknown & unknown & unknown & unknown & unknown);
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            type: "CREATE_DOCUSIGN_ENVELOPE" | "CREATE_OFFER_FROM_UPLOADED_DOCUMENT" | "DOWNLOAD_ALL_DOCUMENTS_BY_STATUS" | "DOWNLOAD_DOCUMENT" | "DOWNLOAD_DOCUSIGN_DOCUMENT" | "DOWNLOAD_DOCUSIGN_ENVELOPE" | "DOWNLOAD_DOCUSIGN_ENVELOPE_DOCUMENTS" | "DOWNLOAD_PREVIEW_DOCUMENT" | "FORWARD_ALL_DOCUMENTS_BY_STATUS" | "FORWARD_DOCUMENT" | "FORWARD_DOCUMENTS" | "FORWARD_DOCUSIGN_DOCUMENT" | "FORWARD_ENVELOPE" | "GENERATE_OFFER" | "LAZY_LOAD_DOCUSIGN_DOCUMENT";
                            status: "created" | "succeeded" | "failed" | "retrying";
                            /** Format: date-time */
                            createdAt: string;
                            progress: number;
                            requestData: unknown;
                            responseData: unknown;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/interactions/{interactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-12"];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        status?: ("active" | "activeCont" | "backUp" | "closed" | "comingSoon" | "expired" | "lost" | "offMarket" | "onMarket" | "pending" | "preListing" | "rejected" | "withdrawn" | "noStatus") | ("acceptancePending" | "accepted" | "accepting" | "active" | "activeCont" | "backUp" | "buyerCountered" | "cancellationPending" | "cancelled" | "closed" | "counterOfferSent" | "countering" | "handshake" | "noStatus" | "pending" | "ratified" | "rejected" | "sellerCountered" | "underReview") | ("active" | "activeCont" | "closed" | "comingSoon" | "expired" | "lost" | "onMarket" | "pending" | "preListing" | "rejected" | "withdrawn" | "backUp" | "cancelled" | "ratified");
                        representation?: "tenant" | "landlord" | "dual";
                        property: components["schemas"]["def-39"];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-12"];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        type: "listing" | "offer" | "lease" | "clientGroup" | "referral" | "userTemplate";
                        interaction: components["schemas"]["def-30"] | components["schemas"]["def-22"] | components["schemas"]["def-17"] | components["schemas"]["def-5"] | components["schemas"]["def-43"];
                    } & (unknown & unknown & unknown & unknown & unknown);
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-12"];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/interactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    offset?: number;
                    limit?: number;
                    search?: string;
                    facets?: string;
                    sort?: string;
                    isGlobal?: boolean;
                    ids?: string;
                    needsAttention?: boolean;
                    includeFacetCountResults?: boolean;
                    includeContacts?: boolean;
                    type?: "listing" | "offer" | "lease" | "clientGroup" | "referral" | "userTemplate";
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: components["schemas"]["def-13"][];
                            facets?: {
                                [key: string]: {
                                    [key: string]: string;
                                };
                            };
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        type: "listing" | "offer" | "lease" | "clientGroup" | "referral" | "userTemplate";
                        interaction: components["schemas"]["def-29"] | components["schemas"]["def-21"] | components["schemas"]["def-16"] | components["schemas"]["def-4"] | components["schemas"]["def-42"];
                    } & (unknown & unknown & unknown & unknown & unknown);
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-12"];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/basic-info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-14"];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/default-contacts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get interactions owner's default contacts by interactionId */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            escrowOfficer?: null | ({
                                externalId?: null | string;
                                firstName?: null | string;
                                lastName?: null | string;
                                homePhone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                avatar?: null | string;
                                googleContactId?: null | string;
                                followUpBossContactId?: null | string;
                                userId?: null | string;
                                teamId?: null | string;
                                order?: number;
                                contactSource?: null | string;
                            } & {
                                companyName?: null | string;
                                escrowNumber?: null | string;
                                role?: null | string;
                            });
                            titleOfficer?: null | ({
                                externalId?: null | string;
                                firstName?: null | string;
                                lastName?: null | string;
                                homePhone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                avatar?: null | string;
                                googleContactId?: null | string;
                                followUpBossContactId?: null | string;
                                userId?: null | string;
                                teamId?: null | string;
                                order?: number;
                                contactSource?: null | string;
                            } & {
                                companyName?: null | string;
                                role?: null | string;
                                titleNumber?: null | string;
                            });
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/export": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            fileUrl: string;
                            fileName: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/envelopes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    search?: string;
                    facets?: string;
                    sort?: string;
                    ids?: string;
                    needsAttention?: boolean;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: components["schemas"]["def-12"][];
                            facets?: {
                                [key: string]: {
                                    [key: string]: string;
                                };
                            };
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/timelines": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        date: string;
                        description?: null | string;
                        title: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/timelines/{dateId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    dateId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    dateId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        date?: null | (string);
                        description?: null | string;
                        title?: null | string;
                        status?: null | ("unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted");
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/interactions/{interactionId}/timelines/{dateId}/restore": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    dateId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: date */
                            date: string;
                            description?: null | string;
                            title: string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            googleEventId?: null | string;
                            googleEventStatus?: null | ("success" | "fail");
                            googleEventUpdatedAt?: null | string;
                            status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                            externalId?: null | string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/timelines/send": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        subject: string;
                        message: string;
                        inviteAndShareRecipients: string[];
                        shareOnlyRecipients: string[];
                        /** Format: email */
                        sendAs: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            dates: {
                                id: string;
                                interactionId: string;
                                /** Format: date */
                                date: string;
                                description?: null | string;
                                title: string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                googleEventId?: null | string;
                                googleEventStatus?: null | ("success" | "fail");
                                googleEventUpdatedAt?: null | string;
                                status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                                externalId?: null | string;
                            }[];
                            recipients: {
                                id: string;
                                interactionId: string;
                                /** Format: email */
                                email: string;
                                status: "success" | "fail" | "sending";
                                type: "inviteAndShare" | "shareOnly";
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/timelines/recipients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            interactionId: string;
                            /** Format: email */
                            email: string;
                            status: "success" | "fail" | "sending";
                            type: "inviteAndShare" | "shareOnly";
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/timelines/recent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: null | string;
                            interactionId: string;
                            status?: null | ("success" | "fail" | "sending");
                            recipients: {
                                id: string;
                                interactionId: string;
                                /** Format: email */
                                email: string;
                                status: "success" | "fail" | "sending";
                                type: "inviteAndShare" | "shareOnly";
                            }[];
                            dates: {
                                id: string;
                                interactionId: string;
                                /** Format: date */
                                date: string;
                                description?: null | string;
                                title: string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                googleEventId?: null | string;
                                googleEventStatus?: null | ("success" | "fail");
                                googleEventUpdatedAt?: null | string;
                                status: "unshared" | "shared" | "edited" | "sending" | "deleted" | "toBeDeleted";
                                externalId?: null | string;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/timelines/preview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            defaultShareOnlyRecipients: string[];
                            defaultInviteAndShareRecipients: string[];
                            subject: string;
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/attachments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    type?: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/attachments/{attachmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    attachmentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    attachmentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Document deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    attachmentId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                        externalId?: null | string;
                        file: {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        /** Format: date-time */
                        updatedAt?: string;
                        rtdbEventTimestamp?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/interactions/{interactionId}/attachments/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Upload attachments */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        names: string[];
                        type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            attachment: {
                                id: string;
                                type: "coverLetter" | "disclosures" | "preQual" | "proofOfFunds" | "signedAgreement";
                                file: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                interactionId: string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            };
                            uploadUrl: string;
                        }[];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/files": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    type?: string;
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        externalId?: null | string;
                        file: {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        /** Format: date-time */
                        updatedAt?: string;
                        rtdbEventTimestamp?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/files/{fileId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Document deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        externalId?: null | string;
                        file: {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        /** Format: date-time */
                        updatedAt?: string;
                        rtdbEventTimestamp?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/interactions/{interactionId}/files/images": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get interaction images */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            file: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            interactionId: string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/files/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Upload interaction images */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        names: string[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            image: {
                                id: string;
                                file: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                interactionId: string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            };
                            uploadUrl: string;
                        }[];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/document-input-presets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all cover sheet input presets for document tagging */
        get: {
            parameters: {
                query?: {
                    /** @description A list of input recipient IDs to generate presets for. This is only respected for user template interactions. */
                    dynamicRecipientIds?: string[];
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            name: string;
                            value: string;
                            label: string;
                            group: string;
                            isSyncEnabled: boolean;
                        }[];
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number & 400;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/contacts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    contactType?: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    completeInteractionModel?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ((({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }))[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        licenseNumber?: null | string;
                        licenseState?: null | string;
                        mlsId?: null | string;
                        officeNumber?: null | string;
                        jurisdiction?: null | string;
                        primaryMls?: null | string;
                        commission?: null | string;
                        sellingCommission?: null | string;
                        listingPeriod?: null | string;
                        teamId?: null | string;
                        teamName?: null | string;
                        teamAlias?: null | string;
                        teamBusinessLicenseEntityNumber?: null | string;
                        broker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        brokerage?: {
                            companyName?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            phone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            officeEmail?: null | string;
                            licenseNumber?: null | string;
                            jurisdiction?: null | string;
                            mlsCode?: null | string;
                            mlsId?: null | string;
                            taxId?: null | string;
                        };
                        officeManager?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        supervisingBroker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        title?: null | string;
                        entityType?: null | string;
                        isSuccessor?: null | string;
                        isSelfRepresented?: "true" | "false";
                        ownershipStatus?: null | string;
                        entity?: {
                            title?: null | string;
                            titleOther?: null | string;
                            entityName?: null | string;
                        };
                        powerOfAttorney?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            email?: null | string;
                        };
                        probate?: {
                            title?: null | string;
                            titleOther?: null | string;
                            estateName?: null | string;
                        };
                        trust?: {
                            title?: null | string;
                            titleOther?: null | string;
                            trustName?: null | string;
                        };
                        referralClientTypes?: {
                            referralBuyer: "true" | "false";
                            referralSeller: "true" | "false";
                            referralLandlord: "true" | "false";
                            referralTenant: "true" | "false";
                        };
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        escrowNumber?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        confirmationNumber?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                        titleNumber?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    });
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        });
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/contacts/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        });
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        licenseNumber?: null | string;
                        licenseState?: null | string;
                        mlsId?: null | string;
                        officeNumber?: null | string;
                        jurisdiction?: null | string;
                        primaryMls?: null | string;
                        commission?: null | string;
                        sellingCommission?: null | string;
                        listingPeriod?: null | string;
                        teamId?: null | string;
                        teamName?: null | string;
                        teamAlias?: null | string;
                        teamBusinessLicenseEntityNumber?: null | string;
                        broker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        brokerage?: {
                            companyName?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            phone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            officeEmail?: null | string;
                            licenseNumber?: null | string;
                            jurisdiction?: null | string;
                            mlsCode?: null | string;
                            mlsId?: null | string;
                            taxId?: null | string;
                        };
                        officeManager?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        supervisingBroker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        title?: null | string;
                        entityType?: null | string;
                        isSuccessor?: null | string;
                        isSelfRepresented?: "true" | "false";
                        ownershipStatus?: null | string;
                        entity?: {
                            title?: null | string;
                            titleOther?: null | string;
                            entityName?: null | string;
                        };
                        powerOfAttorney?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            email?: null | string;
                        };
                        probate?: {
                            title?: null | string;
                            titleOther?: null | string;
                            estateName?: null | string;
                        };
                        trust?: {
                            title?: null | string;
                            titleOther?: null | string;
                            trustName?: null | string;
                        };
                        referralClientTypes?: {
                            referralBuyer: "true" | "false";
                            referralSeller: "true" | "false";
                            referralLandlord: "true" | "false";
                            referralTenant: "true" | "false";
                        };
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        escrowNumber?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        confirmationNumber?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    }) | (({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                        titleNumber?: null | string;
                    }) & {
                        type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                    });
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        });
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Contact deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        licenseNumber?: null | string;
                        licenseState?: null | string;
                        mlsId?: null | string;
                        officeNumber?: null | string;
                        jurisdiction?: null | string;
                        primaryMls?: null | string;
                        commission?: null | string;
                        sellingCommission?: null | string;
                        listingPeriod?: null | string;
                        teamId?: null | string;
                        teamName?: null | string;
                        teamAlias?: null | string;
                        teamBusinessLicenseEntityNumber?: null | string;
                        broker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        brokerage?: {
                            companyName?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            phone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            officeEmail?: null | string;
                            licenseNumber?: null | string;
                            jurisdiction?: null | string;
                            mlsCode?: null | string;
                            mlsId?: null | string;
                            taxId?: null | string;
                        };
                        officeManager?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                        supervisingBroker?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            licenseNumber?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                        };
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        title?: null | string;
                        entityType?: null | string;
                        isSuccessor?: null | string;
                        isSelfRepresented?: "true" | "false";
                        ownershipStatus?: null | string;
                        entity?: {
                            title?: null | string;
                            titleOther?: null | string;
                            entityName?: null | string;
                        };
                        powerOfAttorney?: {
                            firstName?: null | string;
                            lastName?: null | string;
                            email?: null | string;
                        };
                        probate?: {
                            title?: null | string;
                            titleOther?: null | string;
                            estateName?: null | string;
                        };
                        trust?: {
                            title?: null | string;
                            titleOther?: null | string;
                            trustName?: null | string;
                        };
                        referralClientTypes?: {
                            referralBuyer: "true" | "false";
                            referralSeller: "true" | "false";
                            referralLandlord: "true" | "false";
                            referralTenant: "true" | "false";
                        };
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | {
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        escrowNumber?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        confirmationNumber?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                    }) | ({
                        externalId?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        homePhone?: null | string;
                        cellPhone?: null | string;
                        fax?: null | string;
                        email?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        city?: null | string;
                        state?: null | string;
                        zip?: null | string;
                        county?: null | string;
                        avatar?: null | string;
                        googleContactId?: null | string;
                        followUpBossContactId?: null | string;
                        userId?: null | string;
                        teamId?: null | string;
                        order?: number;
                        contactSource?: null | string;
                    } & {
                        companyName?: null | string;
                        role?: null | string;
                        titleNumber?: null | string;
                    });
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            licenseNumber?: null | string;
                            licenseState?: null | string;
                            mlsId?: null | string;
                            officeNumber?: null | string;
                            jurisdiction?: null | string;
                            primaryMls?: null | string;
                            commission?: null | string;
                            sellingCommission?: null | string;
                            listingPeriod?: null | string;
                            teamId?: null | string;
                            teamName?: null | string;
                            teamAlias?: null | string;
                            teamBusinessLicenseEntityNumber?: null | string;
                            broker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            brokerage?: {
                                companyName?: null | string;
                                street1?: null | string;
                                street2?: null | string;
                                city?: null | string;
                                state?: null | string;
                                zip?: null | string;
                                county?: null | string;
                                phone?: null | string;
                                cellPhone?: null | string;
                                fax?: null | string;
                                email?: null | string;
                                officeEmail?: null | string;
                                licenseNumber?: null | string;
                                jurisdiction?: null | string;
                                mlsCode?: null | string;
                                mlsId?: null | string;
                                taxId?: null | string;
                            };
                            officeManager?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                            supervisingBroker?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            title?: null | string;
                            entityType?: null | string;
                            isSuccessor?: null | string;
                            isSelfRepresented?: "true" | "false";
                            ownershipStatus?: null | string;
                            entity?: {
                                title?: null | string;
                                titleOther?: null | string;
                                entityName?: null | string;
                            };
                            powerOfAttorney?: {
                                firstName?: null | string;
                                lastName?: null | string;
                                email?: null | string;
                            };
                            probate?: {
                                title?: null | string;
                                titleOther?: null | string;
                                estateName?: null | string;
                            };
                            trust?: {
                                title?: null | string;
                                titleOther?: null | string;
                                trustName?: null | string;
                            };
                            referralClientTypes?: {
                                referralBuyer: "true" | "false";
                                referralSeller: "true" | "false";
                                referralLandlord: "true" | "false";
                                referralTenant: "true" | "false";
                            };
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | ({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            escrowNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            confirmationNumber?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        }) | (({
                            externalId?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            homePhone?: null | string;
                            cellPhone?: null | string;
                            fax?: null | string;
                            email?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            city?: null | string;
                            state?: null | string;
                            zip?: null | string;
                            county?: null | string;
                            avatar?: null | string;
                            googleContactId?: null | string;
                            followUpBossContactId?: null | string;
                            userId?: null | string;
                            teamId?: null | string;
                            order?: number;
                            contactSource?: null | string;
                        } & {
                            companyName?: null | string;
                            role?: null | string;
                            titleNumber?: null | string;
                        }) & {
                            id: string;
                            type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                            interactionId: string;
                            createdBy: string;
                            updatedBy: string;
                        });
                    };
                };
            };
        };
        trace?: never;
    };
    "/interactions/{interactionId}/transaction-coordinators": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            email?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/injected-fields/{injectedFieldId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Return coversheet update ready name/value pairs */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    injectedFieldId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            entity: string;
                            entityId?: string;
                            entityType?: null | string;
                            type: "text" | "textarea" | "money" | "date" | "radio" | "checkbox" | "number" | "phone";
                            name: string;
                            value: unknown;
                            subPath?: null | string;
                            order?: null | number;
                            interactionId?: string;
                            interactionType?: "listing" | "offer" | "lease" | "clientGroup" | "referral";
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/envelopes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    status?: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                    needsAttention?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: null | string;
                        docusignEnvelopeId?: null | string;
                        status?: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                        isContractEnvelope?: boolean;
                        sentAt?: null | string;
                        completedAt?: null | string;
                        voidedAt?: null | string;
                        deliveredAt?: null | string;
                        declinedAt?: null | string;
                        rtdbEventTimestamp?: string;
                    } & {
                        externalId?: null | string;
                        /** Format: date-time */
                        createdAt?: string;
                        recipients?: {
                            externalId?: null | string;
                            docusignRecipientId?: null | string;
                            email?: null | string;
                            name?: null | string;
                            status?: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                            type?: null | string;
                        }[];
                        unsignedFile?: null | {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        signedFile?: null | {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/envelopes/preview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @deprecated */
                            signers: ({
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            } & {
                                fullName: string;
                                signerName: string;
                                deliveryOrder: number;
                                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator" | "broker" | "officeManager" | "supervisingBroker" | "counterpartySupervisingBroker";
                                order: number;
                            })[];
                            recipients: ({
                                firstName?: null | string;
                                lastName?: null | string;
                                licenseNumber?: null | string;
                                cellPhone?: null | string;
                                email?: null | string;
                            } & {
                                fullName: string;
                                signerName: string;
                                deliveryOrder: number;
                                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator" | "broker" | "officeManager" | "supervisingBroker" | "counterpartySupervisingBroker";
                                order: number;
                            })[];
                            cc: string[];
                            subject: string;
                            message: string;
                            name: string;
                            /** Format: date-time */
                            shortUrlExpirationDate: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/envelopes/{envelopeId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: null | string;
                        docusignEnvelopeId?: null | string;
                        status?: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                        isContractEnvelope?: boolean;
                        sentAt?: null | string;
                        completedAt?: null | string;
                        voidedAt?: null | string;
                        deliveredAt?: null | string;
                        declinedAt?: null | string;
                        rtdbEventTimestamp?: string;
                    } & {
                        recipients?: {
                            externalId?: null | string;
                            docusignRecipientId?: null | string;
                            email?: null | string;
                            name?: null | string;
                            status?: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                            type?: null | string;
                        }[];
                        unsignedFile?: null | {
                            name?: string;
                            bucket?: string;
                            filePath?: string;
                            fileType?: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        signedFile?: null | {
                            name?: string;
                            bucket?: string;
                            filePath?: string;
                            fileType?: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        voidedReason?: null | string;
                        declinedReason?: null | string;
                        voidedBy?: null | string;
                        declinedBy?: null | string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/interactions/{interactionId}/envelopes/{envelopeId}/revert": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Envelope was successfully reverted */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/envelopes/{envelopeId}/status/{status}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                    status: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: null | string;
                            docusignEnvelopeId: null | string;
                            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                            isContractEnvelope: boolean;
                            sentAt: null | string;
                            completedAt: null | string;
                            voidedAt: null | string;
                            deliveredAt: null | string;
                            declinedAt: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            recipients: {
                                id: string;
                                docusignRecipientId: null | string;
                                email: null | string;
                                name: null | string;
                                status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                            }[];
                            unsignedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            signedFile: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            voidedReason: null | string;
                            declinedReason: null | string;
                            voidedBy: null | string;
                            declinedBy: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/interactions/{interactionId}/envelopes/{envelopeId}/create-sender-url": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: uri */
                        returnUrl: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            docusignEnvelopeId: string;
                            url: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/envelopes/{envelopeId}/void": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: {
                    withDeleted?: boolean;
                };
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        voidReason: string;
                    };
                };
            };
            responses: {
                /** @description Envelope voided successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/envelopes/{envelopeId}/send-reminder": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        emailSubject: string;
                        emailBody?: string;
                    };
                };
            };
            responses: {
                /** @description Reminder was sent successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/envelopes/{envelopeId}/archive-file": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            downloadUrl?: null | string;
                            bucket: string;
                            filePath: string;
                            fileType: string;
                            contentType: null | string;
                            customMetadata: null | unknown;
                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason: null | string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/envelopes/{envelopeId}/combined-file": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            downloadUrl?: null | string;
                            bucket: string;
                            filePath: string;
                            fileType: string;
                            contentType: null | string;
                            customMetadata: null | unknown;
                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason: null | string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/envelopes/{envelopeId}/documents/{documentId}/file": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    contentDisposition?: "inline" | "attachment";
                };
                header?: never;
                path: {
                    interactionId: string;
                    envelopeId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            downloadUrl?: null | string;
                            bucket: string;
                            filePath: string;
                            fileType: string;
                            contentType: null | string;
                            customMetadata: null | unknown;
                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason: null | string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/packages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    limit: number;
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            hasUnsignedDocuments: boolean;
                            offerId: null | string;
                            interactionId: null | string;
                            runnerId?: null | string;
                            /** Format: date-time */
                            createdAt: string;
                            /** @deprecated */
                            combined: string;
                            /** @deprecated */
                            offerDocs: string;
                            coverLetter?: null | string;
                            preQual?: null | string;
                            proofOfFunds?: null | string;
                            disclosures?: null | string;
                            combinedShortUrl: {
                                id: string;
                                url: string;
                            };
                            offerDocsShortUrl: {
                                id: string;
                                url: string;
                            };
                            coverLetterShortUrl?: null | {
                                id: string;
                                url: string;
                            };
                            preQualShortUrl?: null | {
                                id: string;
                                url: string;
                            };
                            proofOfFundsShortUrl?: null | {
                                id: string;
                                url: string;
                            };
                            disclosuresShortUrl?: null | {
                                id: string;
                                url: string;
                            };
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/documents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all interaction documents for an interaction */
        get: {
            parameters: {
                query?: {
                    offset?: number;
                    limit?: number;
                    facets?: string;
                    sort?: string;
                    status?: "active" | "inactive" | "draft" | "sent";
                };
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: {
                                id: string;
                                name: string;
                                status: "active" | "inactive" | "draft" | "sent";
                                preOrder: number;
                                envelopeOrder: number;
                                interactionId: string;
                                propertyOptionGroupName: null | string;
                                isRequired: boolean;
                                isCustom?: boolean;
                                isTagged?: boolean;
                                answerCount: number;
                                isExternal?: null | boolean;
                                signedFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                documentTemplateId: null | string;
                                documentSourceTemplateId?: null | string;
                                documentVersionId: null | string;
                                documentSourceVersionId: null | string;
                                interactionEnvelopeId: null | string;
                                interactionEnvelope: null | {
                                    id: string;
                                    name: null | string;
                                    docusignEnvelopeId: null | string;
                                    status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                    isContractEnvelope: boolean;
                                    sentAt: null | string;
                                    completedAt: null | string;
                                    voidedAt: null | string;
                                    deliveredAt: null | string;
                                    declinedAt: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                    recipients: {
                                        id: string;
                                        docusignRecipientId: null | string;
                                        email: null | string;
                                        name: null | string;
                                        status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                        type: null | string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                        updatedBy: string;
                                    }[];
                                    unsignedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    signedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    voidedReason: null | string;
                                    declinedReason: null | string;
                                    voidedBy: null | string;
                                    declinedBy: null | string;
                                };
                                missingRequiredFields: number;
                                documentVersionFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                image?: string;
                                /** Format: date-time */
                                createdAt: string;
                            }[];
                            facets?: {
                                [key: string]: {
                                    [key: string]: string;
                                };
                            };
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        /** Create interaction documents by list of document template or pog ids */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        documents?: string[];
                        propertyOptionGroups?: string[];
                        userTemplates?: string[];
                        uploadedDocuments?: string[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                            uploadUrl?: string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/documents/{documentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get an interaction document by id */
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                };
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** Soft delete an interaction document by id */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Document deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Update an interaction document by id */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        externalId?: null | string;
                        name?: string;
                        status?: "active" | "inactive" | "draft" | "sent";
                        preOrder?: number;
                        envelopeOrder?: number;
                        propertyOptionGroupName?: null | string;
                        isRequired?: boolean;
                        documentVersionId?: string;
                        interactionEnvelopeId?: null | string;
                        interactionEnvelope?: null | ({
                            name?: null | string;
                            docusignEnvelopeId?: null | string;
                            status?: "completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided";
                            isContractEnvelope?: boolean;
                            sentAt?: null | string;
                            completedAt?: null | string;
                            voidedAt?: null | string;
                            deliveredAt?: null | string;
                            declinedAt?: null | string;
                            rtdbEventTimestamp?: string;
                        } & {
                            recipients?: {
                                externalId?: null | string;
                                docusignRecipientId?: null | string;
                                email?: null | string;
                                name?: null | string;
                                status?: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                type?: null | string;
                            }[];
                            unsignedFile?: null | {
                                name?: string;
                                bucket?: string;
                                filePath?: string;
                                fileType?: string;
                                uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason?: null | string;
                                contentType?: null | string;
                                customMetadata?: null | unknown;
                            };
                            signedFile?: null | {
                                name?: string;
                                bucket?: string;
                                filePath?: string;
                                fileType?: string;
                                uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason?: null | string;
                                contentType?: null | string;
                                customMetadata?: null | unknown;
                            };
                            voidedReason?: null | string;
                            declinedReason?: null | string;
                            voidedBy?: null | string;
                            declinedBy?: null | string;
                        });
                        rtdbEventTimestamp?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/interactions/{interactionId}/documents/preview/{documentVersionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get an interaction document preview by documentVersionId */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentVersionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/documents/{documentId}/answers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a list of answers by interaction document id */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            externalId: null | string;
                            inputId: string;
                            value: unknown;
                            documentTemplatePageId: null | string;
                            interactionDocumentId: string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Add an answer to an interaction document input */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        pageId: string;
                        inputId: string;
                        value: string;
                    }[];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/interactions/{interactionId}/documents/status/{status}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Soft delete documents by status */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    status: "active" | "inactive" | "draft" | "sent";
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Documents deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        /** Update documents by status */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    status: "active" | "inactive" | "draft" | "sent";
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        status: "active" | "inactive" | "draft" | "sent";
                    };
                };
            };
            responses: {
                /** @description Documents status updated successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/interactions/{interactionId}/documents/envelope-order": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Update document envelope orders by id
         * @description The envelopeOrder will be updated to the index of the document id in the documentIds array.
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        documentIds: string[];
                    };
                };
            };
            responses: {
                /** @description Document envelope orders updated successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/interactions/{interactionId}/documents/{documentId}/pages/{pageId}/inputs/{inputId}/answer": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Add an answer to an interaction document input */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                    pageId: string;
                    inputId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        value: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            externalId: null | string;
                            inputId: string;
                            value: unknown;
                            documentTemplatePageId: null | string;
                            interactionDocumentId: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/interactions/{interactionId}/documents/{documentId}/pages/{pageId}/inputs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add an interaction document input */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                    pageId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-47"] & {
                        applyCommaSeparator?: null | boolean;
                        color?: null | string;
                        disabled?: null | boolean;
                        dropdownOptions?: null | {
                            value?: null | string;
                            label?: null | string;
                        }[];
                        fontSize?: null | number;
                        formula?: null | string;
                        group?: null | {
                            inputIdx: string;
                            pageIdx: number;
                        }[];
                        height?: null | number;
                        image?: null | ("Image Main" | "Image Alt");
                        initialsGroup?: null | {
                            top: number;
                            left: number;
                            recipientId: string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                        }[];
                        isSyncEnabled?: boolean;
                        left?: number | null;
                        lineHeight?: null | number;
                        maxLength?: null | string;
                        multiline?: null | {
                            inputIdx: string;
                            pageIdx: number;
                        };
                        multilineValue?: null | string;
                        name?: null | string;
                        optional?: null | boolean;
                        optionalSide?: null | string;
                        options?: null | {
                            left?: null | number;
                            reportingName?: null | string;
                            top?: null | number;
                            value?: null | string;
                            width?: null | number;
                            tabIndex?: null | number;
                        }[];
                        pageId?: null | string;
                        recipientId?: null | string;
                        recipientName?: null | string;
                        recipientRole?: null | string;
                        reportingName?: null | string;
                        required?: null | boolean;
                        suffix?: null | string;
                        tabIndex?: null | number;
                        targetFieldNames?: null | {
                            [key: string]: string;
                        };
                        textAlign?: null | string;
                        textIndent?: null | number;
                        lastLineWidth?: null | number;
                        top?: number | null;
                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                        typeFace?: null | string;
                        value?: null | string;
                        width?: number | null;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            isInjected: boolean;
                        } & (components["schemas"]["def-47"] & {
                            applyCommaSeparator?: null | boolean;
                            color?: null | string;
                            disabled?: null | boolean;
                            dropdownOptions?: null | {
                                value?: null | string;
                                label?: null | string;
                            }[];
                            fontSize?: null | number;
                            formula?: null | string;
                            group?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            }[];
                            height?: null | number;
                            image?: null | ("Image Main" | "Image Alt");
                            initialsGroup?: null | {
                                top: number;
                                left: number;
                                recipientId: string;
                                recipientName?: null | string;
                                recipientRole?: null | string;
                            }[];
                            isSyncEnabled?: boolean;
                            left?: number | null;
                            lineHeight?: null | number;
                            maxLength?: null | string;
                            multiline?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            };
                            multilineValue?: null | string;
                            name?: null | string;
                            optional?: null | boolean;
                            optionalSide?: null | string;
                            options?: null | {
                                left?: null | number;
                                reportingName?: null | string;
                                top?: null | number;
                                value?: null | string;
                                width?: null | number;
                                tabIndex?: null | number;
                            }[];
                            pageId?: null | string;
                            recipientId?: null | string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                            reportingName?: null | string;
                            required?: null | boolean;
                            suffix?: null | string;
                            tabIndex?: null | number;
                            targetFieldNames?: null | {
                                [key: string]: string;
                            };
                            textAlign?: null | string;
                            textIndent?: null | number;
                            lastLineWidth?: null | number;
                            top?: number | null;
                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                            typeFace?: null | string;
                            value?: null | string;
                            width?: number | null;
                        });
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/documents/{documentId}/pages/{pageId}/inputs/{inputId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update an interaction document input */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                    pageId: string;
                    inputId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-47"] & {
                        applyCommaSeparator?: null | boolean;
                        color?: null | string;
                        disabled?: null | boolean;
                        dropdownOptions?: null | {
                            value?: null | string;
                            label?: null | string;
                        }[];
                        fontSize?: null | number;
                        formula?: null | string;
                        group?: null | {
                            inputIdx: string;
                            pageIdx: number;
                        }[];
                        height?: null | number;
                        image?: null | ("Image Main" | "Image Alt");
                        initialsGroup?: null | {
                            top: number;
                            left: number;
                            recipientId: string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                        }[];
                        isSyncEnabled?: boolean;
                        left?: number | null;
                        lineHeight?: null | number;
                        maxLength?: null | string;
                        multiline?: null | {
                            inputIdx: string;
                            pageIdx: number;
                        };
                        multilineValue?: null | string;
                        name?: null | string;
                        optional?: null | boolean;
                        optionalSide?: null | string;
                        options?: null | {
                            left?: null | number;
                            reportingName?: null | string;
                            top?: null | number;
                            value?: null | string;
                            width?: null | number;
                            tabIndex?: null | number;
                        }[];
                        pageId?: null | string;
                        recipientId?: null | string;
                        recipientName?: null | string;
                        recipientRole?: null | string;
                        reportingName?: null | string;
                        required?: null | boolean;
                        suffix?: null | string;
                        tabIndex?: null | number;
                        targetFieldNames?: null | {
                            [key: string]: string;
                        };
                        textAlign?: null | string;
                        textIndent?: null | number;
                        lastLineWidth?: null | number;
                        top?: number | null;
                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                        typeFace?: null | string;
                        value?: null | string;
                        width?: number | null;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            isInjected: boolean;
                        } & (components["schemas"]["def-47"] & {
                            applyCommaSeparator?: null | boolean;
                            color?: null | string;
                            disabled?: null | boolean;
                            dropdownOptions?: null | {
                                value?: null | string;
                                label?: null | string;
                            }[];
                            fontSize?: null | number;
                            formula?: null | string;
                            group?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            }[];
                            height?: null | number;
                            image?: null | ("Image Main" | "Image Alt");
                            initialsGroup?: null | {
                                top: number;
                                left: number;
                                recipientId: string;
                                recipientName?: null | string;
                                recipientRole?: null | string;
                            }[];
                            isSyncEnabled?: boolean;
                            left?: number | null;
                            lineHeight?: null | number;
                            maxLength?: null | string;
                            multiline?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            };
                            multilineValue?: null | string;
                            name?: null | string;
                            optional?: null | boolean;
                            optionalSide?: null | string;
                            options?: null | {
                                left?: null | number;
                                reportingName?: null | string;
                                top?: null | number;
                                value?: null | string;
                                width?: null | number;
                                tabIndex?: null | number;
                            }[];
                            pageId?: null | string;
                            recipientId?: null | string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                            reportingName?: null | string;
                            required?: null | boolean;
                            suffix?: null | string;
                            tabIndex?: null | number;
                            targetFieldNames?: null | {
                                [key: string]: string;
                            };
                            textAlign?: null | string;
                            textIndent?: null | number;
                            lastLineWidth?: null | number;
                            top?: number | null;
                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                            typeFace?: null | string;
                            value?: null | string;
                            width?: number | null;
                        });
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        post?: never;
        /** Delete an interaction document input */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                    pageId: string;
                    inputId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Input deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/documents/{documentId}/clone": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Clone a document by id */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                    documentId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/documents/duplicate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Duplicate documents by filtering criteria */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        documentIds?: string[];
                        /** Format: uuid */
                        envelopeId?: string;
                        /** @enum {string} */
                        status?: "inactive";
                        /** Format: uuid */
                        targetInteractionId?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            status: "active" | "inactive" | "draft" | "sent";
                            preOrder: number;
                            envelopeOrder: number;
                            interactionId: string;
                            propertyOptionGroupName: null | string;
                            isRequired: boolean;
                            isCustom?: boolean;
                            isTagged?: boolean;
                            answerCount: number;
                            isExternal?: null | boolean;
                            signedFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            documentTemplateId: null | string;
                            documentSourceTemplateId?: null | string;
                            documentVersionId: null | string;
                            documentSourceVersionId: null | string;
                            interactionEnvelopeId: null | string;
                            interactionEnvelope: null | {
                                id: string;
                                name: null | string;
                                docusignEnvelopeId: null | string;
                                status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                isContractEnvelope: boolean;
                                sentAt: null | string;
                                completedAt: null | string;
                                voidedAt: null | string;
                                deliveredAt: null | string;
                                declinedAt: null | string;
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                recipients: {
                                    id: string;
                                    docusignRecipientId: null | string;
                                    email: null | string;
                                    name: null | string;
                                    status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                    type: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                }[];
                                unsignedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                signedFile: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                voidedReason: null | string;
                                declinedReason: null | string;
                                voidedBy: null | string;
                                declinedBy: null | string;
                            };
                            missingRequiredFields: number;
                            documentVersionFile?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                name?: null | string;
                                fullPath?: string;
                                img?: {
                                    url?: string;
                                };
                                inputs: ({
                                    id: string;
                                    isInjected: boolean;
                                } & (components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                }))[];
                            }[];
                            image?: string;
                            /** Format: date-time */
                            createdAt: string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/interactions/{interactionId}/documents/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Upload interaction documents */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        names: string[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            document: {
                                id: string;
                                name: string;
                                status: "active" | "inactive" | "draft" | "sent";
                                preOrder: number;
                                envelopeOrder: number;
                                interactionId: string;
                                propertyOptionGroupName: null | string;
                                isRequired: boolean;
                                isCustom?: boolean;
                                isTagged?: boolean;
                                answerCount: number;
                                isExternal?: null | boolean;
                                signedFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                documentTemplateId: null | string;
                                documentSourceTemplateId?: null | string;
                                documentVersionId: null | string;
                                documentSourceVersionId: null | string;
                                interactionEnvelopeId: null | string;
                                interactionEnvelope: null | {
                                    id: string;
                                    name: null | string;
                                    docusignEnvelopeId: null | string;
                                    status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                    isContractEnvelope: boolean;
                                    sentAt: null | string;
                                    completedAt: null | string;
                                    voidedAt: null | string;
                                    deliveredAt: null | string;
                                    declinedAt: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                    recipients: {
                                        id: string;
                                        docusignRecipientId: null | string;
                                        email: null | string;
                                        name: null | string;
                                        status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                        type: null | string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                        updatedBy: string;
                                    }[];
                                    unsignedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    signedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    voidedReason: null | string;
                                    declinedReason: null | string;
                                    voidedBy: null | string;
                                    declinedBy: null | string;
                                };
                                missingRequiredFields: number;
                                documentVersionFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    name?: null | string;
                                    fullPath?: string;
                                    img?: {
                                        url?: string;
                                    };
                                    inputs: ({
                                        id: string;
                                        isInjected: boolean;
                                    } & (components["schemas"]["def-47"] & {
                                        applyCommaSeparator?: null | boolean;
                                        color?: null | string;
                                        disabled?: null | boolean;
                                        dropdownOptions?: null | {
                                            value?: null | string;
                                            label?: null | string;
                                        }[];
                                        fontSize?: null | number;
                                        formula?: null | string;
                                        group?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        }[];
                                        height?: null | number;
                                        image?: null | ("Image Main" | "Image Alt");
                                        initialsGroup?: null | {
                                            top: number;
                                            left: number;
                                            recipientId: string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                        }[];
                                        isSyncEnabled?: boolean;
                                        left?: number | null;
                                        lineHeight?: null | number;
                                        maxLength?: null | string;
                                        multiline?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        };
                                        multilineValue?: null | string;
                                        name?: null | string;
                                        optional?: null | boolean;
                                        optionalSide?: null | string;
                                        options?: null | {
                                            left?: null | number;
                                            reportingName?: null | string;
                                            top?: null | number;
                                            value?: null | string;
                                            width?: null | number;
                                            tabIndex?: null | number;
                                        }[];
                                        pageId?: null | string;
                                        recipientId?: null | string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                        reportingName?: null | string;
                                        required?: null | boolean;
                                        suffix?: null | string;
                                        tabIndex?: null | number;
                                        targetFieldNames?: null | {
                                            [key: string]: string;
                                        };
                                        textAlign?: null | string;
                                        textIndent?: null | number;
                                        lastLineWidth?: null | number;
                                        top?: number | null;
                                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                        typeFace?: null | string;
                                        value?: null | string;
                                        width?: number | null;
                                    }))[];
                                }[];
                                image?: string;
                                /** Format: date-time */
                                createdAt: string;
                            };
                            uploadUrl: string;
                        }[];
                    };
                };
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            document: {
                                id: string;
                                name: string;
                                status: "active" | "inactive" | "draft" | "sent";
                                preOrder: number;
                                envelopeOrder: number;
                                interactionId: string;
                                propertyOptionGroupName: null | string;
                                isRequired: boolean;
                                isCustom?: boolean;
                                isTagged?: boolean;
                                answerCount: number;
                                isExternal?: null | boolean;
                                signedFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                documentTemplateId: null | string;
                                documentSourceTemplateId?: null | string;
                                documentVersionId: null | string;
                                documentSourceVersionId: null | string;
                                interactionEnvelopeId: null | string;
                                interactionEnvelope: null | {
                                    id: string;
                                    name: null | string;
                                    docusignEnvelopeId: null | string;
                                    status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
                                    isContractEnvelope: boolean;
                                    sentAt: null | string;
                                    completedAt: null | string;
                                    voidedAt: null | string;
                                    deliveredAt: null | string;
                                    declinedAt: null | string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                    updatedBy: string;
                                    recipients: {
                                        id: string;
                                        docusignRecipientId: null | string;
                                        email: null | string;
                                        name: null | string;
                                        status: "autoresponded" | "completed" | "created" | "declined" | "delivered" | "faxpending" | "sent";
                                        type: null | string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                        updatedBy: string;
                                    }[];
                                    unsignedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    signedFile: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    voidedReason: null | string;
                                    declinedReason: null | string;
                                    voidedBy: null | string;
                                    declinedBy: null | string;
                                };
                                missingRequiredFields: number;
                                documentVersionFile?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    name?: null | string;
                                    fullPath?: string;
                                    img?: {
                                        url?: string;
                                    };
                                    inputs: ({
                                        id: string;
                                        isInjected: boolean;
                                    } & (components["schemas"]["def-47"] & {
                                        applyCommaSeparator?: null | boolean;
                                        color?: null | string;
                                        disabled?: null | boolean;
                                        dropdownOptions?: null | {
                                            value?: null | string;
                                            label?: null | string;
                                        }[];
                                        fontSize?: null | number;
                                        formula?: null | string;
                                        group?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        }[];
                                        height?: null | number;
                                        image?: null | ("Image Main" | "Image Alt");
                                        initialsGroup?: null | {
                                            top: number;
                                            left: number;
                                            recipientId: string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                        }[];
                                        isSyncEnabled?: boolean;
                                        left?: number | null;
                                        lineHeight?: null | number;
                                        maxLength?: null | string;
                                        multiline?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        };
                                        multilineValue?: null | string;
                                        name?: null | string;
                                        optional?: null | boolean;
                                        optionalSide?: null | string;
                                        options?: null | {
                                            left?: null | number;
                                            reportingName?: null | string;
                                            top?: null | number;
                                            value?: null | string;
                                            width?: null | number;
                                            tabIndex?: null | number;
                                        }[];
                                        pageId?: null | string;
                                        recipientId?: null | string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                        reportingName?: null | string;
                                        required?: null | boolean;
                                        suffix?: null | string;
                                        tabIndex?: null | number;
                                        targetFieldNames?: null | {
                                            [key: string]: string;
                                        };
                                        textAlign?: null | string;
                                        textIndent?: null | number;
                                        lastLineWidth?: null | number;
                                        top?: number | null;
                                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                        typeFace?: null | string;
                                        value?: null | string;
                                        width?: number | null;
                                    }))[];
                                }[];
                                image?: string;
                                /** Format: date-time */
                                createdAt: string;
                            };
                            uploadUrl: string;
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{userId}/custom-templates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    offset?: number;
                    limit?: number;
                    facets?: string;
                    sort?: string;
                    isGlobal?: boolean;
                };
                header?: never;
                path: {
                    userId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: components["schemas"]["def-53"][];
                            facets?: {
                                [key: string]: {
                                    [key: string]: string;
                                };
                            };
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    userId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-48"];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-53"];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{userId}/custom-templates/{interactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    userId: string;
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-53"];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    userId: string;
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    userId: string;
                    interactionId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["def-49"];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["def-53"];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            userId: string;
                            isApproved: boolean;
                            firstName?: string;
                            lastName?: string;
                            teamId?: string;
                            email?: string;
                            avatarUrl?: string;
                            /** Format: email */
                            docusignEmail?: string;
                            role?: null | string;
                            agentLicenseStatus?: string;
                            permissions?: string[];
                            /** @default false */
                            hasGlobalInteractionAccess: boolean;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/me/mls-vendors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            primaryMLS?: null | string;
                            primaryMLSVendor?: null | {
                                id: string;
                                name: string;
                                vendor: string;
                                displayName: string;
                                hintText: null | string;
                                locales: string[];
                            };
                            mlsVendors: {
                                id: string;
                                name: string;
                                vendor: string;
                                displayName: string;
                                hintText: null | string;
                                locales: string[];
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}/mls-vendors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            primaryMLS?: null | string;
                            primaryMLSVendor?: null | {
                                id: string;
                                name: string;
                                vendor: string;
                                displayName: string;
                                hintText: null | string;
                                locales: string[];
                            };
                            mlsVendors: {
                                id: string;
                                name: string;
                                vendor: string;
                                displayName: string;
                                hintText: null | string;
                                locales: string[];
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/me/interactions-agents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            userId: string;
                            firstName?: string;
                            lastName?: string;
                            avatarUrl?: string;
                            teamId?: string;
                            teamName?: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/me/reports": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            name: "Financial" | "Growth" | "Pocket" | "Side Listings" | "Tier Progress" | "Platform Fee" | "Cap Progress";
                            desktop: boolean;
                            mobile: boolean;
                            id: number;
                            description: string;
                            /** Format: uri */
                            url: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/me/quick-links": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            quickLink: "BUYER_AGREEMENT" | "CAP_REPORT" | "CREATE_LEASE" | "CREATE_LISTING" | "CREATE_OFFER" | "FINANCIAL_REPORT" | "GROWTH_REPORT" | "PLATFORM_FEE_REPORT" | "RECEIVE_REFERRAL" | "START_REFERRAL" | "TIER_PROGRESS_REPORT" | "GROWTH_HUB" | "USER_TEMPLATES";
                            order: number;
                        }[];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": ("BUYER_AGREEMENT" | "CAP_REPORT" | "CREATE_LEASE" | "CREATE_LISTING" | "CREATE_OFFER" | "FINANCIAL_REPORT" | "GROWTH_REPORT" | "PLATFORM_FEE_REPORT" | "RECEIVE_REFERRAL" | "START_REFERRAL" | "TIER_PROGRESS_REPORT" | "GROWTH_HUB" | "USER_TEMPLATES")[];
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            quickLink: "BUYER_AGREEMENT" | "CAP_REPORT" | "CREATE_LEASE" | "CREATE_LISTING" | "CREATE_OFFER" | "FINANCIAL_REPORT" | "GROWTH_REPORT" | "PLATFORM_FEE_REPORT" | "RECEIVE_REFERRAL" | "START_REFERRAL" | "TIER_PROGRESS_REPORT" | "GROWTH_HUB" | "USER_TEMPLATES";
                            order: number;
                        }[];
                    };
                };
            };
        };
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": ("BUYER_AGREEMENT" | "CAP_REPORT" | "CREATE_LEASE" | "CREATE_LISTING" | "CREATE_OFFER" | "FINANCIAL_REPORT" | "GROWTH_REPORT" | "PLATFORM_FEE_REPORT" | "RECEIVE_REFERRAL" | "START_REFERRAL" | "TIER_PROGRESS_REPORT" | "GROWTH_HUB" | "USER_TEMPLATES")[];
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            quickLink: "BUYER_AGREEMENT" | "CAP_REPORT" | "CREATE_LEASE" | "CREATE_LISTING" | "CREATE_OFFER" | "FINANCIAL_REPORT" | "GROWTH_REPORT" | "PLATFORM_FEE_REPORT" | "RECEIVE_REFERRAL" | "START_REFERRAL" | "TIER_PROGRESS_REPORT" | "GROWTH_HUB" | "USER_TEMPLATES";
                            order: number;
                        }[];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/me/location-history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: date-time */
                            dateTime: string;
                            description: string;
                            title: string;
                            url: string;
                            userId: string;
                        };
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        url: string;
                        title: string;
                        description: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: date-time */
                            dateTime: string;
                            description: string;
                            title: string;
                            url: string;
                            userId: string;
                        };
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}/reports/cache": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Reports cache deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}/reports": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    dataSource?: "boomi" | "identity";
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            name: "Financial" | "Growth" | "Pocket" | "Side Listings" | "Tier Progress" | "Platform Fee" | "Cap Progress";
                            desktop: boolean;
                            mobile: boolean;
                            id: number;
                            description: string;
                            /** Format: uri */
                            url: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/etl/mergeUser": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        primaryUser: {
                            userId: string;
                            salesforceContactId?: null | string;
                            firebaseUserId?: null | string;
                        };
                        secondaryUser: {
                            userId: string;
                            salesforceContactId?: null | string;
                            firebaseUserId?: null | string;
                        };
                    };
                };
            };
            responses: {
                /** @description Users merged successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/etl/mergeUser/auxiliaryData": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        tableName: string;
                        /** Format: uuid */
                        id: string;
                        createdBy: string;
                        /** Format: date-time */
                        createdAt: string;
                        updatedBy: null | string;
                        updatedAt: null | string;
                    }[];
                };
            };
            responses: {
                /** @description Auxiliary data loaded successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            legacyUserId?: null | string;
                            docusignUserId?: null | string;
                            googlePeopleRefreshToken?: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        docusignUserId?: null | string;
                        legacyUserId?: null | string;
                        googlePeopleRefreshToken?: null | string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            legacyUserId?: null | string;
                            docusignUserId?: null | string;
                            googlePeopleRefreshToken?: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/user-settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        id: string;
                        docusignUserId?: string;
                        legacyUserId?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            legacyUserId?: null | string;
                            docusignUserId?: null | string;
                            googlePeopleRefreshToken?: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/google-contact/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    searchValue: string;
                    pageSize?: number;
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            resourceName?: string;
                            etag?: string;
                            names?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                displayName?: string;
                                familyName?: string;
                                givenName?: string;
                                displayNameLastFirst?: string;
                                unstructuredName?: string;
                            }[];
                            photos?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                url?: string;
                            }[];
                            addresses?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                formattedValue?: string;
                                type?: string;
                                formattedType?: string;
                                streetAddress?: string;
                                extendedAddress?: string;
                                city?: string;
                                region?: string;
                                postalCode?: string;
                                country?: string;
                                countryCode?: string;
                            }[];
                            emailAddresses?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                value?: string;
                                type?: string;
                                formattedType?: string;
                            }[];
                            phoneNumbers?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                type?: string;
                                value?: string;
                                formattedType?: string;
                                canonicalForm?: string;
                            }[];
                            userDefined?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                key?: string;
                                value?: string;
                            }[];
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/google-contact": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        resourceName?: null | string;
                        etag?: null | string;
                        names?: {
                            metadata?: {
                                primary?: boolean;
                                source?: {
                                    type?: string;
                                    id?: string;
                                };
                            };
                            displayName?: null | string;
                            familyName?: null | string;
                            givenName?: null | string;
                            displayNameLastFirst?: null | string;
                            unstructuredName?: null | string;
                        }[];
                        photos?: {
                            metadata?: {
                                primary?: boolean;
                                source?: {
                                    type?: string;
                                    id?: string;
                                };
                            };
                            url?: null | string;
                        }[];
                        addresses?: {
                            metadata?: {
                                primary?: boolean;
                                source?: {
                                    type?: string;
                                    id?: string;
                                };
                            };
                            formattedValue?: null | string;
                            type?: null | string;
                            formattedType?: null | string;
                            streetAddress?: null | string;
                            extendedAddress?: string;
                            city?: null | string;
                            region?: null | string;
                            postalCode?: null | string;
                            country?: null | string;
                            countryCode?: null | string;
                        }[];
                        emailAddresses?: {
                            metadata?: {
                                primary?: boolean;
                                source?: {
                                    type?: string;
                                    id?: string;
                                };
                            };
                            value?: null | string;
                            type?: null | string;
                            formattedType?: null | string;
                        }[];
                        phoneNumbers?: {
                            metadata?: {
                                primary?: boolean;
                                source?: {
                                    type?: string;
                                    id?: string;
                                };
                            };
                            type?: null | string;
                            value?: null | string;
                            formattedType?: null | string;
                            canonicalForm?: null | string;
                        }[];
                        userDefined?: {
                            metadata?: {
                                primary?: boolean;
                                source?: {
                                    type?: string;
                                    id?: string;
                                };
                            };
                            key?: null | string;
                            value?: null | string;
                        }[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            resourceName?: string;
                            etag?: string;
                            names?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                displayName?: string;
                                familyName?: string;
                                givenName?: string;
                                displayNameLastFirst?: string;
                                unstructuredName?: string;
                            }[];
                            photos?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                url?: string;
                            }[];
                            addresses?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                formattedValue?: string;
                                type?: string;
                                formattedType?: string;
                                streetAddress?: string;
                                extendedAddress?: string;
                                city?: string;
                                region?: string;
                                postalCode?: string;
                                country?: string;
                                countryCode?: string;
                            }[];
                            emailAddresses?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                value?: string;
                                type?: string;
                                formattedType?: string;
                            }[];
                            phoneNumbers?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                type?: string;
                                value?: string;
                                formattedType?: string;
                                canonicalForm?: string;
                            }[];
                            userDefined?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                key?: string;
                                value?: string;
                            }[];
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/google-contact/{googleContactId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    googleContactId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            resourceName?: string;
                            etag?: string;
                            names?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                displayName?: string;
                                familyName?: string;
                                givenName?: string;
                                displayNameLastFirst?: string;
                                unstructuredName?: string;
                            }[];
                            photos?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                url?: string;
                            }[];
                            addresses?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                formattedValue?: string;
                                type?: string;
                                formattedType?: string;
                                streetAddress?: string;
                                extendedAddress?: string;
                                city?: string;
                                region?: string;
                                postalCode?: string;
                                country?: string;
                                countryCode?: string;
                            }[];
                            emailAddresses?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                value?: string;
                                type?: string;
                                formattedType?: string;
                            }[];
                            phoneNumbers?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                type?: string;
                                value?: string;
                                formattedType?: string;
                                canonicalForm?: string;
                            }[];
                            userDefined?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                key?: string;
                                value?: string;
                            }[];
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    googleContactId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        resourceName?: null | string;
                        etag?: null | string;
                        names?: {
                            metadata?: {
                                primary?: boolean;
                                source?: {
                                    type?: string;
                                    id?: string;
                                };
                            };
                            displayName?: null | string;
                            familyName?: null | string;
                            givenName?: null | string;
                            displayNameLastFirst?: null | string;
                            unstructuredName?: null | string;
                        }[];
                        photos?: {
                            metadata?: {
                                primary?: boolean;
                                source?: {
                                    type?: string;
                                    id?: string;
                                };
                            };
                            url?: null | string;
                        }[];
                        addresses?: {
                            metadata?: {
                                primary?: boolean;
                                source?: {
                                    type?: string;
                                    id?: string;
                                };
                            };
                            formattedValue?: null | string;
                            type?: null | string;
                            formattedType?: null | string;
                            streetAddress?: null | string;
                            extendedAddress?: string;
                            city?: null | string;
                            region?: null | string;
                            postalCode?: null | string;
                            country?: null | string;
                            countryCode?: null | string;
                        }[];
                        emailAddresses?: {
                            metadata?: {
                                primary?: boolean;
                                source?: {
                                    type?: string;
                                    id?: string;
                                };
                            };
                            value?: null | string;
                            type?: null | string;
                            formattedType?: null | string;
                        }[];
                        phoneNumbers?: {
                            metadata?: {
                                primary?: boolean;
                                source?: {
                                    type?: string;
                                    id?: string;
                                };
                            };
                            type?: null | string;
                            value?: null | string;
                            formattedType?: null | string;
                            canonicalForm?: null | string;
                        }[];
                        userDefined?: {
                            metadata?: {
                                primary?: boolean;
                                source?: {
                                    type?: string;
                                    id?: string;
                                };
                            };
                            key?: null | string;
                            value?: null | string;
                        }[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            resourceName?: string;
                            etag?: string;
                            names?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                displayName?: string;
                                familyName?: string;
                                givenName?: string;
                                displayNameLastFirst?: string;
                                unstructuredName?: string;
                            }[];
                            photos?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                url?: string;
                            }[];
                            addresses?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                formattedValue?: string;
                                type?: string;
                                formattedType?: string;
                                streetAddress?: string;
                                extendedAddress?: string;
                                city?: string;
                                region?: string;
                                postalCode?: string;
                                country?: string;
                                countryCode?: string;
                            }[];
                            emailAddresses?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                value?: string;
                                type?: string;
                                formattedType?: string;
                            }[];
                            phoneNumbers?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                type?: string;
                                value?: string;
                                formattedType?: string;
                                canonicalForm?: string;
                            }[];
                            userDefined?: {
                                metadata?: {
                                    primary?: boolean;
                                    source?: {
                                        type?: string;
                                        id?: string;
                                    };
                                };
                                key?: string;
                                value?: string;
                            }[];
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/integrations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @deprecated */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ("googlePeople" | "followUpBoss")[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/sharing-permissions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @deprecated */
        get: {
            parameters: {
                query?: {
                    fetchLegacyIds?: boolean;
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": string[];
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string[];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/sharing-permissions/received": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    fetchLegacyIds?: boolean;
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: string;
                                legacyUserId?: null | string;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/sharing-permissions/granted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    fetchLegacyIds?: boolean;
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: string;
                                legacyUserId?: null | string;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/sharing-permissions/{sharedUserSettingId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    sharedUserSettingId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/team-member-preferences": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            externalTeamId: string;
                            userSettingId: string;
                            sellingAgentCommission?: null | string;
                            listingPeriod?: null | string;
                            docusignCarbonCopy?: null | string[];
                            agentCommission?: null | string;
                            primaryMLS: null | string;
                            primaryMLSVendor?: null | {
                                id: string;
                                name: string;
                                vendor: string;
                                displayName: string;
                                hintText: null | string;
                                locales: string[];
                                primary: boolean;
                            };
                            mlsSubscriptions?: null | string[];
                            mlsServices?: null | {
                                id: string;
                                name: string;
                                vendor: string;
                                displayName: string;
                                hintText: null | string;
                                locales: string[];
                                primary: boolean;
                            }[];
                        }[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        sellingAgentCommission?: null | string;
                        listingPeriod?: null | string;
                        docusignCarbonCopy?: null | string[];
                        agentCommission?: null | string;
                        primaryMLS?: null | string;
                        mlsSubscriptions?: null | string[];
                        mlsServices?: null | {
                            id: string;
                            primary: boolean;
                        }[];
                    } & {
                        externalTeamId: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            externalTeamId: string;
                            userSettingId: string;
                            sellingAgentCommission?: null | string;
                            listingPeriod?: null | string;
                            docusignCarbonCopy?: null | string[];
                            agentCommission?: null | string;
                            primaryMLS: null | string;
                            primaryMLSVendor?: null | {
                                id: string;
                                name: string;
                                vendor: string;
                                displayName: string;
                                hintText: null | string;
                                locales: string[];
                                primary: boolean;
                            };
                            mlsSubscriptions?: null | string[];
                            mlsServices?: null | {
                                id: string;
                                name: string;
                                vendor: string;
                                displayName: string;
                                hintText: null | string;
                                locales: string[];
                                primary: boolean;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/team-member-preferences": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    /** @description String with userSettingId:TeamId Pairs separated by comma
                     *     			 EX: d22e04c1-25f8-4105-93ad-9e034be06a17:42df39d0-4a91-48ed-b631-392d7be1a86b,d22e04c1-25f8-4105-93ad-9e034be06a17:2b272f9a-0baf-421d-9f36-49e01fed1238 */
                    ids: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: string;
                                externalTeamId: string;
                                userSettingId: string;
                                sellingAgentCommission?: null | string;
                                listingPeriod?: null | string;
                                docusignCarbonCopy?: null | string[];
                                agentCommission?: null | string;
                                primaryMLS: null | string;
                                primaryMLSVendor?: null | {
                                    id: string;
                                    name: string;
                                    vendor: string;
                                    displayName: string;
                                    hintText: null | string;
                                    locales: string[];
                                    primary: boolean;
                                };
                                mlsSubscriptions?: null | string[];
                                mlsServices?: null | {
                                    id: string;
                                    name: string;
                                    vendor: string;
                                    displayName: string;
                                    hintText: null | string;
                                    locales: string[];
                                    primary: boolean;
                                }[];
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/team-member-preferences/{externalTeamId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    externalTeamId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            externalTeamId: string;
                            userSettingId: string;
                            sellingAgentCommission?: null | string;
                            listingPeriod?: null | string;
                            docusignCarbonCopy?: null | string[];
                            agentCommission?: null | string;
                            primaryMLS: null | string;
                            primaryMLSVendor?: null | {
                                id: string;
                                name: string;
                                vendor: string;
                                displayName: string;
                                hintText: null | string;
                                locales: string[];
                                primary: boolean;
                            };
                            mlsSubscriptions?: null | string[];
                            mlsServices?: null | {
                                id: string;
                                name: string;
                                vendor: string;
                                displayName: string;
                                hintText: null | string;
                                locales: string[];
                                primary: boolean;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    externalTeamId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    externalTeamId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        sellingAgentCommission?: null | string;
                        listingPeriod?: null | string;
                        docusignCarbonCopy?: null | string[];
                        agentCommission?: null | string;
                        primaryMLS?: null | string;
                        mlsSubscriptions?: null | string[];
                        mlsServices?: null | {
                            id: string;
                            primary: boolean;
                        }[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            externalTeamId: string;
                            userSettingId: string;
                            sellingAgentCommission?: null | string;
                            listingPeriod?: null | string;
                            docusignCarbonCopy?: null | string[];
                            agentCommission?: null | string;
                            primaryMLS: null | string;
                            primaryMLSVendor?: null | {
                                id: string;
                                name: string;
                                vendor: string;
                                displayName: string;
                                hintText: null | string;
                                locales: string[];
                                primary: boolean;
                            };
                            mlsSubscriptions?: null | string[];
                            mlsServices?: null | {
                                id: string;
                                name: string;
                                vendor: string;
                                displayName: string;
                                hintText: null | string;
                                locales: string[];
                                primary: boolean;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/user-settings/{id}/submit-as-permissions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    fetchLegacyIds?: boolean;
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": string[];
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string[];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/submit-as-permissions/{submitAsUserSettingId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    submitAsUserSettingId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/submit-permissions/received": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    fetchLegacyIds?: boolean;
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: string;
                                legacyUserId?: null | string;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/submit-permissions/granted": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    fetchLegacyIds?: boolean;
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: string;
                                legacyUserId?: null | string;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/team-member-preferences/{externalTeamId}/contacts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    externalTeamId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            city?: null | string;
                            companyName?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            role?: null | string;
                            state?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            zip?: null | string;
                            type: "escrow_officer" | "title_officer";
                            titleNumber?: null | string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    externalTeamId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        city?: null | string;
                        companyName?: null | string;
                        cellPhone?: null | string;
                        email?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        role?: null | string;
                        state?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        zip?: null | string;
                        titleNumber?: null | string;
                    } & {
                        type: "escrow_officer" | "title_officer";
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            city?: null | string;
                            companyName?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            role?: null | string;
                            state?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            zip?: null | string;
                            type: "escrow_officer" | "title_officer";
                            titleNumber?: null | string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/team-member-preferences/{externalTeamId}/contacts/{contactId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    externalTeamId: string;
                    contactId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            city?: null | string;
                            companyName?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            role?: null | string;
                            state?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            zip?: null | string;
                            type: "escrow_officer" | "title_officer";
                            titleNumber?: null | string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    externalTeamId: string;
                    contactId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    externalTeamId: string;
                    contactId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        city?: null | string;
                        companyName?: null | string;
                        cellPhone?: null | string;
                        email?: null | string;
                        firstName?: null | string;
                        lastName?: null | string;
                        role?: null | string;
                        state?: null | string;
                        street1?: null | string;
                        street2?: null | string;
                        zip?: null | string;
                        titleNumber?: null | string;
                    } & {
                        type?: "escrow_officer" | "title_officer";
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            city?: null | string;
                            companyName?: null | string;
                            cellPhone?: null | string;
                            email?: null | string;
                            firstName?: null | string;
                            lastName?: null | string;
                            role?: null | string;
                            state?: null | string;
                            street1?: null | string;
                            street2?: null | string;
                            zip?: null | string;
                            type: "escrow_officer" | "title_officer";
                            titleNumber?: null | string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/user-settings/{id}/team-member-preferences/{externalTeamId}/tc-preferences": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    externalTeamId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    externalTeamId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": string[];
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string[];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-settings/{id}/team-member-preferences/{externalTeamId}/tc-preferences/{tcPreferenceId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                    externalTeamId: string;
                    tcPreferenceId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}/integrations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            name: "googlePeople" | "followUpBoss";
                            email?: string;
                            status: "valid" | "expired";
                        }[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}/integrations/follow-up-boss/contacts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    searchValue: string;
                    limit?: number;
                    offset?: number;
                    sort?: string;
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: {
                                displayName: string;
                                firstName: string;
                                lastName: string;
                                contactSource: null | string;
                                email: null | string;
                                photoUrl: null | string;
                                contactResponse: {
                                    id: null | string;
                                    contactSource: null | string;
                                    firstName: null | string;
                                    lastName: null | string;
                                    fullName: null | string;
                                    email: null | string;
                                    homePhone: null | string;
                                    cellPhone: null | string;
                                    addressTypeUsed: null | string;
                                    street1: null | string;
                                    street2: null | string;
                                    city: null | string;
                                    state: null | string;
                                    county: null | string;
                                    country: null | string;
                                    zip: null | string;
                                    avatar: null | string;
                                };
                            }[];
                            facets?: {
                                [key: string]: {
                                    [key: string]: string;
                                };
                            };
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}/integrations/follow-up-boss": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Follow Up Boss integration disconnected successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}/integrations/google": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Google integration disconnected successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/files": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        name: string;
                        bucket?: string;
                        filePath: string;
                        fileType: string;
                        uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                        uploadFailReason?: null | string;
                        contentType?: null | string;
                        customMetadata?: null | unknown;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            downloadUrl?: null | string;
                            bucket: string;
                            filePath: string;
                            fileType: string;
                            contentType: null | string;
                            customMetadata: null | unknown;
                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason: null | string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/files/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            downloadUrl?: null | string;
                            bucket: string;
                            filePath: string;
                            fileType: string;
                            contentType: null | string;
                            customMetadata: null | unknown;
                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason: null | string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: string;
                        bucket?: string;
                        filePath?: string;
                        fileType?: string;
                        uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                        uploadFailReason?: null | string;
                        contentType?: null | string;
                        customMetadata?: null | unknown;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string;
                            downloadUrl?: null | string;
                            bucket: string;
                            filePath: string;
                            fileType: string;
                            contentType: null | string;
                            customMetadata: null | unknown;
                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason: null | string;
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/team-settings/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        googleCalendarRefreshToken: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: null | string;
                            legacyTeamId?: null | string;
                            googleCalendarRefreshToken?: null | string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/team-settings/{id}/integrations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": "googleCalendar"[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/templates/v2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    offset?: number;
                    limit?: number;
                    strategy: "txm" | "admin" | "userTemplates";
                    includeFacetCountResults: boolean;
                    search?: string;
                    facets?: string;
                    sort?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: {
                                appearsIn: ("listing" | "offer" | "landlord" | "tenant" | "dual" | "client_group" | "referral")[];
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                externalId: null | string;
                                formLibrary: null | string;
                                formName: null | string;
                                formVersion: null | string;
                                id: string;
                                isActive: boolean;
                                isCustom: boolean;
                                isExternal: null | boolean;
                                isGlobal: boolean;
                                isReadyForReporting: boolean;
                                listingOrder: null | number;
                                locales: {
                                    id: string;
                                    localeId: string;
                                    type: "country" | "state" | "county" | "city";
                                    country: string;
                                    state: string;
                                    stateName: null | string;
                                    countyName: null | string;
                                    cityName: null | string;
                                }[];
                                name: string;
                                offerOrder: null | number;
                                publishedVersionId: null | string;
                                revisionMonth: null | number;
                                revisionYear: null | number;
                                sourceTemplateId: null | string;
                                status: "published" | "pending";
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                versions?: null | {
                                    id: string;
                                    templateId: string;
                                    versionNumber: number;
                                    status: "draft" | "published";
                                    sourceVersionId: null | string;
                                    file?: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    pages: {
                                        id: string;
                                        versionId: string;
                                        name: null | string;
                                        pageNumber: number;
                                        fullPath: null | string;
                                        inputs: null | {
                                            key: string;
                                            input: components["schemas"]["def-47"] & {
                                                applyCommaSeparator?: null | boolean;
                                                color?: null | string;
                                                disabled?: null | boolean;
                                                dropdownOptions?: null | {
                                                    value?: null | string;
                                                    label?: null | string;
                                                }[];
                                                fontSize?: null | number;
                                                formula?: null | string;
                                                group?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                }[];
                                                height?: null | number;
                                                image?: null | ("Image Main" | "Image Alt");
                                                initialsGroup?: null | {
                                                    top: number;
                                                    left: number;
                                                    recipientId: string;
                                                    recipientName?: null | string;
                                                    recipientRole?: null | string;
                                                }[];
                                                isSyncEnabled?: boolean;
                                                left?: number | null;
                                                lineHeight?: null | number;
                                                maxLength?: null | string;
                                                multiline?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                };
                                                multilineValue?: null | string;
                                                name?: null | string;
                                                optional?: null | boolean;
                                                optionalSide?: null | string;
                                                options?: null | {
                                                    left?: null | number;
                                                    reportingName?: null | string;
                                                    top?: null | number;
                                                    value?: null | string;
                                                    width?: null | number;
                                                    tabIndex?: null | number;
                                                }[];
                                                pageId?: null | string;
                                                recipientId?: null | string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                                reportingName?: null | string;
                                                required?: null | boolean;
                                                suffix?: null | string;
                                                tabIndex?: null | number;
                                                targetFieldNames?: null | {
                                                    [key: string]: string;
                                                };
                                                textAlign?: null | string;
                                                textIndent?: null | number;
                                                lastLineWidth?: null | number;
                                                top?: number | null;
                                                type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                                typeFace?: null | string;
                                                value?: null | string;
                                                width?: number | null;
                                            };
                                        }[];
                                        image: null | {
                                            id: string;
                                            name: string;
                                            downloadUrl?: null | string;
                                            bucket: string;
                                            filePath: string;
                                            fileType: string;
                                            contentType: null | string;
                                            customMetadata: null | unknown;
                                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                            uploadFailReason: null | string;
                                            createdBy: string;
                                            /** Format: date-time */
                                            createdAt: string;
                                            updatedBy: string;
                                            /** Format: date-time */
                                            updatedAt: string;
                                        };
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    }[];
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                }[];
                                publishedVersion?: null | {
                                    id: string;
                                    templateId: string;
                                    versionNumber: number;
                                    status: "draft" | "published";
                                    sourceVersionId: null | string;
                                    file?: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    pages: {
                                        id: string;
                                        versionId: string;
                                        name: null | string;
                                        pageNumber: number;
                                        fullPath: null | string;
                                        inputs: null | {
                                            key: string;
                                            input: components["schemas"]["def-47"] & {
                                                applyCommaSeparator?: null | boolean;
                                                color?: null | string;
                                                disabled?: null | boolean;
                                                dropdownOptions?: null | {
                                                    value?: null | string;
                                                    label?: null | string;
                                                }[];
                                                fontSize?: null | number;
                                                formula?: null | string;
                                                group?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                }[];
                                                height?: null | number;
                                                image?: null | ("Image Main" | "Image Alt");
                                                initialsGroup?: null | {
                                                    top: number;
                                                    left: number;
                                                    recipientId: string;
                                                    recipientName?: null | string;
                                                    recipientRole?: null | string;
                                                }[];
                                                isSyncEnabled?: boolean;
                                                left?: number | null;
                                                lineHeight?: null | number;
                                                maxLength?: null | string;
                                                multiline?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                };
                                                multilineValue?: null | string;
                                                name?: null | string;
                                                optional?: null | boolean;
                                                optionalSide?: null | string;
                                                options?: null | {
                                                    left?: null | number;
                                                    reportingName?: null | string;
                                                    top?: null | number;
                                                    value?: null | string;
                                                    width?: null | number;
                                                    tabIndex?: null | number;
                                                }[];
                                                pageId?: null | string;
                                                recipientId?: null | string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                                reportingName?: null | string;
                                                required?: null | boolean;
                                                suffix?: null | string;
                                                tabIndex?: null | number;
                                                targetFieldNames?: null | {
                                                    [key: string]: string;
                                                };
                                                textAlign?: null | string;
                                                textIndent?: null | number;
                                                lastLineWidth?: null | number;
                                                top?: number | null;
                                                type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                                typeFace?: null | string;
                                                value?: null | string;
                                                width?: number | null;
                                            };
                                        }[];
                                        image: null | {
                                            id: string;
                                            name: string;
                                            downloadUrl?: null | string;
                                            bucket: string;
                                            filePath: string;
                                            fileType: string;
                                            contentType: null | string;
                                            customMetadata: null | unknown;
                                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                            uploadFailReason: null | string;
                                            createdBy: string;
                                            /** Format: date-time */
                                            createdAt: string;
                                            updatedBy: string;
                                            /** Format: date-time */
                                            updatedAt: string;
                                        };
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    }[];
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                            }[];
                            facets?: {
                                city?: {
                                    [key: string]: string;
                                };
                                county?: {
                                    [key: string]: string;
                                };
                                formLibrary?: {
                                    [key: string]: string;
                                };
                                type?: {
                                    [key: string]: string;
                                };
                                appearsIn?: {
                                    [key: string]: string;
                                };
                                isGlobal?: {
                                    [key: string]: string;
                                };
                                state?: {
                                    [key: string]: string;
                                };
                                status?: {
                                    [key: string]: string;
                                };
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        externalId?: null | string;
                        name: string;
                        listingOrder?: null | number;
                        offerOrder?: null | number;
                        appearsIn?: null | ("listing" | "offer" | "landlord" | "tenant" | "dual" | "client_group" | "referral")[];
                        locales?: null | string[];
                        isGlobal?: boolean;
                        isActive?: boolean;
                        isCustom?: boolean;
                        isExternal?: boolean;
                        isReadyForReporting?: boolean;
                        formLibrary?: null | string;
                        formName?: null | string;
                        formVersion?: null | string;
                        revisionYear?: null | number;
                        revisionMonth?: null | number;
                        /** Format: date-time */
                        updatedAt?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            appearsIn: ("listing" | "offer" | "landlord" | "tenant" | "dual" | "client_group" | "referral")[];
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            externalId: null | string;
                            formLibrary: null | string;
                            formName: null | string;
                            formVersion: null | string;
                            id: string;
                            isActive: boolean;
                            isCustom: boolean;
                            isExternal: null | boolean;
                            isGlobal: boolean;
                            isReadyForReporting: boolean;
                            listingOrder: null | number;
                            locales: {
                                id: string;
                                localeId: string;
                                type: "country" | "state" | "county" | "city";
                                country: string;
                                state: string;
                                stateName: null | string;
                                countyName: null | string;
                                cityName: null | string;
                            }[];
                            name: string;
                            offerOrder: null | number;
                            publishedVersionId: null | string;
                            revisionMonth: null | number;
                            revisionYear: null | number;
                            sourceTemplateId: null | string;
                            status: "published" | "pending";
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            versions?: null | {
                                id: string;
                                templateId: string;
                                versionNumber: number;
                                status: "draft" | "published";
                                sourceVersionId: null | string;
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    versionId: string;
                                    name: null | string;
                                    pageNumber: number;
                                    fullPath: null | string;
                                    inputs: null | {
                                        key: string;
                                        input: components["schemas"]["def-47"] & {
                                            applyCommaSeparator?: null | boolean;
                                            color?: null | string;
                                            disabled?: null | boolean;
                                            dropdownOptions?: null | {
                                                value?: null | string;
                                                label?: null | string;
                                            }[];
                                            fontSize?: null | number;
                                            formula?: null | string;
                                            group?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            }[];
                                            height?: null | number;
                                            image?: null | ("Image Main" | "Image Alt");
                                            initialsGroup?: null | {
                                                top: number;
                                                left: number;
                                                recipientId: string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                            }[];
                                            isSyncEnabled?: boolean;
                                            left?: number | null;
                                            lineHeight?: null | number;
                                            maxLength?: null | string;
                                            multiline?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            };
                                            multilineValue?: null | string;
                                            name?: null | string;
                                            optional?: null | boolean;
                                            optionalSide?: null | string;
                                            options?: null | {
                                                left?: null | number;
                                                reportingName?: null | string;
                                                top?: null | number;
                                                value?: null | string;
                                                width?: null | number;
                                                tabIndex?: null | number;
                                            }[];
                                            pageId?: null | string;
                                            recipientId?: null | string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                            reportingName?: null | string;
                                            required?: null | boolean;
                                            suffix?: null | string;
                                            tabIndex?: null | number;
                                            targetFieldNames?: null | {
                                                [key: string]: string;
                                            };
                                            textAlign?: null | string;
                                            textIndent?: null | number;
                                            lastLineWidth?: null | number;
                                            top?: number | null;
                                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                            typeFace?: null | string;
                                            value?: null | string;
                                            width?: number | null;
                                        };
                                    }[];
                                    image: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                }[];
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            publishedVersion?: null | {
                                id: string;
                                templateId: string;
                                versionNumber: number;
                                status: "draft" | "published";
                                sourceVersionId: null | string;
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    versionId: string;
                                    name: null | string;
                                    pageNumber: number;
                                    fullPath: null | string;
                                    inputs: null | {
                                        key: string;
                                        input: components["schemas"]["def-47"] & {
                                            applyCommaSeparator?: null | boolean;
                                            color?: null | string;
                                            disabled?: null | boolean;
                                            dropdownOptions?: null | {
                                                value?: null | string;
                                                label?: null | string;
                                            }[];
                                            fontSize?: null | number;
                                            formula?: null | string;
                                            group?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            }[];
                                            height?: null | number;
                                            image?: null | ("Image Main" | "Image Alt");
                                            initialsGroup?: null | {
                                                top: number;
                                                left: number;
                                                recipientId: string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                            }[];
                                            isSyncEnabled?: boolean;
                                            left?: number | null;
                                            lineHeight?: null | number;
                                            maxLength?: null | string;
                                            multiline?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            };
                                            multilineValue?: null | string;
                                            name?: null | string;
                                            optional?: null | boolean;
                                            optionalSide?: null | string;
                                            options?: null | {
                                                left?: null | number;
                                                reportingName?: null | string;
                                                top?: null | number;
                                                value?: null | string;
                                                width?: null | number;
                                                tabIndex?: null | number;
                                            }[];
                                            pageId?: null | string;
                                            recipientId?: null | string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                            reportingName?: null | string;
                                            required?: null | boolean;
                                            suffix?: null | string;
                                            tabIndex?: null | number;
                                            targetFieldNames?: null | {
                                                [key: string]: string;
                                            };
                                            textAlign?: null | string;
                                            textIndent?: null | number;
                                            lastLineWidth?: null | number;
                                            top?: number | null;
                                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                            typeFace?: null | string;
                                            value?: null | string;
                                            width?: number | null;
                                        };
                                    }[];
                                    image: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                }[];
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/templates/v2/{templateId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                };
                header?: never;
                path: {
                    templateId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            appearsIn: ("listing" | "offer" | "landlord" | "tenant" | "dual" | "client_group" | "referral")[];
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            externalId: null | string;
                            formLibrary: null | string;
                            formName: null | string;
                            formVersion: null | string;
                            id: string;
                            isActive: boolean;
                            isCustom: boolean;
                            isExternal: null | boolean;
                            isGlobal: boolean;
                            isReadyForReporting: boolean;
                            listingOrder: null | number;
                            locales: {
                                id: string;
                                localeId: string;
                                type: "country" | "state" | "county" | "city";
                                country: string;
                                state: string;
                                stateName: null | string;
                                countyName: null | string;
                                cityName: null | string;
                            }[];
                            name: string;
                            offerOrder: null | number;
                            publishedVersionId: null | string;
                            revisionMonth: null | number;
                            revisionYear: null | number;
                            sourceTemplateId: null | string;
                            status: "published" | "pending";
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            versions?: null | {
                                id: string;
                                templateId: string;
                                versionNumber: number;
                                status: "draft" | "published";
                                sourceVersionId: null | string;
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    versionId: string;
                                    name: null | string;
                                    pageNumber: number;
                                    fullPath: null | string;
                                    inputs: null | {
                                        key: string;
                                        input: components["schemas"]["def-47"] & {
                                            applyCommaSeparator?: null | boolean;
                                            color?: null | string;
                                            disabled?: null | boolean;
                                            dropdownOptions?: null | {
                                                value?: null | string;
                                                label?: null | string;
                                            }[];
                                            fontSize?: null | number;
                                            formula?: null | string;
                                            group?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            }[];
                                            height?: null | number;
                                            image?: null | ("Image Main" | "Image Alt");
                                            initialsGroup?: null | {
                                                top: number;
                                                left: number;
                                                recipientId: string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                            }[];
                                            isSyncEnabled?: boolean;
                                            left?: number | null;
                                            lineHeight?: null | number;
                                            maxLength?: null | string;
                                            multiline?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            };
                                            multilineValue?: null | string;
                                            name?: null | string;
                                            optional?: null | boolean;
                                            optionalSide?: null | string;
                                            options?: null | {
                                                left?: null | number;
                                                reportingName?: null | string;
                                                top?: null | number;
                                                value?: null | string;
                                                width?: null | number;
                                                tabIndex?: null | number;
                                            }[];
                                            pageId?: null | string;
                                            recipientId?: null | string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                            reportingName?: null | string;
                                            required?: null | boolean;
                                            suffix?: null | string;
                                            tabIndex?: null | number;
                                            targetFieldNames?: null | {
                                                [key: string]: string;
                                            };
                                            textAlign?: null | string;
                                            textIndent?: null | number;
                                            lastLineWidth?: null | number;
                                            top?: number | null;
                                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                            typeFace?: null | string;
                                            value?: null | string;
                                            width?: number | null;
                                        };
                                    }[];
                                    image: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                }[];
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            publishedVersion?: null | {
                                id: string;
                                templateId: string;
                                versionNumber: number;
                                status: "draft" | "published";
                                sourceVersionId: null | string;
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    versionId: string;
                                    name: null | string;
                                    pageNumber: number;
                                    fullPath: null | string;
                                    inputs: null | {
                                        key: string;
                                        input: components["schemas"]["def-47"] & {
                                            applyCommaSeparator?: null | boolean;
                                            color?: null | string;
                                            disabled?: null | boolean;
                                            dropdownOptions?: null | {
                                                value?: null | string;
                                                label?: null | string;
                                            }[];
                                            fontSize?: null | number;
                                            formula?: null | string;
                                            group?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            }[];
                                            height?: null | number;
                                            image?: null | ("Image Main" | "Image Alt");
                                            initialsGroup?: null | {
                                                top: number;
                                                left: number;
                                                recipientId: string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                            }[];
                                            isSyncEnabled?: boolean;
                                            left?: number | null;
                                            lineHeight?: null | number;
                                            maxLength?: null | string;
                                            multiline?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            };
                                            multilineValue?: null | string;
                                            name?: null | string;
                                            optional?: null | boolean;
                                            optionalSide?: null | string;
                                            options?: null | {
                                                left?: null | number;
                                                reportingName?: null | string;
                                                top?: null | number;
                                                value?: null | string;
                                                width?: null | number;
                                                tabIndex?: null | number;
                                            }[];
                                            pageId?: null | string;
                                            recipientId?: null | string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                            reportingName?: null | string;
                                            required?: null | boolean;
                                            suffix?: null | string;
                                            tabIndex?: null | number;
                                            targetFieldNames?: null | {
                                                [key: string]: string;
                                            };
                                            textAlign?: null | string;
                                            textIndent?: null | number;
                                            lastLineWidth?: null | number;
                                            top?: number | null;
                                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                            typeFace?: null | string;
                                            value?: null | string;
                                            width?: number | null;
                                        };
                                    }[];
                                    image: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                }[];
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number & 400;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number & 404;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    templateId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Template deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    templateId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: string;
                        listingOrder?: null | number;
                        offerOrder?: null | number;
                        appearsIn?: null | ("listing" | "offer" | "landlord" | "tenant" | "dual" | "client_group" | "referral")[];
                        locales?: null | string[];
                        isGlobal?: boolean;
                        isActive?: boolean;
                        isCustom?: boolean;
                        isExternal?: boolean;
                        isReadyForReporting?: boolean;
                        formLibrary?: null | string;
                        formName?: null | string;
                        formVersion?: null | string;
                        revisionYear?: null | number;
                        revisionMonth?: null | number;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            appearsIn: ("listing" | "offer" | "landlord" | "tenant" | "dual" | "client_group" | "referral")[];
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            externalId: null | string;
                            formLibrary: null | string;
                            formName: null | string;
                            formVersion: null | string;
                            id: string;
                            isActive: boolean;
                            isCustom: boolean;
                            isExternal: null | boolean;
                            isGlobal: boolean;
                            isReadyForReporting: boolean;
                            listingOrder: null | number;
                            locales: {
                                id: string;
                                localeId: string;
                                type: "country" | "state" | "county" | "city";
                                country: string;
                                state: string;
                                stateName: null | string;
                                countyName: null | string;
                                cityName: null | string;
                            }[];
                            name: string;
                            offerOrder: null | number;
                            publishedVersionId: null | string;
                            revisionMonth: null | number;
                            revisionYear: null | number;
                            sourceTemplateId: null | string;
                            status: "published" | "pending";
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            versions?: null | {
                                id: string;
                                templateId: string;
                                versionNumber: number;
                                status: "draft" | "published";
                                sourceVersionId: null | string;
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    versionId: string;
                                    name: null | string;
                                    pageNumber: number;
                                    fullPath: null | string;
                                    inputs: null | {
                                        key: string;
                                        input: components["schemas"]["def-47"] & {
                                            applyCommaSeparator?: null | boolean;
                                            color?: null | string;
                                            disabled?: null | boolean;
                                            dropdownOptions?: null | {
                                                value?: null | string;
                                                label?: null | string;
                                            }[];
                                            fontSize?: null | number;
                                            formula?: null | string;
                                            group?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            }[];
                                            height?: null | number;
                                            image?: null | ("Image Main" | "Image Alt");
                                            initialsGroup?: null | {
                                                top: number;
                                                left: number;
                                                recipientId: string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                            }[];
                                            isSyncEnabled?: boolean;
                                            left?: number | null;
                                            lineHeight?: null | number;
                                            maxLength?: null | string;
                                            multiline?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            };
                                            multilineValue?: null | string;
                                            name?: null | string;
                                            optional?: null | boolean;
                                            optionalSide?: null | string;
                                            options?: null | {
                                                left?: null | number;
                                                reportingName?: null | string;
                                                top?: null | number;
                                                value?: null | string;
                                                width?: null | number;
                                                tabIndex?: null | number;
                                            }[];
                                            pageId?: null | string;
                                            recipientId?: null | string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                            reportingName?: null | string;
                                            required?: null | boolean;
                                            suffix?: null | string;
                                            tabIndex?: null | number;
                                            targetFieldNames?: null | {
                                                [key: string]: string;
                                            };
                                            textAlign?: null | string;
                                            textIndent?: null | number;
                                            lastLineWidth?: null | number;
                                            top?: number | null;
                                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                            typeFace?: null | string;
                                            value?: null | string;
                                            width?: number | null;
                                        };
                                    }[];
                                    image: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                }[];
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            publishedVersion?: null | {
                                id: string;
                                templateId: string;
                                versionNumber: number;
                                status: "draft" | "published";
                                sourceVersionId: null | string;
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    versionId: string;
                                    name: null | string;
                                    pageNumber: number;
                                    fullPath: null | string;
                                    inputs: null | {
                                        key: string;
                                        input: components["schemas"]["def-47"] & {
                                            applyCommaSeparator?: null | boolean;
                                            color?: null | string;
                                            disabled?: null | boolean;
                                            dropdownOptions?: null | {
                                                value?: null | string;
                                                label?: null | string;
                                            }[];
                                            fontSize?: null | number;
                                            formula?: null | string;
                                            group?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            }[];
                                            height?: null | number;
                                            image?: null | ("Image Main" | "Image Alt");
                                            initialsGroup?: null | {
                                                top: number;
                                                left: number;
                                                recipientId: string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                            }[];
                                            isSyncEnabled?: boolean;
                                            left?: number | null;
                                            lineHeight?: null | number;
                                            maxLength?: null | string;
                                            multiline?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            };
                                            multilineValue?: null | string;
                                            name?: null | string;
                                            optional?: null | boolean;
                                            optionalSide?: null | string;
                                            options?: null | {
                                                left?: null | number;
                                                reportingName?: null | string;
                                                top?: null | number;
                                                value?: null | string;
                                                width?: null | number;
                                                tabIndex?: null | number;
                                            }[];
                                            pageId?: null | string;
                                            recipientId?: null | string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                            reportingName?: null | string;
                                            required?: null | boolean;
                                            suffix?: null | string;
                                            tabIndex?: null | number;
                                            targetFieldNames?: null | {
                                                [key: string]: string;
                                            };
                                            textAlign?: null | string;
                                            textIndent?: null | number;
                                            lastLineWidth?: null | number;
                                            top?: number | null;
                                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                            typeFace?: null | string;
                                            value?: null | string;
                                            width?: number | null;
                                        };
                                    }[];
                                    image: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                }[];
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/templates/v2/{templateId}/published-version": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    templateId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            templateId: string;
                            versionNumber: number;
                            status: "draft" | "published";
                            sourceVersionId: null | string;
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                versionId: string;
                                name: null | string;
                                pageNumber: number;
                                fullPath: null | string;
                                inputs: null | {
                                    key: string;
                                    input: components["schemas"]["def-47"] & {
                                        applyCommaSeparator?: null | boolean;
                                        color?: null | string;
                                        disabled?: null | boolean;
                                        dropdownOptions?: null | {
                                            value?: null | string;
                                            label?: null | string;
                                        }[];
                                        fontSize?: null | number;
                                        formula?: null | string;
                                        group?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        }[];
                                        height?: null | number;
                                        image?: null | ("Image Main" | "Image Alt");
                                        initialsGroup?: null | {
                                            top: number;
                                            left: number;
                                            recipientId: string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                        }[];
                                        isSyncEnabled?: boolean;
                                        left?: number | null;
                                        lineHeight?: null | number;
                                        maxLength?: null | string;
                                        multiline?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        };
                                        multilineValue?: null | string;
                                        name?: null | string;
                                        optional?: null | boolean;
                                        optionalSide?: null | string;
                                        options?: null | {
                                            left?: null | number;
                                            reportingName?: null | string;
                                            top?: null | number;
                                            value?: null | string;
                                            width?: null | number;
                                            tabIndex?: null | number;
                                        }[];
                                        pageId?: null | string;
                                        recipientId?: null | string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                        reportingName?: null | string;
                                        required?: null | boolean;
                                        suffix?: null | string;
                                        tabIndex?: null | number;
                                        targetFieldNames?: null | {
                                            [key: string]: string;
                                        };
                                        textAlign?: null | string;
                                        textIndent?: null | number;
                                        lastLineWidth?: null | number;
                                        top?: number | null;
                                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                        typeFace?: null | string;
                                        value?: null | string;
                                        width?: number | null;
                                    };
                                }[];
                                image: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/templates/v2/{templateId}/published-events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    templateId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            templateId: string;
                            versionId: string;
                            /** Format: date-time */
                            publishedAt: string;
                            publishedBy: null | string;
                            publisherName?: null | string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/templates/v2/{templateId}/property-option-groups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    templateId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            data: {
                                id: string;
                                externalId: string;
                                name: string;
                                type: "contract" | "template";
                                interactionType: "listing" | "offer" | "lease" | "clientGroup" | "referral" | "userTemplate";
                                pogInteractionType: "listing" | "offer" | "listing_offer" | "lease_landlord" | "lease_tenant" | "lease_landlord_tenant" | "lease_dual" | "client_group" | "referral";
                                isActive: boolean;
                                locales: {
                                    id: string;
                                    localeId: string;
                                    type: "country" | "state" | "county" | "city";
                                    country: string;
                                    state: string;
                                    stateName: null | string;
                                    countyName: null | string;
                                    cityName: null | string;
                                }[];
                                isGlobal: boolean;
                                priority: number;
                                searchCriteria: "allOf" | "anyOf";
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/templates/v2/{templateId}/duplicate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    templateId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            appearsIn: ("listing" | "offer" | "landlord" | "tenant" | "dual" | "client_group" | "referral")[];
                            /** Format: date-time */
                            createdAt: string;
                            createdBy: string;
                            externalId: null | string;
                            formLibrary: null | string;
                            formName: null | string;
                            formVersion: null | string;
                            id: string;
                            isActive: boolean;
                            isCustom: boolean;
                            isExternal: null | boolean;
                            isGlobal: boolean;
                            isReadyForReporting: boolean;
                            listingOrder: null | number;
                            locales: {
                                id: string;
                                localeId: string;
                                type: "country" | "state" | "county" | "city";
                                country: string;
                                state: string;
                                stateName: null | string;
                                countyName: null | string;
                                cityName: null | string;
                            }[];
                            name: string;
                            offerOrder: null | number;
                            publishedVersionId: null | string;
                            revisionMonth: null | number;
                            revisionYear: null | number;
                            sourceTemplateId: null | string;
                            status: "published" | "pending";
                            /** Format: date-time */
                            updatedAt: string;
                            updatedBy: string;
                            versions?: null | {
                                id: string;
                                templateId: string;
                                versionNumber: number;
                                status: "draft" | "published";
                                sourceVersionId: null | string;
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    versionId: string;
                                    name: null | string;
                                    pageNumber: number;
                                    fullPath: null | string;
                                    inputs: null | {
                                        key: string;
                                        input: components["schemas"]["def-47"] & {
                                            applyCommaSeparator?: null | boolean;
                                            color?: null | string;
                                            disabled?: null | boolean;
                                            dropdownOptions?: null | {
                                                value?: null | string;
                                                label?: null | string;
                                            }[];
                                            fontSize?: null | number;
                                            formula?: null | string;
                                            group?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            }[];
                                            height?: null | number;
                                            image?: null | ("Image Main" | "Image Alt");
                                            initialsGroup?: null | {
                                                top: number;
                                                left: number;
                                                recipientId: string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                            }[];
                                            isSyncEnabled?: boolean;
                                            left?: number | null;
                                            lineHeight?: null | number;
                                            maxLength?: null | string;
                                            multiline?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            };
                                            multilineValue?: null | string;
                                            name?: null | string;
                                            optional?: null | boolean;
                                            optionalSide?: null | string;
                                            options?: null | {
                                                left?: null | number;
                                                reportingName?: null | string;
                                                top?: null | number;
                                                value?: null | string;
                                                width?: null | number;
                                                tabIndex?: null | number;
                                            }[];
                                            pageId?: null | string;
                                            recipientId?: null | string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                            reportingName?: null | string;
                                            required?: null | boolean;
                                            suffix?: null | string;
                                            tabIndex?: null | number;
                                            targetFieldNames?: null | {
                                                [key: string]: string;
                                            };
                                            textAlign?: null | string;
                                            textIndent?: null | number;
                                            lastLineWidth?: null | number;
                                            top?: number | null;
                                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                            typeFace?: null | string;
                                            value?: null | string;
                                            width?: number | null;
                                        };
                                    }[];
                                    image: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                }[];
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            publishedVersion?: null | {
                                id: string;
                                templateId: string;
                                versionNumber: number;
                                status: "draft" | "published";
                                sourceVersionId: null | string;
                                file?: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                pages: {
                                    id: string;
                                    versionId: string;
                                    name: null | string;
                                    pageNumber: number;
                                    fullPath: null | string;
                                    inputs: null | {
                                        key: string;
                                        input: components["schemas"]["def-47"] & {
                                            applyCommaSeparator?: null | boolean;
                                            color?: null | string;
                                            disabled?: null | boolean;
                                            dropdownOptions?: null | {
                                                value?: null | string;
                                                label?: null | string;
                                            }[];
                                            fontSize?: null | number;
                                            formula?: null | string;
                                            group?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            }[];
                                            height?: null | number;
                                            image?: null | ("Image Main" | "Image Alt");
                                            initialsGroup?: null | {
                                                top: number;
                                                left: number;
                                                recipientId: string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                            }[];
                                            isSyncEnabled?: boolean;
                                            left?: number | null;
                                            lineHeight?: null | number;
                                            maxLength?: null | string;
                                            multiline?: null | {
                                                inputIdx: string;
                                                pageIdx: number;
                                            };
                                            multilineValue?: null | string;
                                            name?: null | string;
                                            optional?: null | boolean;
                                            optionalSide?: null | string;
                                            options?: null | {
                                                left?: null | number;
                                                reportingName?: null | string;
                                                top?: null | number;
                                                value?: null | string;
                                                width?: null | number;
                                                tabIndex?: null | number;
                                            }[];
                                            pageId?: null | string;
                                            recipientId?: null | string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                            reportingName?: null | string;
                                            required?: null | boolean;
                                            suffix?: null | string;
                                            tabIndex?: null | number;
                                            targetFieldNames?: null | {
                                                [key: string]: string;
                                            };
                                            textAlign?: null | string;
                                            textIndent?: null | number;
                                            lastLineWidth?: null | number;
                                            top?: number | null;
                                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                            typeFace?: null | string;
                                            value?: null | string;
                                            width?: number | null;
                                        };
                                    }[];
                                    image: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                }[];
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/templates/v2/{templateId}/versions/{versionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: string;
                };
                header?: never;
                path: {
                    templateId: string;
                    versionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            templateId: string;
                            versionNumber: number;
                            status: "draft" | "published";
                            sourceVersionId: null | string;
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                versionId: string;
                                name: null | string;
                                pageNumber: number;
                                fullPath: null | string;
                                inputs: null | {
                                    key: string;
                                    input: components["schemas"]["def-47"] & {
                                        applyCommaSeparator?: null | boolean;
                                        color?: null | string;
                                        disabled?: null | boolean;
                                        dropdownOptions?: null | {
                                            value?: null | string;
                                            label?: null | string;
                                        }[];
                                        fontSize?: null | number;
                                        formula?: null | string;
                                        group?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        }[];
                                        height?: null | number;
                                        image?: null | ("Image Main" | "Image Alt");
                                        initialsGroup?: null | {
                                            top: number;
                                            left: number;
                                            recipientId: string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                        }[];
                                        isSyncEnabled?: boolean;
                                        left?: number | null;
                                        lineHeight?: null | number;
                                        maxLength?: null | string;
                                        multiline?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        };
                                        multilineValue?: null | string;
                                        name?: null | string;
                                        optional?: null | boolean;
                                        optionalSide?: null | string;
                                        options?: null | {
                                            left?: null | number;
                                            reportingName?: null | string;
                                            top?: null | number;
                                            value?: null | string;
                                            width?: null | number;
                                            tabIndex?: null | number;
                                        }[];
                                        pageId?: null | string;
                                        recipientId?: null | string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                        reportingName?: null | string;
                                        required?: null | boolean;
                                        suffix?: null | string;
                                        tabIndex?: null | number;
                                        targetFieldNames?: null | {
                                            [key: string]: string;
                                        };
                                        textAlign?: null | string;
                                        textIndent?: null | number;
                                        lastLineWidth?: null | number;
                                        top?: number | null;
                                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                        typeFace?: null | string;
                                        value?: null | string;
                                        width?: number | null;
                                    };
                                }[];
                                image: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    templateId: string;
                    versionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Version deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/templates/v2/{templateId}/versions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    templateId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            templateId: string;
                            versionNumber: number;
                            status: "draft" | "published";
                            sourceVersionId: null | string;
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                versionId: string;
                                name: null | string;
                                pageNumber: number;
                                fullPath: null | string;
                                inputs: null | {
                                    key: string;
                                    input: components["schemas"]["def-47"] & {
                                        applyCommaSeparator?: null | boolean;
                                        color?: null | string;
                                        disabled?: null | boolean;
                                        dropdownOptions?: null | {
                                            value?: null | string;
                                            label?: null | string;
                                        }[];
                                        fontSize?: null | number;
                                        formula?: null | string;
                                        group?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        }[];
                                        height?: null | number;
                                        image?: null | ("Image Main" | "Image Alt");
                                        initialsGroup?: null | {
                                            top: number;
                                            left: number;
                                            recipientId: string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                        }[];
                                        isSyncEnabled?: boolean;
                                        left?: number | null;
                                        lineHeight?: null | number;
                                        maxLength?: null | string;
                                        multiline?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        };
                                        multilineValue?: null | string;
                                        name?: null | string;
                                        optional?: null | boolean;
                                        optionalSide?: null | string;
                                        options?: null | {
                                            left?: null | number;
                                            reportingName?: null | string;
                                            top?: null | number;
                                            value?: null | string;
                                            width?: null | number;
                                            tabIndex?: null | number;
                                        }[];
                                        pageId?: null | string;
                                        recipientId?: null | string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                        reportingName?: null | string;
                                        required?: null | boolean;
                                        suffix?: null | string;
                                        tabIndex?: null | number;
                                        targetFieldNames?: null | {
                                            [key: string]: string;
                                        };
                                        textAlign?: null | string;
                                        textIndent?: null | number;
                                        lastLineWidth?: null | number;
                                        top?: number | null;
                                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                        typeFace?: null | string;
                                        value?: null | string;
                                        width?: number | null;
                                    };
                                }[];
                                image: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    templateId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        externalId?: null | string;
                        versionNumber: number;
                        status: "draft" | "published";
                        pages?: {
                            id?: string;
                            name?: null | string;
                            pageNumber: number;
                            fullPath?: null | string;
                            inputs?: null | {
                                key: string;
                                input: components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                };
                            }[];
                            image?: null | {
                                name: string;
                                bucket?: string;
                                filePath: string;
                                fileType: string;
                                uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason?: null | string;
                                contentType?: null | string;
                                customMetadata?: null | unknown;
                            };
                        }[];
                        file?: null | {
                            name: string;
                            bucket?: string;
                            filePath: string;
                            fileType: string;
                            uploadStatus?: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                            uploadFailReason?: null | string;
                            contentType?: null | string;
                            customMetadata?: null | unknown;
                        };
                        /** Format: date-time */
                        updatedAt?: string;
                        rtdbEventTimestamp?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            templateId: string;
                            versionNumber: number;
                            status: "draft" | "published";
                            sourceVersionId: null | string;
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                versionId: string;
                                name: null | string;
                                pageNumber: number;
                                fullPath: null | string;
                                inputs: null | {
                                    key: string;
                                    input: components["schemas"]["def-47"] & {
                                        applyCommaSeparator?: null | boolean;
                                        color?: null | string;
                                        disabled?: null | boolean;
                                        dropdownOptions?: null | {
                                            value?: null | string;
                                            label?: null | string;
                                        }[];
                                        fontSize?: null | number;
                                        formula?: null | string;
                                        group?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        }[];
                                        height?: null | number;
                                        image?: null | ("Image Main" | "Image Alt");
                                        initialsGroup?: null | {
                                            top: number;
                                            left: number;
                                            recipientId: string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                        }[];
                                        isSyncEnabled?: boolean;
                                        left?: number | null;
                                        lineHeight?: null | number;
                                        maxLength?: null | string;
                                        multiline?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        };
                                        multilineValue?: null | string;
                                        name?: null | string;
                                        optional?: null | boolean;
                                        optionalSide?: null | string;
                                        options?: null | {
                                            left?: null | number;
                                            reportingName?: null | string;
                                            top?: null | number;
                                            value?: null | string;
                                            width?: null | number;
                                            tabIndex?: null | number;
                                        }[];
                                        pageId?: null | string;
                                        recipientId?: null | string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                        reportingName?: null | string;
                                        required?: null | boolean;
                                        suffix?: null | string;
                                        tabIndex?: null | number;
                                        targetFieldNames?: null | {
                                            [key: string]: string;
                                        };
                                        textAlign?: null | string;
                                        textIndent?: null | number;
                                        lastLineWidth?: null | number;
                                        top?: number | null;
                                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                        typeFace?: null | string;
                                        value?: null | string;
                                        width?: number | null;
                                    };
                                }[];
                                image: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/templates/v2/{templateId}/versions/{versionId}/publish": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    templateId: string;
                    versionId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            templateId: string;
                            versionNumber: number;
                            status: "draft" | "published";
                            sourceVersionId: null | string;
                            file?: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            pages: {
                                id: string;
                                versionId: string;
                                name: null | string;
                                pageNumber: number;
                                fullPath: null | string;
                                inputs: null | {
                                    key: string;
                                    input: components["schemas"]["def-47"] & {
                                        applyCommaSeparator?: null | boolean;
                                        color?: null | string;
                                        disabled?: null | boolean;
                                        dropdownOptions?: null | {
                                            value?: null | string;
                                            label?: null | string;
                                        }[];
                                        fontSize?: null | number;
                                        formula?: null | string;
                                        group?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        }[];
                                        height?: null | number;
                                        image?: null | ("Image Main" | "Image Alt");
                                        initialsGroup?: null | {
                                            top: number;
                                            left: number;
                                            recipientId: string;
                                            recipientName?: null | string;
                                            recipientRole?: null | string;
                                        }[];
                                        isSyncEnabled?: boolean;
                                        left?: number | null;
                                        lineHeight?: null | number;
                                        maxLength?: null | string;
                                        multiline?: null | {
                                            inputIdx: string;
                                            pageIdx: number;
                                        };
                                        multilineValue?: null | string;
                                        name?: null | string;
                                        optional?: null | boolean;
                                        optionalSide?: null | string;
                                        options?: null | {
                                            left?: null | number;
                                            reportingName?: null | string;
                                            top?: null | number;
                                            value?: null | string;
                                            width?: null | number;
                                            tabIndex?: null | number;
                                        }[];
                                        pageId?: null | string;
                                        recipientId?: null | string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                        reportingName?: null | string;
                                        required?: null | boolean;
                                        suffix?: null | string;
                                        tabIndex?: null | number;
                                        targetFieldNames?: null | {
                                            [key: string]: string;
                                        };
                                        textAlign?: null | string;
                                        textIndent?: null | number;
                                        lastLineWidth?: null | number;
                                        top?: number | null;
                                        type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                        typeFace?: null | string;
                                        value?: null | string;
                                        width?: number | null;
                                    };
                                }[];
                                image: null | {
                                    id: string;
                                    name: string;
                                    downloadUrl?: null | string;
                                    bucket: string;
                                    filePath: string;
                                    fileType: string;
                                    contentType: null | string;
                                    customMetadata: null | unknown;
                                    uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                    uploadFailReason: null | string;
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            }[];
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/templates/v2/{templateId}/versions/{versionId}/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    templateId: string;
                    versionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        name: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            file: {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            uploadUrl: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/templates/v2/versions/{versionId}/pages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    versionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @default 1 */
                        numberOfPages: number;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            versionId: string;
                            name: null | string;
                            pageNumber: number;
                            fullPath: null | string;
                            inputs: null | {
                                key: string;
                                input: components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                };
                            }[];
                            image: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        }[];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    versionId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @default 1 */
                        numberOfPages: number;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            versionId: string;
                            name: null | string;
                            pageNumber: number;
                            fullPath: null | string;
                            inputs: null | {
                                key: string;
                                input: components["schemas"]["def-47"] & {
                                    applyCommaSeparator?: null | boolean;
                                    color?: null | string;
                                    disabled?: null | boolean;
                                    dropdownOptions?: null | {
                                        value?: null | string;
                                        label?: null | string;
                                    }[];
                                    fontSize?: null | number;
                                    formula?: null | string;
                                    group?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    }[];
                                    height?: null | number;
                                    image?: null | ("Image Main" | "Image Alt");
                                    initialsGroup?: null | {
                                        top: number;
                                        left: number;
                                        recipientId: string;
                                        recipientName?: null | string;
                                        recipientRole?: null | string;
                                    }[];
                                    isSyncEnabled?: boolean;
                                    left?: number | null;
                                    lineHeight?: null | number;
                                    maxLength?: null | string;
                                    multiline?: null | {
                                        inputIdx: string;
                                        pageIdx: number;
                                    };
                                    multilineValue?: null | string;
                                    name?: null | string;
                                    optional?: null | boolean;
                                    optionalSide?: null | string;
                                    options?: null | {
                                        left?: null | number;
                                        reportingName?: null | string;
                                        top?: null | number;
                                        value?: null | string;
                                        width?: null | number;
                                        tabIndex?: null | number;
                                    }[];
                                    pageId?: null | string;
                                    recipientId?: null | string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                    reportingName?: null | string;
                                    required?: null | boolean;
                                    suffix?: null | string;
                                    tabIndex?: null | number;
                                    targetFieldNames?: null | {
                                        [key: string]: string;
                                    };
                                    textAlign?: null | string;
                                    textIndent?: null | number;
                                    lastLineWidth?: null | number;
                                    top?: number | null;
                                    type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                    typeFace?: null | string;
                                    value?: null | string;
                                    width?: number | null;
                                };
                            }[];
                            image: null | {
                                id: string;
                                name: string;
                                downloadUrl?: null | string;
                                bucket: string;
                                filePath: string;
                                fileType: string;
                                contentType: null | string;
                                customMetadata: null | unknown;
                                uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                uploadFailReason: null | string;
                                createdBy: string;
                                /** Format: date-time */
                                createdAt: string;
                                updatedBy: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                            createdBy: string;
                            /** Format: date-time */
                            createdAt: string;
                            updatedBy: string;
                            /** Format: date-time */
                            updatedAt: string;
                        }[];
                    };
                };
            };
        };
        trace?: never;
    };
    "/templates/v2/versions/{versionId}/pages/{pageId}/inputs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    versionId: string;
                    pageId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        input: components["schemas"]["def-47"] & {
                            applyCommaSeparator?: null | boolean;
                            color?: null | string;
                            disabled?: null | boolean;
                            dropdownOptions?: null | {
                                value?: null | string;
                                label?: null | string;
                            }[];
                            fontSize?: null | number;
                            formula?: null | string;
                            group?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            }[];
                            height?: null | number;
                            image?: null | ("Image Main" | "Image Alt");
                            initialsGroup?: null | {
                                top: number;
                                left: number;
                                recipientId: string;
                                recipientName?: null | string;
                                recipientRole?: null | string;
                            }[];
                            isSyncEnabled?: boolean;
                            left?: number | null;
                            lineHeight?: null | number;
                            maxLength?: null | string;
                            multiline?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            };
                            multilineValue?: null | string;
                            name?: null | string;
                            optional?: null | boolean;
                            optionalSide?: null | string;
                            options?: null | {
                                left?: null | number;
                                reportingName?: null | string;
                                top?: null | number;
                                value?: null | string;
                                width?: null | number;
                                tabIndex?: null | number;
                            }[];
                            pageId?: null | string;
                            recipientId?: null | string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                            reportingName?: null | string;
                            required?: null | boolean;
                            suffix?: null | string;
                            tabIndex?: null | number;
                            targetFieldNames?: null | {
                                [key: string]: string;
                            };
                            textAlign?: null | string;
                            textIndent?: null | number;
                            lastLineWidth?: null | number;
                            top?: number | null;
                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                            typeFace?: null | string;
                            value?: null | string;
                            width?: number | null;
                        };
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            key: string;
                            input: components["schemas"]["def-47"] & {
                                applyCommaSeparator?: null | boolean;
                                color?: null | string;
                                disabled?: null | boolean;
                                dropdownOptions?: null | {
                                    value?: null | string;
                                    label?: null | string;
                                }[];
                                fontSize?: null | number;
                                formula?: null | string;
                                group?: null | {
                                    inputIdx: string;
                                    pageIdx: number;
                                }[];
                                height?: null | number;
                                image?: null | ("Image Main" | "Image Alt");
                                initialsGroup?: null | {
                                    top: number;
                                    left: number;
                                    recipientId: string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                }[];
                                isSyncEnabled?: boolean;
                                left?: number | null;
                                lineHeight?: null | number;
                                maxLength?: null | string;
                                multiline?: null | {
                                    inputIdx: string;
                                    pageIdx: number;
                                };
                                multilineValue?: null | string;
                                name?: null | string;
                                optional?: null | boolean;
                                optionalSide?: null | string;
                                options?: null | {
                                    left?: null | number;
                                    reportingName?: null | string;
                                    top?: null | number;
                                    value?: null | string;
                                    width?: null | number;
                                    tabIndex?: null | number;
                                }[];
                                pageId?: null | string;
                                recipientId?: null | string;
                                recipientName?: null | string;
                                recipientRole?: null | string;
                                reportingName?: null | string;
                                required?: null | boolean;
                                suffix?: null | string;
                                tabIndex?: null | number;
                                targetFieldNames?: null | {
                                    [key: string]: string;
                                };
                                textAlign?: null | string;
                                textIndent?: null | number;
                                lastLineWidth?: null | number;
                                top?: number | null;
                                type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                typeFace?: null | string;
                                value?: null | string;
                                width?: number | null;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    versionId: string;
                    pageId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        inputs: {
                            key: string;
                            input: components["schemas"]["def-47"] & {
                                applyCommaSeparator?: null | boolean;
                                color?: null | string;
                                disabled?: null | boolean;
                                dropdownOptions?: null | {
                                    value?: null | string;
                                    label?: null | string;
                                }[];
                                fontSize?: null | number;
                                formula?: null | string;
                                group?: null | {
                                    inputIdx: string;
                                    pageIdx: number;
                                }[];
                                height?: null | number;
                                image?: null | ("Image Main" | "Image Alt");
                                initialsGroup?: null | {
                                    top: number;
                                    left: number;
                                    recipientId: string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                }[];
                                isSyncEnabled?: boolean;
                                left?: number | null;
                                lineHeight?: null | number;
                                maxLength?: null | string;
                                multiline?: null | {
                                    inputIdx: string;
                                    pageIdx: number;
                                };
                                multilineValue?: null | string;
                                name?: null | string;
                                optional?: null | boolean;
                                optionalSide?: null | string;
                                options?: null | {
                                    left?: null | number;
                                    reportingName?: null | string;
                                    top?: null | number;
                                    value?: null | string;
                                    width?: null | number;
                                    tabIndex?: null | number;
                                }[];
                                pageId?: null | string;
                                recipientId?: null | string;
                                recipientName?: null | string;
                                recipientRole?: null | string;
                                reportingName?: null | string;
                                required?: null | boolean;
                                suffix?: null | string;
                                tabIndex?: null | number;
                                targetFieldNames?: null | {
                                    [key: string]: string;
                                };
                                textAlign?: null | string;
                                textIndent?: null | number;
                                lastLineWidth?: null | number;
                                top?: number | null;
                                type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                typeFace?: null | string;
                                value?: null | string;
                                width?: number | null;
                            };
                        }[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ({
                            id: string;
                            isInjected: boolean;
                        } & (components["schemas"]["def-47"] & {
                            applyCommaSeparator?: null | boolean;
                            color?: null | string;
                            disabled?: null | boolean;
                            dropdownOptions?: null | {
                                value?: null | string;
                                label?: null | string;
                            }[];
                            fontSize?: null | number;
                            formula?: null | string;
                            group?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            }[];
                            height?: null | number;
                            image?: null | ("Image Main" | "Image Alt");
                            initialsGroup?: null | {
                                top: number;
                                left: number;
                                recipientId: string;
                                recipientName?: null | string;
                                recipientRole?: null | string;
                            }[];
                            isSyncEnabled?: boolean;
                            left?: number | null;
                            lineHeight?: null | number;
                            maxLength?: null | string;
                            multiline?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            };
                            multilineValue?: null | string;
                            name?: null | string;
                            optional?: null | boolean;
                            optionalSide?: null | string;
                            options?: null | {
                                left?: null | number;
                                reportingName?: null | string;
                                top?: null | number;
                                value?: null | string;
                                width?: null | number;
                                tabIndex?: null | number;
                            }[];
                            pageId?: null | string;
                            recipientId?: null | string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                            reportingName?: null | string;
                            required?: null | boolean;
                            suffix?: null | string;
                            tabIndex?: null | number;
                            targetFieldNames?: null | {
                                [key: string]: string;
                            };
                            textAlign?: null | string;
                            textIndent?: null | number;
                            lastLineWidth?: null | number;
                            top?: number | null;
                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                            typeFace?: null | string;
                            value?: null | string;
                            width?: number | null;
                        }))[];
                    };
                };
            };
        };
        trace?: never;
    };
    "/templates/v2/versions/{versionId}/pages/{pageId}/inputs/{inputId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    versionId: string;
                    pageId: string;
                    inputId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        pageId?: string;
                        input: components["schemas"]["def-47"] & {
                            applyCommaSeparator?: null | boolean;
                            color?: null | string;
                            disabled?: null | boolean;
                            dropdownOptions?: null | {
                                value?: null | string;
                                label?: null | string;
                            }[];
                            fontSize?: null | number;
                            formula?: null | string;
                            group?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            }[];
                            height?: null | number;
                            image?: null | ("Image Main" | "Image Alt");
                            initialsGroup?: null | {
                                top: number;
                                left: number;
                                recipientId: string;
                                recipientName?: null | string;
                                recipientRole?: null | string;
                            }[];
                            isSyncEnabled?: boolean;
                            left?: number | null;
                            lineHeight?: null | number;
                            maxLength?: null | string;
                            multiline?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            };
                            multilineValue?: null | string;
                            name?: null | string;
                            optional?: null | boolean;
                            optionalSide?: null | string;
                            options?: null | {
                                left?: null | number;
                                reportingName?: null | string;
                                top?: null | number;
                                value?: null | string;
                                width?: null | number;
                                tabIndex?: null | number;
                            }[];
                            pageId?: null | string;
                            recipientId?: null | string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                            reportingName?: null | string;
                            required?: null | boolean;
                            suffix?: null | string;
                            tabIndex?: null | number;
                            targetFieldNames?: null | {
                                [key: string]: string;
                            };
                            textAlign?: null | string;
                            textIndent?: null | number;
                            lastLineWidth?: null | number;
                            top?: number | null;
                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                            typeFace?: null | string;
                            value?: null | string;
                            width?: number | null;
                        };
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            key: string;
                            input: components["schemas"]["def-47"] & {
                                applyCommaSeparator?: null | boolean;
                                color?: null | string;
                                disabled?: null | boolean;
                                dropdownOptions?: null | {
                                    value?: null | string;
                                    label?: null | string;
                                }[];
                                fontSize?: null | number;
                                formula?: null | string;
                                group?: null | {
                                    inputIdx: string;
                                    pageIdx: number;
                                }[];
                                height?: null | number;
                                image?: null | ("Image Main" | "Image Alt");
                                initialsGroup?: null | {
                                    top: number;
                                    left: number;
                                    recipientId: string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                }[];
                                isSyncEnabled?: boolean;
                                left?: number | null;
                                lineHeight?: null | number;
                                maxLength?: null | string;
                                multiline?: null | {
                                    inputIdx: string;
                                    pageIdx: number;
                                };
                                multilineValue?: null | string;
                                name?: null | string;
                                optional?: null | boolean;
                                optionalSide?: null | string;
                                options?: null | {
                                    left?: null | number;
                                    reportingName?: null | string;
                                    top?: null | number;
                                    value?: null | string;
                                    width?: null | number;
                                    tabIndex?: null | number;
                                }[];
                                pageId?: null | string;
                                recipientId?: null | string;
                                recipientName?: null | string;
                                recipientRole?: null | string;
                                reportingName?: null | string;
                                required?: null | boolean;
                                suffix?: null | string;
                                tabIndex?: null | number;
                                targetFieldNames?: null | {
                                    [key: string]: string;
                                };
                                textAlign?: null | string;
                                textIndent?: null | number;
                                lastLineWidth?: null | number;
                                top?: number | null;
                                type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                typeFace?: null | string;
                                value?: null | string;
                                width?: number | null;
                            };
                        };
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    versionId: string;
                    pageId: string;
                    inputId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Input deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    versionId: string;
                    pageId: string;
                    inputId: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        pageId?: string;
                        input: components["schemas"]["def-47"] & {
                            applyCommaSeparator?: null | boolean;
                            color?: null | string;
                            disabled?: null | boolean;
                            dropdownOptions?: null | {
                                value?: null | string;
                                label?: null | string;
                            }[];
                            fontSize?: null | number;
                            formula?: null | string;
                            group?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            }[];
                            height?: null | number;
                            image?: null | ("Image Main" | "Image Alt");
                            initialsGroup?: null | {
                                top: number;
                                left: number;
                                recipientId: string;
                                recipientName?: null | string;
                                recipientRole?: null | string;
                            }[];
                            isSyncEnabled?: boolean;
                            left?: number | null;
                            lineHeight?: null | number;
                            maxLength?: null | string;
                            multiline?: null | {
                                inputIdx: string;
                                pageIdx: number;
                            };
                            multilineValue?: null | string;
                            name?: null | string;
                            optional?: null | boolean;
                            optionalSide?: null | string;
                            options?: null | {
                                left?: null | number;
                                reportingName?: null | string;
                                top?: null | number;
                                value?: null | string;
                                width?: null | number;
                                tabIndex?: null | number;
                            }[];
                            pageId?: null | string;
                            recipientId?: null | string;
                            recipientName?: null | string;
                            recipientRole?: null | string;
                            reportingName?: null | string;
                            required?: null | boolean;
                            suffix?: null | string;
                            tabIndex?: null | number;
                            targetFieldNames?: null | {
                                [key: string]: string;
                            };
                            textAlign?: null | string;
                            textIndent?: null | number;
                            lastLineWidth?: null | number;
                            top?: number | null;
                            type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                            typeFace?: null | string;
                            value?: null | string;
                            width?: number | null;
                        };
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            key: string;
                            input: components["schemas"]["def-47"] & {
                                applyCommaSeparator?: null | boolean;
                                color?: null | string;
                                disabled?: null | boolean;
                                dropdownOptions?: null | {
                                    value?: null | string;
                                    label?: null | string;
                                }[];
                                fontSize?: null | number;
                                formula?: null | string;
                                group?: null | {
                                    inputIdx: string;
                                    pageIdx: number;
                                }[];
                                height?: null | number;
                                image?: null | ("Image Main" | "Image Alt");
                                initialsGroup?: null | {
                                    top: number;
                                    left: number;
                                    recipientId: string;
                                    recipientName?: null | string;
                                    recipientRole?: null | string;
                                }[];
                                isSyncEnabled?: boolean;
                                left?: number | null;
                                lineHeight?: null | number;
                                maxLength?: null | string;
                                multiline?: null | {
                                    inputIdx: string;
                                    pageIdx: number;
                                };
                                multilineValue?: null | string;
                                name?: null | string;
                                optional?: null | boolean;
                                optionalSide?: null | string;
                                options?: null | {
                                    left?: null | number;
                                    reportingName?: null | string;
                                    top?: null | number;
                                    value?: null | string;
                                    width?: null | number;
                                    tabIndex?: null | number;
                                }[];
                                pageId?: null | string;
                                recipientId?: null | string;
                                recipientName?: null | string;
                                recipientRole?: null | string;
                                reportingName?: null | string;
                                required?: null | boolean;
                                suffix?: null | string;
                                tabIndex?: null | number;
                                targetFieldNames?: null | {
                                    [key: string]: string;
                                };
                                textAlign?: null | string;
                                textIndent?: null | number;
                                lastLineWidth?: null | number;
                                top?: number | null;
                                type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                typeFace?: null | string;
                                value?: null | string;
                                width?: number | null;
                            };
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/templates/v2/injected-fields": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            value: string;
                            group: string;
                        }[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/form-libraries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string[];
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        formLibraryId: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/form-libraries/{formLibraryId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    formLibraryId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Form library deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/locales/v2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    type?: "country" | "state" | "county" | "city";
                };
                header?: never;
                path: {
                    offset: number;
                    limit: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: {
                                id: string;
                                localeId: string;
                                type: "country" | "state" | "county" | "city";
                                country: string;
                                state: string;
                                stateName: null | string;
                                countyName: null | string;
                                cityName: null | string;
                            }[];
                            facets?: {
                                [key: string]: {
                                    [key: string]: string;
                                };
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        type: "country" | "state" | "county" | "city";
                        state: string;
                        stateName?: null | string;
                        countyName?: null | string;
                        cityName?: null | string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            localeId: string;
                            type: "country" | "state" | "county" | "city";
                            country: string;
                            state: string;
                            stateName: null | string;
                            countyName: null | string;
                            cityName: null | string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/locales/v2/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            localeId: string;
                            type: "country" | "state" | "county" | "city";
                            country: string;
                            state: string;
                            stateName: null | string;
                            countyName: null | string;
                            cityName: null | string;
                        };
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        state: string;
                        stateName?: null | string;
                        countyName?: null | string;
                        cityName?: null | string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            localeId: string;
                            type: "country" | "state" | "county" | "city";
                            country: string;
                            state: string;
                            stateName: null | string;
                            countyName: null | string;
                            cityName: null | string;
                        };
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Locale deleted successfully */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/property-option-groups/v2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    offset?: number;
                    limit?: number;
                    strategy: "txm" | "admin" | "userTemplates";
                    includeFacetCountResults: boolean;
                    search?: string;
                    facets?: string;
                    sort?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            count: number;
                            next: null | string;
                            previous: null | string;
                            results: ({
                                id: string;
                                externalId: string;
                                name: string;
                                type: "contract" | "template";
                                interactionType: "listing" | "offer" | "lease" | "clientGroup" | "referral" | "userTemplate";
                                pogInteractionType: "listing" | "offer" | "listing_offer" | "lease_landlord" | "lease_tenant" | "lease_landlord_tenant" | "lease_dual" | "client_group" | "referral";
                                isActive: boolean;
                                locales: {
                                    id: string;
                                    localeId: string;
                                    type: "country" | "state" | "county" | "city";
                                    country: string;
                                    state: string;
                                    stateName: null | string;
                                    countyName: null | string;
                                    cityName: null | string;
                                }[];
                                isGlobal: boolean;
                                priority: number;
                                searchCriteria: "allOf" | "anyOf";
                            } & Record<string, never>)[];
                            facets?: {
                                city?: {
                                    [key: string]: string;
                                };
                                county?: {
                                    [key: string]: string;
                                };
                                interactionType?: {
                                    [key: string]: string;
                                };
                                pogInteractionType?: {
                                    [key: string]: string;
                                };
                                isGlobal?: {
                                    [key: string]: string;
                                };
                                state?: {
                                    [key: string]: string;
                                };
                                type?: {
                                    [key: string]: string;
                                };
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: {
                    queryByExternalId?: boolean;
                    sourceId?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: string;
                    };
                };
            };
            responses: {
                /** @description Default Response */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            externalId: string;
                            name: string;
                            type: "contract" | "template";
                            interactionType: "listing" | "offer" | "lease" | "clientGroup" | "referral" | "userTemplate";
                            pogInteractionType: "listing" | "offer" | "listing_offer" | "lease_landlord" | "lease_tenant" | "lease_landlord_tenant" | "lease_dual" | "client_group" | "referral";
                            isActive: boolean;
                            locales: {
                                id: string;
                                localeId: string;
                                type: "country" | "state" | "county" | "city";
                                country: string;
                                state: string;
                                stateName: null | string;
                                countyName: null | string;
                                cityName: null | string;
                            }[];
                            isGlobal: boolean;
                            priority: number;
                            searchCriteria: "allOf" | "anyOf";
                        } & {
                            documentTemplates: ({
                                appearsIn: ("listing" | "offer" | "landlord" | "tenant" | "dual" | "client_group" | "referral")[];
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                externalId: null | string;
                                formLibrary: null | string;
                                formName: null | string;
                                formVersion: null | string;
                                id: string;
                                isActive: boolean;
                                isCustom: boolean;
                                isExternal: null | boolean;
                                isGlobal: boolean;
                                isReadyForReporting: boolean;
                                listingOrder: null | number;
                                locales: {
                                    id: string;
                                    localeId: string;
                                    type: "country" | "state" | "county" | "city";
                                    country: string;
                                    state: string;
                                    stateName: null | string;
                                    countyName: null | string;
                                    cityName: null | string;
                                }[];
                                name: string;
                                offerOrder: null | number;
                                publishedVersionId: null | string;
                                revisionMonth: null | number;
                                revisionYear: null | number;
                                sourceTemplateId: null | string;
                                status: "published" | "pending";
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                versions?: null | {
                                    id: string;
                                    templateId: string;
                                    versionNumber: number;
                                    status: "draft" | "published";
                                    sourceVersionId: null | string;
                                    file?: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    pages: {
                                        id: string;
                                        versionId: string;
                                        name: null | string;
                                        pageNumber: number;
                                        fullPath: null | string;
                                        inputs: null | {
                                            key: string;
                                            input: components["schemas"]["def-47"] & {
                                                applyCommaSeparator?: null | boolean;
                                                color?: null | string;
                                                disabled?: null | boolean;
                                                dropdownOptions?: null | {
                                                    value?: null | string;
                                                    label?: null | string;
                                                }[];
                                                fontSize?: null | number;
                                                formula?: null | string;
                                                group?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                }[];
                                                height?: null | number;
                                                image?: null | ("Image Main" | "Image Alt");
                                                initialsGroup?: null | {
                                                    top: number;
                                                    left: number;
                                                    recipientId: string;
                                                    recipientName?: null | string;
                                                    recipientRole?: null | string;
                                                }[];
                                                isSyncEnabled?: boolean;
                                                left?: number | null;
                                                lineHeight?: null | number;
                                                maxLength?: null | string;
                                                multiline?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                };
                                                multilineValue?: null | string;
                                                name?: null | string;
                                                optional?: null | boolean;
                                                optionalSide?: null | string;
                                                options?: null | {
                                                    left?: null | number;
                                                    reportingName?: null | string;
                                                    top?: null | number;
                                                    value?: null | string;
                                                    width?: null | number;
                                                    tabIndex?: null | number;
                                                }[];
                                                pageId?: null | string;
                                                recipientId?: null | string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                                reportingName?: null | string;
                                                required?: null | boolean;
                                                suffix?: null | string;
                                                tabIndex?: null | number;
                                                targetFieldNames?: null | {
                                                    [key: string]: string;
                                                };
                                                textAlign?: null | string;
                                                textIndent?: null | number;
                                                lastLineWidth?: null | number;
                                                top?: number | null;
                                                type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                                typeFace?: null | string;
                                                value?: null | string;
                                                width?: number | null;
                                            };
                                        }[];
                                        image: null | {
                                            id: string;
                                            name: string;
                                            downloadUrl?: null | string;
                                            bucket: string;
                                            filePath: string;
                                            fileType: string;
                                            contentType: null | string;
                                            customMetadata: null | unknown;
                                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                            uploadFailReason: null | string;
                                            createdBy: string;
                                            /** Format: date-time */
                                            createdAt: string;
                                            updatedBy: string;
                                            /** Format: date-time */
                                            updatedAt: string;
                                        };
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    }[];
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                }[];
                                publishedVersion?: null | {
                                    id: string;
                                    templateId: string;
                                    versionNumber: number;
                                    status: "draft" | "published";
                                    sourceVersionId: null | string;
                                    file?: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    pages: {
                                        id: string;
                                        versionId: string;
                                        name: null | string;
                                        pageNumber: number;
                                        fullPath: null | string;
                                        inputs: null | {
                                            key: string;
                                            input: components["schemas"]["def-47"] & {
                                                applyCommaSeparator?: null | boolean;
                                                color?: null | string;
                                                disabled?: null | boolean;
                                                dropdownOptions?: null | {
                                                    value?: null | string;
                                                    label?: null | string;
                                                }[];
                                                fontSize?: null | number;
                                                formula?: null | string;
                                                group?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                }[];
                                                height?: null | number;
                                                image?: null | ("Image Main" | "Image Alt");
                                                initialsGroup?: null | {
                                                    top: number;
                                                    left: number;
                                                    recipientId: string;
                                                    recipientName?: null | string;
                                                    recipientRole?: null | string;
                                                }[];
                                                isSyncEnabled?: boolean;
                                                left?: number | null;
                                                lineHeight?: null | number;
                                                maxLength?: null | string;
                                                multiline?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                };
                                                multilineValue?: null | string;
                                                name?: null | string;
                                                optional?: null | boolean;
                                                optionalSide?: null | string;
                                                options?: null | {
                                                    left?: null | number;
                                                    reportingName?: null | string;
                                                    top?: null | number;
                                                    value?: null | string;
                                                    width?: null | number;
                                                    tabIndex?: null | number;
                                                }[];
                                                pageId?: null | string;
                                                recipientId?: null | string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                                reportingName?: null | string;
                                                required?: null | boolean;
                                                suffix?: null | string;
                                                tabIndex?: null | number;
                                                targetFieldNames?: null | {
                                                    [key: string]: string;
                                                };
                                                textAlign?: null | string;
                                                textIndent?: null | number;
                                                lastLineWidth?: null | number;
                                                top?: number | null;
                                                type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                                typeFace?: null | string;
                                                value?: null | string;
                                                width?: number | null;
                                            };
                                        }[];
                                        image: null | {
                                            id: string;
                                            name: string;
                                            downloadUrl?: null | string;
                                            bucket: string;
                                            filePath: string;
                                            fileType: string;
                                            contentType: null | string;
                                            customMetadata: null | unknown;
                                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                            uploadFailReason: null | string;
                                            createdBy: string;
                                            /** Format: date-time */
                                            createdAt: string;
                                            updatedBy: string;
                                            /** Format: date-time */
                                            updatedAt: string;
                                        };
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    }[];
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                            } & {
                                error?: string[];
                            })[];
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/property-option-groups/v2/{pogId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    queryByExternalId?: boolean;
                    sourceId?: string;
                };
                header?: never;
                path: {
                    pogId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            externalId: string;
                            name: string;
                            type: "contract" | "template";
                            interactionType: "listing" | "offer" | "lease" | "clientGroup" | "referral" | "userTemplate";
                            pogInteractionType: "listing" | "offer" | "listing_offer" | "lease_landlord" | "lease_tenant" | "lease_landlord_tenant" | "lease_dual" | "client_group" | "referral";
                            isActive: boolean;
                            locales: {
                                id: string;
                                localeId: string;
                                type: "country" | "state" | "county" | "city";
                                country: string;
                                state: string;
                                stateName: null | string;
                                countyName: null | string;
                                cityName: null | string;
                            }[];
                            isGlobal: boolean;
                            priority: number;
                            searchCriteria: "allOf" | "anyOf";
                        } & {
                            documentTemplates: ({
                                appearsIn: ("listing" | "offer" | "landlord" | "tenant" | "dual" | "client_group" | "referral")[];
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                externalId: null | string;
                                formLibrary: null | string;
                                formName: null | string;
                                formVersion: null | string;
                                id: string;
                                isActive: boolean;
                                isCustom: boolean;
                                isExternal: null | boolean;
                                isGlobal: boolean;
                                isReadyForReporting: boolean;
                                listingOrder: null | number;
                                locales: {
                                    id: string;
                                    localeId: string;
                                    type: "country" | "state" | "county" | "city";
                                    country: string;
                                    state: string;
                                    stateName: null | string;
                                    countyName: null | string;
                                    cityName: null | string;
                                }[];
                                name: string;
                                offerOrder: null | number;
                                publishedVersionId: null | string;
                                revisionMonth: null | number;
                                revisionYear: null | number;
                                sourceTemplateId: null | string;
                                status: "published" | "pending";
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                versions?: null | {
                                    id: string;
                                    templateId: string;
                                    versionNumber: number;
                                    status: "draft" | "published";
                                    sourceVersionId: null | string;
                                    file?: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    pages: {
                                        id: string;
                                        versionId: string;
                                        name: null | string;
                                        pageNumber: number;
                                        fullPath: null | string;
                                        inputs: null | {
                                            key: string;
                                            input: components["schemas"]["def-47"] & {
                                                applyCommaSeparator?: null | boolean;
                                                color?: null | string;
                                                disabled?: null | boolean;
                                                dropdownOptions?: null | {
                                                    value?: null | string;
                                                    label?: null | string;
                                                }[];
                                                fontSize?: null | number;
                                                formula?: null | string;
                                                group?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                }[];
                                                height?: null | number;
                                                image?: null | ("Image Main" | "Image Alt");
                                                initialsGroup?: null | {
                                                    top: number;
                                                    left: number;
                                                    recipientId: string;
                                                    recipientName?: null | string;
                                                    recipientRole?: null | string;
                                                }[];
                                                isSyncEnabled?: boolean;
                                                left?: number | null;
                                                lineHeight?: null | number;
                                                maxLength?: null | string;
                                                multiline?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                };
                                                multilineValue?: null | string;
                                                name?: null | string;
                                                optional?: null | boolean;
                                                optionalSide?: null | string;
                                                options?: null | {
                                                    left?: null | number;
                                                    reportingName?: null | string;
                                                    top?: null | number;
                                                    value?: null | string;
                                                    width?: null | number;
                                                    tabIndex?: null | number;
                                                }[];
                                                pageId?: null | string;
                                                recipientId?: null | string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                                reportingName?: null | string;
                                                required?: null | boolean;
                                                suffix?: null | string;
                                                tabIndex?: null | number;
                                                targetFieldNames?: null | {
                                                    [key: string]: string;
                                                };
                                                textAlign?: null | string;
                                                textIndent?: null | number;
                                                lastLineWidth?: null | number;
                                                top?: number | null;
                                                type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                                typeFace?: null | string;
                                                value?: null | string;
                                                width?: number | null;
                                            };
                                        }[];
                                        image: null | {
                                            id: string;
                                            name: string;
                                            downloadUrl?: null | string;
                                            bucket: string;
                                            filePath: string;
                                            fileType: string;
                                            contentType: null | string;
                                            customMetadata: null | unknown;
                                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                            uploadFailReason: null | string;
                                            createdBy: string;
                                            /** Format: date-time */
                                            createdAt: string;
                                            updatedBy: string;
                                            /** Format: date-time */
                                            updatedAt: string;
                                        };
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    }[];
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                }[];
                                publishedVersion?: null | {
                                    id: string;
                                    templateId: string;
                                    versionNumber: number;
                                    status: "draft" | "published";
                                    sourceVersionId: null | string;
                                    file?: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    pages: {
                                        id: string;
                                        versionId: string;
                                        name: null | string;
                                        pageNumber: number;
                                        fullPath: null | string;
                                        inputs: null | {
                                            key: string;
                                            input: components["schemas"]["def-47"] & {
                                                applyCommaSeparator?: null | boolean;
                                                color?: null | string;
                                                disabled?: null | boolean;
                                                dropdownOptions?: null | {
                                                    value?: null | string;
                                                    label?: null | string;
                                                }[];
                                                fontSize?: null | number;
                                                formula?: null | string;
                                                group?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                }[];
                                                height?: null | number;
                                                image?: null | ("Image Main" | "Image Alt");
                                                initialsGroup?: null | {
                                                    top: number;
                                                    left: number;
                                                    recipientId: string;
                                                    recipientName?: null | string;
                                                    recipientRole?: null | string;
                                                }[];
                                                isSyncEnabled?: boolean;
                                                left?: number | null;
                                                lineHeight?: null | number;
                                                maxLength?: null | string;
                                                multiline?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                };
                                                multilineValue?: null | string;
                                                name?: null | string;
                                                optional?: null | boolean;
                                                optionalSide?: null | string;
                                                options?: null | {
                                                    left?: null | number;
                                                    reportingName?: null | string;
                                                    top?: null | number;
                                                    value?: null | string;
                                                    width?: null | number;
                                                    tabIndex?: null | number;
                                                }[];
                                                pageId?: null | string;
                                                recipientId?: null | string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                                reportingName?: null | string;
                                                required?: null | boolean;
                                                suffix?: null | string;
                                                tabIndex?: null | number;
                                                targetFieldNames?: null | {
                                                    [key: string]: string;
                                                };
                                                textAlign?: null | string;
                                                textIndent?: null | number;
                                                lastLineWidth?: null | number;
                                                top?: number | null;
                                                type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                                typeFace?: null | string;
                                                value?: null | string;
                                                width?: number | null;
                                            };
                                        }[];
                                        image: null | {
                                            id: string;
                                            name: string;
                                            downloadUrl?: null | string;
                                            bucket: string;
                                            filePath: string;
                                            fileType: string;
                                            contentType: null | string;
                                            customMetadata: null | unknown;
                                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                            uploadFailReason: null | string;
                                            createdBy: string;
                                            /** Format: date-time */
                                            createdAt: string;
                                            updatedBy: string;
                                            /** Format: date-time */
                                            updatedAt: string;
                                        };
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    }[];
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                            } & {
                                error?: string[];
                            })[];
                        };
                    };
                };
                /** @description Default Response */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number & 400;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
                /** @description Default Response */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number & 404;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    pogId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Delete a property option group */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    pogId: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        documentTemplateIds?: string[];
                        interactionType?: "listing" | "offer" | "lease" | "clientGroup" | "referral" | "userTemplate";
                        isGlobal?: boolean;
                        locales?: null | string[];
                        name?: string;
                        pogInteractionType?: "listing" | "offer" | "listing_offer" | "lease_landlord" | "lease_tenant" | "lease_landlord_tenant" | "lease_dual" | "client_group" | "referral";
                        priority?: number;
                        searchCriteria?: "allOf" | "anyOf";
                        type?: "contract" | "template";
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            externalId: string;
                            name: string;
                            type: "contract" | "template";
                            interactionType: "listing" | "offer" | "lease" | "clientGroup" | "referral" | "userTemplate";
                            pogInteractionType: "listing" | "offer" | "listing_offer" | "lease_landlord" | "lease_tenant" | "lease_landlord_tenant" | "lease_dual" | "client_group" | "referral";
                            isActive: boolean;
                            locales: {
                                id: string;
                                localeId: string;
                                type: "country" | "state" | "county" | "city";
                                country: string;
                                state: string;
                                stateName: null | string;
                                countyName: null | string;
                                cityName: null | string;
                            }[];
                            isGlobal: boolean;
                            priority: number;
                            searchCriteria: "allOf" | "anyOf";
                        } & {
                            documentTemplates: ({
                                appearsIn: ("listing" | "offer" | "landlord" | "tenant" | "dual" | "client_group" | "referral")[];
                                /** Format: date-time */
                                createdAt: string;
                                createdBy: string;
                                externalId: null | string;
                                formLibrary: null | string;
                                formName: null | string;
                                formVersion: null | string;
                                id: string;
                                isActive: boolean;
                                isCustom: boolean;
                                isExternal: null | boolean;
                                isGlobal: boolean;
                                isReadyForReporting: boolean;
                                listingOrder: null | number;
                                locales: {
                                    id: string;
                                    localeId: string;
                                    type: "country" | "state" | "county" | "city";
                                    country: string;
                                    state: string;
                                    stateName: null | string;
                                    countyName: null | string;
                                    cityName: null | string;
                                }[];
                                name: string;
                                offerOrder: null | number;
                                publishedVersionId: null | string;
                                revisionMonth: null | number;
                                revisionYear: null | number;
                                sourceTemplateId: null | string;
                                status: "published" | "pending";
                                /** Format: date-time */
                                updatedAt: string;
                                updatedBy: string;
                                versions?: null | {
                                    id: string;
                                    templateId: string;
                                    versionNumber: number;
                                    status: "draft" | "published";
                                    sourceVersionId: null | string;
                                    file?: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    pages: {
                                        id: string;
                                        versionId: string;
                                        name: null | string;
                                        pageNumber: number;
                                        fullPath: null | string;
                                        inputs: null | {
                                            key: string;
                                            input: components["schemas"]["def-47"] & {
                                                applyCommaSeparator?: null | boolean;
                                                color?: null | string;
                                                disabled?: null | boolean;
                                                dropdownOptions?: null | {
                                                    value?: null | string;
                                                    label?: null | string;
                                                }[];
                                                fontSize?: null | number;
                                                formula?: null | string;
                                                group?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                }[];
                                                height?: null | number;
                                                image?: null | ("Image Main" | "Image Alt");
                                                initialsGroup?: null | {
                                                    top: number;
                                                    left: number;
                                                    recipientId: string;
                                                    recipientName?: null | string;
                                                    recipientRole?: null | string;
                                                }[];
                                                isSyncEnabled?: boolean;
                                                left?: number | null;
                                                lineHeight?: null | number;
                                                maxLength?: null | string;
                                                multiline?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                };
                                                multilineValue?: null | string;
                                                name?: null | string;
                                                optional?: null | boolean;
                                                optionalSide?: null | string;
                                                options?: null | {
                                                    left?: null | number;
                                                    reportingName?: null | string;
                                                    top?: null | number;
                                                    value?: null | string;
                                                    width?: null | number;
                                                    tabIndex?: null | number;
                                                }[];
                                                pageId?: null | string;
                                                recipientId?: null | string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                                reportingName?: null | string;
                                                required?: null | boolean;
                                                suffix?: null | string;
                                                tabIndex?: null | number;
                                                targetFieldNames?: null | {
                                                    [key: string]: string;
                                                };
                                                textAlign?: null | string;
                                                textIndent?: null | number;
                                                lastLineWidth?: null | number;
                                                top?: number | null;
                                                type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                                typeFace?: null | string;
                                                value?: null | string;
                                                width?: number | null;
                                            };
                                        }[];
                                        image: null | {
                                            id: string;
                                            name: string;
                                            downloadUrl?: null | string;
                                            bucket: string;
                                            filePath: string;
                                            fileType: string;
                                            contentType: null | string;
                                            customMetadata: null | unknown;
                                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                            uploadFailReason: null | string;
                                            createdBy: string;
                                            /** Format: date-time */
                                            createdAt: string;
                                            updatedBy: string;
                                            /** Format: date-time */
                                            updatedAt: string;
                                        };
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    }[];
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                }[];
                                publishedVersion?: null | {
                                    id: string;
                                    templateId: string;
                                    versionNumber: number;
                                    status: "draft" | "published";
                                    sourceVersionId: null | string;
                                    file?: null | {
                                        id: string;
                                        name: string;
                                        downloadUrl?: null | string;
                                        bucket: string;
                                        filePath: string;
                                        fileType: string;
                                        contentType: null | string;
                                        customMetadata: null | unknown;
                                        uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                        uploadFailReason: null | string;
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    };
                                    pages: {
                                        id: string;
                                        versionId: string;
                                        name: null | string;
                                        pageNumber: number;
                                        fullPath: null | string;
                                        inputs: null | {
                                            key: string;
                                            input: components["schemas"]["def-47"] & {
                                                applyCommaSeparator?: null | boolean;
                                                color?: null | string;
                                                disabled?: null | boolean;
                                                dropdownOptions?: null | {
                                                    value?: null | string;
                                                    label?: null | string;
                                                }[];
                                                fontSize?: null | number;
                                                formula?: null | string;
                                                group?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                }[];
                                                height?: null | number;
                                                image?: null | ("Image Main" | "Image Alt");
                                                initialsGroup?: null | {
                                                    top: number;
                                                    left: number;
                                                    recipientId: string;
                                                    recipientName?: null | string;
                                                    recipientRole?: null | string;
                                                }[];
                                                isSyncEnabled?: boolean;
                                                left?: number | null;
                                                lineHeight?: null | number;
                                                maxLength?: null | string;
                                                multiline?: null | {
                                                    inputIdx: string;
                                                    pageIdx: number;
                                                };
                                                multilineValue?: null | string;
                                                name?: null | string;
                                                optional?: null | boolean;
                                                optionalSide?: null | string;
                                                options?: null | {
                                                    left?: null | number;
                                                    reportingName?: null | string;
                                                    top?: null | number;
                                                    value?: null | string;
                                                    width?: null | number;
                                                    tabIndex?: null | number;
                                                }[];
                                                pageId?: null | string;
                                                recipientId?: null | string;
                                                recipientName?: null | string;
                                                recipientRole?: null | string;
                                                reportingName?: null | string;
                                                required?: null | boolean;
                                                suffix?: null | string;
                                                tabIndex?: null | number;
                                                targetFieldNames?: null | {
                                                    [key: string]: string;
                                                };
                                                textAlign?: null | string;
                                                textIndent?: null | number;
                                                lastLineWidth?: null | number;
                                                top?: number | null;
                                                type?: null | ("checkbox" | "date" | "datesToWords" | "decimalsToWords" | "dropdown" | "image" | "initial" | "initialsGroup" | "math" | "multiline" | "numbersToWords" | "preparedDate" | "radio" | "signature" | "signatureDate" | "strikethrough" | "string" | "textarea");
                                                typeFace?: null | string;
                                                value?: null | string;
                                                width?: number | null;
                                            };
                                        }[];
                                        image: null | {
                                            id: string;
                                            name: string;
                                            downloadUrl?: null | string;
                                            bucket: string;
                                            filePath: string;
                                            fileType: string;
                                            contentType: null | string;
                                            customMetadata: null | unknown;
                                            uploadStatus: null | ("created" | "uploading" | "processing" | "completed" | "failed");
                                            uploadFailReason: null | string;
                                            createdBy: string;
                                            /** Format: date-time */
                                            createdAt: string;
                                            updatedBy: string;
                                            /** Format: date-time */
                                            updatedAt: string;
                                        };
                                        createdBy: string;
                                        /** Format: date-time */
                                        createdAt: string;
                                        updatedBy: string;
                                        /** Format: date-time */
                                        updatedAt: string;
                                    }[];
                                    createdBy: string;
                                    /** Format: date-time */
                                    createdAt: string;
                                    updatedBy: string;
                                    /** Format: date-time */
                                    updatedAt: string;
                                };
                            } & {
                                error?: string[];
                            })[];
                        };
                    };
                };
            };
        };
        trace?: never;
    };
    "/short-url": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        bucket?: string;
                        createdBy: string;
                        /** Format: date-time */
                        expiresAt: string;
                        externalId?: string;
                        path: string;
                        views?: number;
                        viewsMetaData?: {
                            ip: string;
                            /** Format: date-time */
                            timestamp: string;
                        }[];
                    };
                };
            };
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            url: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/short-url/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                302: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/short-url/{id}/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            /** Format: date-time */
                            createdAt: string;
                            /** Format: date-time */
                            lastViewedAt: string;
                            viewCount: number;
                            /** Format: uri */
                            url: string;
                            file: {
                                id: string;
                                name: string;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/oauth/request": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    provider: "google" | "follow-up-boss";
                    returnPath: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            requestUrl: string;
                        };
                    };
                };
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/oauth/callback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    response: "approved" | "denied";
                    code?: string;
                    state: string;
                    error?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                504: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": string;
                    };
                };
                /** @description Default Response */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            code?: string;
                            message: string;
                            error: string;
                            statusCode: number;
                            errors?: {
                                [key: string]: unknown;
                            }[];
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Passed */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: number;
                            info?: {
                                [key: string]: unknown;
                            };
                            stats?: {
                                createTime?: string;
                                upTime?: string;
                                memory?: {
                                    rss?: number;
                                    heapTotal?: number;
                                    heapUsed?: number;
                                    external?: number;
                                    arrayBuffers?: number;
                                };
                            };
                            computedChecks?: {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
                /** @description Failed */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status: number;
                            info?: {
                                [key: string]: unknown;
                            };
                            stats?: {
                                createTime?: string;
                                upTime?: string;
                                memory?: {
                                    rss?: number;
                                    heapTotal?: number;
                                    heapUsed?: number;
                                    external?: number;
                                    arrayBuffers?: number;
                                };
                            };
                            computedChecks?: {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** CommunityListingQueryString */
        "def-0": {
            offset?: number;
            limit?: number;
        } & {
            center?: string;
            facets?: string;
            radius?: number;
            search?: string;
            sort?: string;
        };
        /** CommunityListingResponse */
        "def-1": {
            id: string;
            status: "active" | "activeCont" | "backUp" | "closed" | "comingSoon" | "expired" | "lost" | "offMarket" | "onMarket" | "pending" | "preListing" | "rejected" | "withdrawn" | "noStatus";
            price: null | number;
            /** Format: date-time */
            createdAt: string;
            dateAdded: null | string;
            description: null | string;
            address: {
                street1: null | string;
                street2: null | string;
                state: null | string;
                county: null | string;
                city: null | string;
                zip: null | string;
            };
            bathrooms: null | number;
            bedrooms: null | number;
            buildingArea: null | number;
            lotSize: null | number;
            primaryAgent: {
                userId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                email?: null | string;
                cellPhone?: null | string;
            } & {
                teamName?: null | string;
            };
            coAgents: ({
                userId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                email?: null | string;
                cellPhone?: null | string;
            } & {
                teamName?: null | string;
            })[];
            distanceFromCenter: null | number;
        };
        /** CommunityListingsFacet */
        "def-2": {
            status: {
                [key: string]: number;
            };
        };
        /** ClientGroupBase */
        "def-3": {
            startDate?: null | string;
            endDate?: null | string;
            isArchived?: boolean;
            commissionType?: null | ("AMOUNT" | "PERCENTAGE");
            commissionValue?: null | number;
            buyerRelationshipType?: null | ("EXCLUSIVE" | "NON_EXCLUSIVE");
            propertyRestrictionType?: null | ("SPECIFIC_LOCATION" | "SPECIFIC_PROPERTIES" | "NO_RESTRICTION");
            priceRangeMin?: null | number;
            priceRangeMax?: null | number;
        };
        /** CreateClientGroupBody */
        "def-4": components["schemas"]["def-10"] & components["schemas"]["def-3"] & {
            /** Format: uuid */
            referralId?: string;
            contacts?: ((({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                licenseNumber?: null | string;
                licenseState?: null | string;
                mlsId?: null | string;
                officeNumber?: null | string;
                jurisdiction?: null | string;
                primaryMls?: null | string;
                commission?: null | string;
                sellingCommission?: null | string;
                listingPeriod?: null | string;
                teamId?: null | string;
                teamName?: null | string;
                teamAlias?: null | string;
                teamBusinessLicenseEntityNumber?: null | string;
                broker?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    licenseNumber?: null | string;
                    cellPhone?: null | string;
                    email?: null | string;
                };
                brokerage?: {
                    companyName?: null | string;
                    street1?: null | string;
                    street2?: null | string;
                    city?: null | string;
                    state?: null | string;
                    zip?: null | string;
                    county?: null | string;
                    phone?: null | string;
                    cellPhone?: null | string;
                    fax?: null | string;
                    email?: null | string;
                    officeEmail?: null | string;
                    licenseNumber?: null | string;
                    jurisdiction?: null | string;
                    mlsCode?: null | string;
                    mlsId?: null | string;
                    taxId?: null | string;
                };
                officeManager?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    licenseNumber?: null | string;
                    cellPhone?: null | string;
                    email?: null | string;
                };
                supervisingBroker?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    licenseNumber?: null | string;
                    cellPhone?: null | string;
                    email?: null | string;
                };
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                title?: null | string;
                entityType?: null | string;
                isSuccessor?: null | string;
                isSelfRepresented?: "true" | "false";
                ownershipStatus?: null | string;
                entity?: {
                    title?: null | string;
                    titleOther?: null | string;
                    entityName?: null | string;
                };
                powerOfAttorney?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    email?: null | string;
                };
                probate?: {
                    title?: null | string;
                    titleOther?: null | string;
                    estateName?: null | string;
                };
                trust?: {
                    title?: null | string;
                    titleOther?: null | string;
                    trustName?: null | string;
                };
                referralClientTypes?: {
                    referralBuyer: "true" | "false";
                    referralSeller: "true" | "false";
                    referralLandlord: "true" | "false";
                    referralTenant: "true" | "false";
                };
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }))[];
        };
        /** UpdateClientGroupBody */
        "def-5": components["schemas"]["def-10"] & components["schemas"]["def-3"];
        /** ClientGroupResponse */
        "def-6": {
            id: string;
            notes: null | string;
            owner: string;
            teamId?: null | string;
            createdBy: string;
            /** Format: date-time */
            createdAt: string;
            updatedBy: string;
            /** Format: date-time */
            updatedAt: string;
        } & {
            /** @enum {string} */
            type: "clientGroup";
            startDate: null | string;
            endDate: null | string;
            agreementCreatedAt: null | string;
            commissionType: null | ("AMOUNT" | "PERCENTAGE");
            commissionValue: null | number;
            buyerRelationshipType: null | ("EXCLUSIVE" | "NON_EXCLUSIVE");
            propertyRestrictionType: null | ("SPECIFIC_LOCATION" | "SPECIFIC_PROPERTIES" | "NO_RESTRICTION");
            priceRangeMin: null | number;
            priceRangeMax: null | number;
            agreementStatus: null | (("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided"));
            isArchived: boolean;
            referralId: null | string;
        };
        /** ClientGroupResponseWithContacts */
        "def-7": components["schemas"]["def-6"] & {
            contacts: {
                id: string;
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                order: number;
                firstName?: null | string;
                lastName?: null | string;
                email?: null | string;
                cellPhone?: null | string;
                userId?: null | string;
                teamId?: null | string;
                avatar?: null | string;
                entityType?: null | string;
                entityName?: null | string;
            }[];
        };
        /** ClientGroupAgreementResponse */
        "def-8": {
            id: string;
            type: "envelope" | "attachment";
            status: ("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided");
            name: string;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
            completedAt: null | string;
            documents: {
                id: string;
                name: string;
                url: string;
            }[];
        };
        /** BaseInteractionBody */
        "def-9": {
            notes?: null | string;
            leadSourceId?: null | string;
            leadSourceNameSpecified?: null | string;
            owner?: string;
            teamId?: null | string;
        };
        /** BaseMigratedInteractionBody */
        "def-10": components["schemas"]["def-9"] & {
            createdBy?: string;
            updatedBy?: string;
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            updatedAt?: string;
            rtdbEventTimestamp?: string;
        };
        /** BaseInteractionResponse */
        "def-11": {
            id: string;
            externalId: null | string;
            notes: null | string;
            leadSourceId: null | string;
            leadSourceNameSpecified: null | string;
            owner: string;
            teamId?: null | string;
            isIntermediary?: boolean;
            createdBy: string;
            /** Format: date-time */
            createdAt: string;
            updatedBy: string;
            /** Format: date-time */
            updatedAt: string;
        };
        /** InteractionResponse */
        "def-12": {
            id: string;
            type: "listing" | "offer" | "lease" | "clientGroup" | "referral";
            interaction: components["schemas"]["def-24"] | components["schemas"]["def-34"] | components["schemas"]["def-18"] | components["schemas"]["def-6"] | components["schemas"]["def-45"];
        };
        /** InteractionResponseWithContacts */
        "def-13": {
            id: string;
            type: "listing" | "offer" | "lease" | "clientGroup" | "referral";
            interaction: components["schemas"]["def-25"] | components["schemas"]["def-36"] | components["schemas"]["def-19"] | components["schemas"]["def-7"] | components["schemas"]["def-46"];
        };
        /** InteractionBasicInfoResponse */
        "def-14": {
            id: string;
            externalId: null | string;
            interactionType: "listing" | "offer" | "lease" | "clientGroup" | "referral";
            teamId: null | string;
        };
        /** CommonLeaseBody */
        "def-15": {
            leaseStartDate?: null | string;
            leaseEndDate?: null | string;
            monthlyRent?: null | number;
            totalRentAmount?: null | number;
            paymentDate?: null | string;
            contractDate?: null | string;
            isArchived?: boolean;
        };
        /** CreateLeaseBody */
        "def-16": components["schemas"]["def-9"] & components["schemas"]["def-15"] & {
            /** @default active */
            status: "active" | "activeCont" | "closed" | "comingSoon" | "expired" | "lost" | "onMarket" | "pending" | "preListing" | "rejected" | "withdrawn" | "backUp" | "cancelled" | "ratified";
            /** @default landlord */
            representation: "tenant" | "landlord" | "dual";
            listing: components["schemas"]["def-21"];
            offer?: components["schemas"]["def-29"];
            contacts?: ((({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                licenseNumber?: null | string;
                licenseState?: null | string;
                mlsId?: null | string;
                officeNumber?: null | string;
                jurisdiction?: null | string;
                primaryMls?: null | string;
                commission?: null | string;
                sellingCommission?: null | string;
                listingPeriod?: null | string;
                teamId?: null | string;
                teamName?: null | string;
                teamAlias?: null | string;
                teamBusinessLicenseEntityNumber?: null | string;
                broker?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    licenseNumber?: null | string;
                    cellPhone?: null | string;
                    email?: null | string;
                };
                brokerage?: {
                    companyName?: null | string;
                    street1?: null | string;
                    street2?: null | string;
                    city?: null | string;
                    state?: null | string;
                    zip?: null | string;
                    county?: null | string;
                    phone?: null | string;
                    cellPhone?: null | string;
                    fax?: null | string;
                    email?: null | string;
                    officeEmail?: null | string;
                    licenseNumber?: null | string;
                    jurisdiction?: null | string;
                    mlsCode?: null | string;
                    mlsId?: null | string;
                    taxId?: null | string;
                };
                officeManager?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    licenseNumber?: null | string;
                    cellPhone?: null | string;
                    email?: null | string;
                };
                supervisingBroker?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    licenseNumber?: null | string;
                    cellPhone?: null | string;
                    email?: null | string;
                };
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                title?: null | string;
                entityType?: null | string;
                isSuccessor?: null | string;
                isSelfRepresented?: "true" | "false";
                ownershipStatus?: null | string;
                entity?: {
                    title?: null | string;
                    titleOther?: null | string;
                    entityName?: null | string;
                };
                powerOfAttorney?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    email?: null | string;
                };
                probate?: {
                    title?: null | string;
                    titleOther?: null | string;
                    estateName?: null | string;
                };
                trust?: {
                    title?: null | string;
                    titleOther?: null | string;
                    trustName?: null | string;
                };
                referralClientTypes?: {
                    referralBuyer: "true" | "false";
                    referralSeller: "true" | "false";
                    referralLandlord: "true" | "false";
                    referralTenant: "true" | "false";
                };
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | ({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                escrowNumber?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                confirmationNumber?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
                titleNumber?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }))[];
            /** Format: uuid */
            referralId?: string;
            /** Format: uuid */
            sourceLeaseId?: string;
        };
        /** UpdateLeaseBody */
        "def-17": components["schemas"]["def-9"] & components["schemas"]["def-15"] & {
            status?: "active" | "activeCont" | "closed" | "comingSoon" | "expired" | "lost" | "onMarket" | "pending" | "preListing" | "rejected" | "withdrawn" | "backUp" | "cancelled" | "ratified";
            representation?: "tenant" | "landlord" | "dual";
            listing?: components["schemas"]["def-22"];
            offer?: components["schemas"]["def-30"];
        };
        /** LeaseResponse */
        "def-18": components["schemas"]["def-11"] & {
            /** @enum {string} */
            type: "lease";
            representation: "tenant" | "landlord" | "dual";
            status: "active" | "activeCont" | "closed" | "comingSoon" | "expired" | "lost" | "onMarket" | "pending" | "preListing" | "rejected" | "withdrawn" | "backUp" | "cancelled" | "ratified";
            isArchived: boolean;
            leaseStartDate: null | string;
            leaseEndDate: null | string;
            contractDate: null | string;
            paymentDate: null | string;
            monthlyRent: null | number;
            totalRentAmount: null | number;
            referralId: null | string;
            listing: null | components["schemas"]["def-24"];
            offer: null | components["schemas"]["def-34"];
        };
        /** LeaseResponseWithContacts */
        "def-19": components["schemas"]["def-18"] & {
            contacts: {
                id: string;
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                order: number;
                firstName?: null | string;
                lastName?: null | string;
                email?: null | string;
                cellPhone?: null | string;
                userId?: null | string;
                teamId?: null | string;
                avatar?: null | string;
                entityType?: null | string;
                entityName?: null | string;
            }[];
        };
        /** Listing */
        "def-20": {
            acceptedOfferId?: null | string;
            totalOffersReceived?: null | number;
            onMarketDate?: null | string;
            listingStartDate?: null | string;
            listingEndDate?: null | string;
            listingPrice?: null | (number | "TBD");
            salesAgreementNumber?: null | string;
            salesPrice?: null | (number | "TBD");
            settlementDate?: null | string;
            coverPhotoUrl?: null | string;
            coverPhotoFileId?: null | string;
            coverPhotoFullPath?: null | string;
            coverPhotoName?: null | string;
            photos?: null | string[];
            contractDate?: null | string;
            closingDate?: null | string;
            bindingAgreementDate?: null | string;
            isArchived?: boolean;
            /** Format: uuid */
            sourceListingId?: string;
            showOnInsideListings?: boolean;
            insideListingDescription?: null | string;
            dateAddedToCommunityListings?: null | string;
        };
        /** CreateListingBody */
        "def-21": components["schemas"]["def-10"] & components["schemas"]["def-20"] & {
            status: "active" | "activeCont" | "backUp" | "closed" | "comingSoon" | "expired" | "lost" | "offMarket" | "onMarket" | "pending" | "preListing" | "rejected" | "withdrawn" | "noStatus";
            property?: null | components["schemas"]["def-39"];
            /** Format: uuid */
            referralId?: string;
        };
        /** UpdateListingBody */
        "def-22": components["schemas"]["def-10"] & components["schemas"]["def-20"] & {
            status?: "active" | "activeCont" | "backUp" | "closed" | "comingSoon" | "expired" | "lost" | "offMarket" | "onMarket" | "pending" | "preListing" | "rejected" | "withdrawn" | "noStatus";
            property?: null | components["schemas"]["def-40"];
        };
        /** BaseListingResponse */
        "def-23": {
            status: "active" | "activeCont" | "backUp" | "closed" | "comingSoon" | "expired" | "lost" | "offMarket" | "onMarket" | "pending" | "preListing" | "rejected" | "withdrawn" | "noStatus";
            /** @enum {string} */
            type: "listing";
            acceptedOfferId: null | string;
            totalOffersReceived: null | number;
            onMarketDate: null | string;
            bindingAgreementDate: null | string;
            listingStartDate: null | string;
            listingEndDate: null | string;
            listingPrice: null | number;
            salesAgreementNumber: null | string;
            salesPrice: null | number;
            settlementDate: null | string;
            coverPhotoUrl: null | string;
            coverPhotoFileId: null | string;
            coverPhotoFullPath: null | string;
            coverPhotoName: null | string;
            photos: null | string[];
            contractDate: null | string;
            closingDate: null | string;
            autoGenerated: boolean;
            property: null | {
                id: string;
                attributes: null | components["schemas"]["def-37"];
                assessorParcelNumber: null | string;
                street1: null | string;
                street2: null | string;
                state: null | string;
                city: null | string;
                county: null | string;
                zip: null | string;
                mlsNumber: null | string;
                mlsFee?: null | number;
                mlsServiceId: null | string;
                lot: null | string;
                block: null | string;
                section: null | string;
                subdivision: null | string;
                taxIdNumber: null | string;
                legalDescription: null | string;
                platbook: null | string;
                pages: null | string;
                bathrooms: null | number;
                bedrooms: null | number;
                buildingArea: null | number;
                lotSize: null | number;
                locales: null | {
                    city?: string;
                    country?: string;
                    county?: string;
                    state?: string;
                };
                coordinates: null | {
                    latitude: number;
                    longitude: number;
                };
            };
            isArchived: boolean;
            showOnInsideListings: boolean;
            referralId: null | string;
            insideListingDescription: null | string;
            offerExperience: "coversheet" | "featureFlag" | "lom";
        };
        /** ListingResponse */
        "def-24": components["schemas"]["def-11"] & components["schemas"]["def-23"];
        /** ListingResponseWithContacts */
        "def-25": components["schemas"]["def-24"] & {
            contacts: {
                id: string;
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                order: number;
                firstName?: null | string;
                lastName?: null | string;
                email?: null | string;
                cellPhone?: null | string;
                userId?: null | string;
                teamId?: null | string;
                avatar?: null | string;
                entityType?: null | string;
                entityName?: null | string;
            }[];
        };
        /** Base */
        "def-26": {
            contractDate?: null | string;
            closingDate?: null | string;
            proposedClosingTimeframe?: null | number;
            expirationDate?: null | string;
            offerPrice?: null | number;
            downPaymentAmount?: null | number;
            sellerPaidClosingCostsAmount?: null | number;
            sellerPaidClosingCostsPercentage?: null | number;
            financingType?: null | ("cash" | "conventional" | "fha" | "va" | "sellerFinancing" | "bond" | "other");
            contingencies?: null | {
                type: "appraisal" | "buyerHomeSale" | "financing" | "inspection" | "sellerReplacementProperty" | "commonInterestDisclosures" | "reviewOfSellerDocuments" | "preliminaryTitleReport" | "reviewOfLeasedOrLienedItems" | "woodInfestationReport" | "other";
                numberOfDays?: number;
                description?: string;
            }[];
            emdHolderCompanyName?: null | string;
            emdAmount?: null | number;
            emdDueDate?: null | string;
            numbersDaysEmdDue?: null | number;
            isArchived?: boolean;
            /** Format: uuid */
            sourceOfferId?: string;
            /** Format: uuid */
            clientGroupId?: string;
            downPaymentPercentage?: null | number;
            mortgageRatePercentage?: null | number;
            terminationFee?: null | number;
            releaseOfEarnestMoney?: null | {
                numberOfDays: null | number;
                details: null | string;
            };
            propertyInclusions?: null | string;
            propertyExclusions?: null | string;
        };
        /** CreateOffer */
        "def-27": components["schemas"]["def-26"] & {
            listing?: components["schemas"]["def-21"];
        };
        /** UpdateOffer */
        "def-28": components["schemas"]["def-26"] & {
            listing?: components["schemas"]["def-22"];
        };
        /** CreateOfferBody */
        "def-29": components["schemas"]["def-10"] & components["schemas"]["def-27"] & {
            status: "acceptancePending" | "accepted" | "accepting" | "active" | "activeCont" | "backUp" | "buyerCountered" | "cancellationPending" | "cancelled" | "closed" | "counterOfferSent" | "countering" | "handshake" | "noStatus" | "pending" | "ratified" | "rejected" | "sellerCountered" | "underReview";
            /** Format: uuid */
            referralId?: string;
        };
        /** UpdateOfferBody */
        "def-30": components["schemas"]["def-10"] & components["schemas"]["def-28"] & {
            status?: "acceptancePending" | "accepted" | "accepting" | "active" | "activeCont" | "backUp" | "buyerCountered" | "cancellationPending" | "cancelled" | "closed" | "counterOfferSent" | "countering" | "handshake" | "noStatus" | "pending" | "ratified" | "rejected" | "sellerCountered" | "underReview";
        };
        /** CreateOfferOnListingBody */
        "def-31": components["schemas"]["def-10"] & components["schemas"]["def-26"] & {
            contacts?: ((({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                licenseNumber?: null | string;
                licenseState?: null | string;
                mlsId?: null | string;
                officeNumber?: null | string;
                jurisdiction?: null | string;
                primaryMls?: null | string;
                commission?: null | string;
                sellingCommission?: null | string;
                listingPeriod?: null | string;
                teamId?: null | string;
                teamName?: null | string;
                teamAlias?: null | string;
                teamBusinessLicenseEntityNumber?: null | string;
                broker?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    licenseNumber?: null | string;
                    cellPhone?: null | string;
                    email?: null | string;
                };
                brokerage?: {
                    companyName?: null | string;
                    street1?: null | string;
                    street2?: null | string;
                    city?: null | string;
                    state?: null | string;
                    zip?: null | string;
                    county?: null | string;
                    phone?: null | string;
                    cellPhone?: null | string;
                    fax?: null | string;
                    email?: null | string;
                    officeEmail?: null | string;
                    licenseNumber?: null | string;
                    jurisdiction?: null | string;
                    mlsCode?: null | string;
                    mlsId?: null | string;
                    taxId?: null | string;
                };
                officeManager?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    licenseNumber?: null | string;
                    cellPhone?: null | string;
                    email?: null | string;
                };
                supervisingBroker?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    licenseNumber?: null | string;
                    cellPhone?: null | string;
                    email?: null | string;
                };
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                title?: null | string;
                entityType?: null | string;
                isSuccessor?: null | string;
                isSelfRepresented?: "true" | "false";
                ownershipStatus?: null | string;
                entity?: {
                    title?: null | string;
                    titleOther?: null | string;
                    entityName?: null | string;
                };
                powerOfAttorney?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    email?: null | string;
                };
                probate?: {
                    title?: null | string;
                    titleOther?: null | string;
                    estateName?: null | string;
                };
                trust?: {
                    title?: null | string;
                    titleOther?: null | string;
                    trustName?: null | string;
                };
                referralClientTypes?: {
                    referralBuyer: "true" | "false";
                    referralSeller: "true" | "false";
                    referralLandlord: "true" | "false";
                    referralTenant: "true" | "false";
                };
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | ({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                escrowNumber?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                confirmationNumber?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                companyName?: null | string;
                role?: null | string;
                titleNumber?: null | string;
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }))[];
            status: "acceptancePending" | "accepted" | "accepting" | "active" | "activeCont" | "backUp" | "buyerCountered" | "cancellationPending" | "cancelled" | "closed" | "counterOfferSent" | "countering" | "handshake" | "noStatus" | "pending" | "ratified" | "rejected" | "sellerCountered" | "underReview";
        };
        /** UpdateOfferOnListingStatusBody */
        "def-32": {
            status: "acceptancePending" | "accepted" | "accepting" | "active" | "activeCont" | "backUp" | "buyerCountered" | "cancellationPending" | "cancelled" | "closed" | "counterOfferSent" | "countering" | "handshake" | "noStatus" | "pending" | "ratified" | "rejected" | "sellerCountered" | "underReview";
            updatedBy?: string;
            cancellationDetails?: {
                reason: "buyerCancelled" | "sellerCancelled" | "accidentallyAccepted" | "duplicate" | "other";
                comments: null | string;
            };
        };
        /** BaseOfferResponse */
        "def-33": {
            status: "acceptancePending" | "accepted" | "accepting" | "active" | "activeCont" | "backUp" | "buyerCountered" | "cancellationPending" | "cancelled" | "closed" | "counterOfferSent" | "countering" | "handshake" | "noStatus" | "pending" | "ratified" | "rejected" | "sellerCountered" | "underReview";
            /** @enum {string} */
            type: "offer";
            contractDate: null | string;
            closingDate: null | string;
            proposedClosingTimeframe: null | number;
            expirationDate: null | string;
            offerPrice: null | number;
            downPaymentAmount: null | number;
            sellerPaidClosingCostsAmount: null | number;
            sellerPaidClosingCostsPercentage: null | number;
            financingType: null | ("cash" | "conventional" | "fha" | "va" | "sellerFinancing" | "bond" | "other");
            contingencies: null | {
                type: "appraisal" | "buyerHomeSale" | "financing" | "inspection" | "sellerReplacementProperty" | "commonInterestDisclosures" | "reviewOfSellerDocuments" | "preliminaryTitleReport" | "reviewOfLeasedOrLienedItems" | "woodInfestationReport" | "other";
                numberOfDays?: number;
                description?: string;
            }[];
            emdHolderCompanyName: null | string;
            emdAmount: null | number;
            emdDueDate: null | string;
            numbersDaysEmdDue: null | number;
            isArchived: boolean;
            autoGenerated: boolean;
            clientGroupId: null | string;
            referralId: null | string;
            isOfferOnListing: boolean;
            downPaymentPercentage: null | number;
            mortgageRatePercentage: null | number;
            terminationFee: null | number;
            releaseOfEarnestMoney: null | {
                numberOfDays: null | number;
                details: null | string;
            };
            propertyInclusions: null | string;
            propertyExclusions: null | string;
        };
        /** OfferResponse */
        "def-34": components["schemas"]["def-11"] & components["schemas"]["def-33"] & {
            listing?: null | components["schemas"]["def-24"];
        };
        /** OfferResponseWithDocumentStats */
        "def-35": {
            id: string;
            contacts: {
                id: string;
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                order: number;
                firstName?: null | string;
                lastName?: null | string;
                email?: null | string;
                cellPhone?: null | string;
                userId?: null | string;
                teamId?: null | string;
                avatar?: null | string;
                entityType?: null | string;
                entityName?: null | string;
            }[];
            offerPrice: null | number;
            status: "acceptancePending" | "accepted" | "accepting" | "active" | "activeCont" | "backUp" | "buyerCountered" | "cancellationPending" | "cancelled" | "closed" | "counterOfferSent" | "countering" | "handshake" | "noStatus" | "pending" | "ratified" | "rejected" | "sellerCountered" | "underReview";
            totalActiveDocuments: number;
            totalSentEnvelopes: number;
        };
        /** OfferResponseWithContacts */
        "def-36": components["schemas"]["def-34"] & {
            contacts: {
                id: string;
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                order: number;
                firstName?: null | string;
                lastName?: null | string;
                email?: null | string;
                cellPhone?: null | string;
                userId?: null | string;
                teamId?: null | string;
                avatar?: null | string;
                entityType?: null | string;
                entityName?: null | string;
            }[];
        };
        /** Attributes */
        "def-37": {
            attomId?: string;
            characteristics?: {
                yearBuilt?: number;
                garage?: number;
                roomsTotal?: number;
                fireplace?: number;
                airCondition?: string;
                heating?: string;
                pool?: string;
            };
            tax?: {
                taxYear?: number;
                propertyTax?: number;
                homeowner?: {
                    isExempt?: boolean;
                    exemptionAmount?: number;
                };
                disabled?: {
                    isExempt?: boolean;
                    exemptionAmount?: number;
                };
                senior?: {
                    isExempt?: boolean;
                    exemptionAmount?: number;
                };
                verteran?: {
                    isExempt?: boolean;
                    exemptionAmount?: number;
                };
            };
        };
        /** PropertyBodyBase */
        "def-38": {
            attributes?: components["schemas"]["def-37"];
            assessorParcelNumber?: null | string;
            street1?: null | string;
            street2?: null | string;
            state?: null | string;
            city?: null | string;
            county?: null | string;
            zip?: null | string;
            mlsNumber?: null | string;
            mlsFee?: null | number;
            mlsServiceId?: null | string;
            lot?: null | string;
            block?: null | string;
            section?: null | string;
            subdivision?: null | string;
            taxIdNumber?: null | string;
            legalDescription?: null | string;
            platbook?: null | string;
            pages?: null | string;
            bathrooms?: null | number;
            bedrooms?: null | number;
            buildingArea?: null | number;
            lotSize?: null | number;
            locales?: null | {
                city?: string;
                country?: string;
                county?: string;
                state?: string;
            };
            coordinates?: null | {
                latitude: number;
                longitude: number;
            };
        };
        /** CreatePropertyBody */
        "def-39": components["schemas"]["def-38"];
        /** UpdatePropertyBody */
        "def-40": components["schemas"]["def-38"];
        /** CommonReferralBody */
        "def-41": {
            notes?: null | string;
            owner?: string;
            teamId?: null | string;
        } & {
            startDate?: null | string;
            endDate?: null | string;
            isArchived?: boolean;
            commissionType?: null | ("AMOUNT" | "PERCENTAGE_LISTING_COMMISSION" | "PERCENTAGE_PURCHASE_COMMISSION" | "PERCENTAGE_ALL_COMMISSIONS");
            commissionValue?: null | number;
        };
        /** CreateReferralBody */
        "def-42": components["schemas"]["def-41"] & {
            contacts: ((({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                licenseNumber?: null | string;
                licenseState?: null | string;
                mlsId?: null | string;
                officeNumber?: null | string;
                jurisdiction?: null | string;
                primaryMls?: null | string;
                commission?: null | string;
                sellingCommission?: null | string;
                listingPeriod?: null | string;
                teamId?: null | string;
                teamName?: null | string;
                teamAlias?: null | string;
                teamBusinessLicenseEntityNumber?: null | string;
                broker?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    licenseNumber?: null | string;
                    cellPhone?: null | string;
                    email?: null | string;
                };
                brokerage?: {
                    companyName?: null | string;
                    street1?: null | string;
                    street2?: null | string;
                    city?: null | string;
                    state?: null | string;
                    zip?: null | string;
                    county?: null | string;
                    phone?: null | string;
                    cellPhone?: null | string;
                    fax?: null | string;
                    email?: null | string;
                    officeEmail?: null | string;
                    licenseNumber?: null | string;
                    jurisdiction?: null | string;
                    mlsCode?: null | string;
                    mlsId?: null | string;
                    taxId?: null | string;
                };
                officeManager?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    licenseNumber?: null | string;
                    cellPhone?: null | string;
                    email?: null | string;
                };
                supervisingBroker?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    licenseNumber?: null | string;
                    cellPhone?: null | string;
                    email?: null | string;
                };
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }) | (({
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            } & {
                title?: null | string;
                entityType?: null | string;
                isSuccessor?: null | string;
                isSelfRepresented?: "true" | "false";
                ownershipStatus?: null | string;
                entity?: {
                    title?: null | string;
                    titleOther?: null | string;
                    entityName?: null | string;
                };
                powerOfAttorney?: {
                    firstName?: null | string;
                    lastName?: null | string;
                    email?: null | string;
                };
                probate?: {
                    title?: null | string;
                    titleOther?: null | string;
                    estateName?: null | string;
                };
                trust?: {
                    title?: null | string;
                    titleOther?: null | string;
                    trustName?: null | string;
                };
                referralClientTypes?: {
                    referralBuyer: "true" | "false";
                    referralSeller: "true" | "false";
                    referralLandlord: "true" | "false";
                    referralTenant: "true" | "false";
                };
            }) & {
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
            }))[];
            referralType: "sending" | "receiving";
        };
        /** UpdateReferralBody */
        "def-43": components["schemas"]["def-41"];
        /** LatestReferralInteraction */
        "def-44": components["schemas"]["def-14"] & {
            status: null | (("active" | "activeCont" | "backUp" | "closed" | "comingSoon" | "expired" | "lost" | "offMarket" | "onMarket" | "pending" | "preListing" | "rejected" | "withdrawn" | "noStatus") | ("acceptancePending" | "accepted" | "accepting" | "active" | "activeCont" | "backUp" | "buyerCountered" | "cancellationPending" | "cancelled" | "closed" | "counterOfferSent" | "countering" | "handshake" | "noStatus" | "pending" | "ratified" | "rejected" | "sellerCountered" | "underReview") | ("active" | "activeCont" | "closed" | "comingSoon" | "expired" | "lost" | "onMarket" | "pending" | "preListing" | "rejected" | "withdrawn" | "backUp" | "cancelled" | "ratified"));
            userHasAccess: boolean;
        };
        /** ReferralResponse */
        "def-45": {
            id: string;
            notes: null | string;
            owner: string;
            teamId?: null | string;
            createdBy: string;
            /** Format: date-time */
            createdAt: string;
            updatedBy: string;
            /** Format: date-time */
            updatedAt: string;
        } & {
            /** @enum {string} */
            type: "referral";
            referralType: "sending" | "receiving";
            startDate: null | string;
            endDate: null | string;
            commissionType: null | ("AMOUNT" | "PERCENTAGE_LISTING_COMMISSION" | "PERCENTAGE_PURCHASE_COMMISSION" | "PERCENTAGE_ALL_COMMISSIONS");
            commissionValue: null | number;
            agreementStatus: null | (("partiallySigned" | "notFinalized") | ("completed" | "created" | "declined" | "delivered" | "failed" | "sending" | "sent" | "voided"));
            isArchived: boolean;
            latestInteraction: null | components["schemas"]["def-44"];
        };
        /** ReferralResponseWithContacts */
        "def-46": components["schemas"]["def-45"] & {
            contacts: {
                id: string;
                type: "agent" | "appraiser" | "attorney" | "client" | "closingAttorney" | "counterpartyAgent" | "counterpartyAttorney" | "counterpartyClient" | "counterpartyTransactionCoordinator" | "escrowOfficer" | "homeWarranty" | "lender" | "other" | "propertyManagingAgent" | "titleOfficer" | "transactionCoordinator";
                order: number;
                firstName?: null | string;
                lastName?: null | string;
                email?: null | string;
                cellPhone?: null | string;
                userId?: null | string;
                teamId?: null | string;
                avatar?: null | string;
                entityType?: null | string;
                entityName?: null | string;
            }[];
        };
        /** InitialsGroup */
        "def-47": {
            formation?: null | ("horizontal" | "vertical" | "grid");
            scale?: null | number;
        };
        /** CreateUserTemplateBody */
        "def-48": {
            name: string;
            appearsIn: ("listing" | "offer" | "landlord" | "tenant" | "dual" | "client_group" | "referral")[];
            market: "AZ" | "CA" | "CO" | "DC" | "FL" | "GA" | "KY" | "MD" | "MA" | "NJ" | "NY" | "NC" | "OH" | "OR" | "SC" | "TX" | "VA" | "WA";
            /** @default false */
            isShared: boolean;
            rootTeamId?: null | string;
        };
        /** UpdateUserTemplateBody */
        "def-49": {
            name?: string;
            isShared?: boolean;
            rootTeamId?: null | string;
        };
        /** UserTemplatesParams */
        "def-50": {
            userId: string;
        };
        /** UserTemplateParams */
        "def-51": {
            userId: string;
            interactionId: string;
        };
        /** UserTemplateQueryString */
        "def-52": {
            offset?: number;
            limit?: number;
        } & {
            facets?: string;
            sort?: string;
            isGlobal?: boolean;
        };
        /** UserTemplateResponse */
        "def-53": {
            id: string;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
            createdBy: string;
            updatedBy: string;
            owner: string;
        } & {
            name: string;
            appearsIn: ("listing" | "offer" | "landlord" | "tenant" | "dual" | "client_group" | "referral")[];
            market: "AZ" | "CA" | "CO" | "DC" | "FL" | "GA" | "KY" | "MD" | "MA" | "NJ" | "NY" | "NC" | "OH" | "OR" | "SC" | "TX" | "VA" | "WA";
            /** Format: uuid */
            owner: string;
            /** @enum {string} */
            type: "userTemplate";
            isShared: boolean;
            rootTeamId: null | string;
            documentCount: number;
        };
        /** UserTemplateResponseWithContactsModule */
        "def-54": components["schemas"]["def-53"] & {
            contacts: {
                externalId?: null | string;
                firstName?: null | string;
                lastName?: null | string;
                homePhone?: null | string;
                cellPhone?: null | string;
                fax?: null | string;
                email?: null | string;
                street1?: null | string;
                street2?: null | string;
                city?: null | string;
                state?: null | string;
                zip?: null | string;
                county?: null | string;
                avatar?: null | string;
                googleContactId?: null | string;
                followUpBossContactId?: null | string;
                userId?: null | string;
                teamId?: null | string;
                order?: number;
                contactSource?: null | string;
            }[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
